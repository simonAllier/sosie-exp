{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":116,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":207,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":126,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":238,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":124,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":9,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":203,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":224,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":74,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":23,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":131,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":70,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":220,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":62,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":165,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":167,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":16,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":209,"org.apache.commons.collections4.CollectionUtilsTest.select":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":71,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":53,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":152,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":106,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":83,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":13,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":80,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":141,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":140,"org.apache.commons.collections4.CollectionUtilsTest.intersection":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":228,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":211,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":32,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":48,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":6,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":78,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":4,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":117,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":44,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":119,"org.apache.commons.collections4.map.CompositeMapTest.testPut":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":82,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":202,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":14,"org.apache.commons.collections4.map.CompositeMapTest.testGet":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":132,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":188,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":210,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":39,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":229,"org.apache.commons.collections4.set.CompositeSetTest.testContains":160,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":81,"org.apache.commons.collections4.ListUtilsTest.testSelect":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":201,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":179,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":234,"org.apache.commons.collections4.CollectionUtilsTest.union":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":147,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":178,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":177,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":139,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":97,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":129,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":1,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":17,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":0,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":46,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":55,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":67,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":37,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":133,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":144,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":136,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":217,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":3,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":43,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":206,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":137,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":69,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":154,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":11,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":115,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":230,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":197,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":118,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":68,"org.apache.commons.collections4.map.SingletonMapTest.testClone":190,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":105,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":2,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":151,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":76,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":184,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":166,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":183,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":20,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":21,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":7,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":8,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":110,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":191},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[0],"tindex":"78e884f6-2e7e-11e6-a326-ef6143628623","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[1],"tindex":"78e94847-2e7e-11e6-a326-9b14ea5371d2","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"78e96f58-2e7e-11e6-a326-21d206b067db","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"78e99669-2e7e-11e6-a326-a75cdac77907","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:733","type":"CtMethodImpl","sourcecode":"protected void setNextNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next) {\n    if (next == next) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"next","header":"next"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:343","type":"CtBinaryOperatorImpl","sourcecode":"(answer != null) && (answer instanceof java.util.Map)"},"failures":[],"tindex":"78e9bd7a-2e7e-11e6-a326-9f1a37096268","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if ((value != null) && (answer instanceof java.util.Map)) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[2],"tindex":"78e9bd7b-2e7e-11e6-a326-51441ab4575b","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[3],"tindex":"78e9e48c-2e7e-11e6-a326-1b366267b988","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"78ea0b9d-2e7e-11e6-a326-b90bf7588243","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:508","type":"CtMethodImpl","sourcecode":"protected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            (int)--;\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtBinaryOperatorImpl","sourcecode":"(lastUsedIterator) == null"},"failures":[],"tindex":"78ea59be-2e7e-11e6-a326-432bfb84b4ac","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastUsedIterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"78ea80cf-2e7e-11e6-a326-ff7e7ee5c309","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"78eaa7e0-2e7e-11e6-a326-3100c0589cce","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound > bound) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"bound","bound":"bound"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"78eacef1-2e7e-11e6-a326-a75d4d9772a5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,1,187,188],"tindex":"78eaf602-2e7e-11e6-a326-89bc969ad857","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[189],"tindex":"78eaf603-2e7e-11e6-a326-db0099035823","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[190,191,192,193],"tindex":"78eb1d14-2e7e-11e6-a326-eb2bec38919d","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[172,194],"tindex":"78eb1d15-2e7e-11e6-a326-8518ba9de947","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (a != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"78eb4426-2e7e-11e6-a326-afa31f03ed41","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[],"tindex":"78eb6b37-2e7e-11e6-a326-ab3381c59490","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i > i) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"i","index":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[195],"tindex":"78eb6b38-2e7e-11e6-a326-e337cd720323","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"78eb9249-2e7e-11e6-a326-3b41b9dfd3b8","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"78eb924a-2e7e-11e6-a326-e9b19f4ff353","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if ((bitIndex < bitIndex) || (index > bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"bitIndex","endIndex":"bitIndex","index":"bitIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"78eb924b-2e7e-11e6-a326-0d2630379596","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[237],"tindex":"78ebb95c-2e7e-11e6-a326-034a30170e6a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[238],"tindex":"78ebb95d-2e7e-11e6-a326-4534f09e18d6","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":24,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}