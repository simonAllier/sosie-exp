{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":98,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":867,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":308,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":73,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":831,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":832,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":106,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":500,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":565,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":36,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":574,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":259,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":368,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":469,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":729,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":336,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":897,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":280,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":541,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":751,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":841,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":47,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":502,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":739,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":721,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":879,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":719,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":671,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":768,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":712,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":75,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":438,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":812,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":373,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":262,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":893,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":312,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":108,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":669,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":553,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":624,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":109,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":830,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":699,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":646,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":219,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":179,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":566,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":797,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":837,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":471,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":275,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":142,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":141,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":140,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":404,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":692,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":791,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":731,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":459,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":314,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":52,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":865,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":570,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":898,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":366,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":840,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":203,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":254,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":249,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":856,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":774,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":872,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":649,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":663,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":891,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":778,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":232,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":749,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":523,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":780,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":707,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":181,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":406,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":326,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":789,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":827,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":760,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":795,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":710,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":461,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":218,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":816,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":243,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":802,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":422,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":845,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":873,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":698,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":779,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":222,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":391,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":66,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":374,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":323,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":369,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":458,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":220,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":411,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":62,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":217,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":474,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":637,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":787,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":182,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":183,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":112,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":184,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":397,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":822,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":756,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":792,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":606,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":730,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":864,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":589,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":587,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":212,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":309,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":546,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":584,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":655,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":689,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":825,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":849,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":742,"org.apache.commons.collections4.IteratorUtilsTest.testToList":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":740,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":71,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":691,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":465,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":821,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":486,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":485,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":484,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":393,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":670,"org.apache.commons.collections4.map.LRUMapTest.testReset":453,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":107,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":810,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":263,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":53,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":880,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":686,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":776,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":414,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":191,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":876,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":466,"org.apache.commons.collections4.map.LinkedMapTest.testReset":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":256,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":394,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":441,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":475,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":653,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":258,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":761,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":664,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":796,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":844,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":198,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":197,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":363,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":866,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":513,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":820,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":890,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":175,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":804,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":625,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":434,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":354,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":135,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":367,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":807,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":236,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":25,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":851,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":860,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":543,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":549,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":829,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":274,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":853,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":168,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":356,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":679,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":530,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":770,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":169,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":642,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":805,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":582,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":639,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":237,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":348,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":231,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":783,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":117,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":76,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":244,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":402,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":316,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":758,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":463,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":823,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":202,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":562,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":601,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":600,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":599,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":675,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":195,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":270,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":694,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":377,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":413,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":836,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":881,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":728,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":645,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":214,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":652,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":439,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":614,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":410,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":581,"org.apache.commons.collections4.map.LinkedMapTest.testClone":407,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":445,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":558,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":503,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":799,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":588,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":165,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":241,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":848,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":785,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":744,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":285,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":467,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":455,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":748,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":382,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":125,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":835,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":672,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":735,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":417,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":736,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":899,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":550,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":818,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":213,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":496,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":325,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":385,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":395,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":678,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":48,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":746,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":834,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":77,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":225,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":775,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":658,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":58,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":57,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":371,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":221,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":137,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":297,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":350,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":415,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":28,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":315,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":340,"org.apache.commons.collections4.map.LRUMapTest.testLRU":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":610,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":224,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":139,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":554,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":839,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":282,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":608,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":528,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":517,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":819,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":525,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":480,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":623,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":617,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":870,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":612,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":450,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":855,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":177,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":894,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":576,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":693,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":27,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":273,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":665,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":683,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":578,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":889,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":88,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":246,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":869,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":504,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":506,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":5,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":877,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":488,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":568,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":79,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":253,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":296,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":888,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":293,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":786,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":526,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":226,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":14,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":847,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":701,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":603,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":616,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":569,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":605,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":604,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":717,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":420,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":666,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":575,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":883,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":516,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":35,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":149,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":809,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":33,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":376,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":307,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":556,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":813,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":524,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":585,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":620,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":268,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":753,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":215,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":194,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":384,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":884,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":703,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":561,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":493,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":651,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":278,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":365,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":318,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":611,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":535,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":339,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":67,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":667,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":512,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":690,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":815,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":765,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":29,"org.apache.commons.collections4.map.CompositeMapTest.testGet":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":688,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":896,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":250,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":750,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":522,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":364,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":507,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":26,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":78,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":843,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":687,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":714,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":189,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":319,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":752,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":882,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":793,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":800,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":1,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":230,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":697,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":129,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":571,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":638,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":696,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":551,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":801,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":643,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":423,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":242,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":101,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":99,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":447,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":593,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":763,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":592,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":449,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":591,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.map.LRUMapTest.testClone":452,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":875,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":306,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":759,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":324,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":426,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":158,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":42,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":846,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":648,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":294,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":12,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":437,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":360,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":573,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":788,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":811,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":557,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":618,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":545,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":857,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":594,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":595,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":533,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":784,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":874,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":89,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":885,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":798,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":44,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":806,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":498,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":724,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":711,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":641,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":656,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":435,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":119,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":871,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":20,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":842,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":150,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":567,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":162,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":111,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":501,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":515,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":206,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":542,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":153,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":208,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":647,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":379,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":113,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":509,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":685,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":432,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":353,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":424,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":266,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":878,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":505,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":597,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":497,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":622,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":640,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":302,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":132,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":333,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":762,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":265,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":4,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":401,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":715,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":538,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":544,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":754,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":476,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":814,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":380,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":858,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":628,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":284,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":590,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":621,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":633,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":346,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":854,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":17,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":18,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":764,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":892,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":862,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":398,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":187,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":462,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":8,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":521,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":602,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":794,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":747,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":861,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":824,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":722,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":803,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":317,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":808,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":50,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":657,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":772,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":392,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":511,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":87,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":295,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":540,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":706,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":383,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":64,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":781,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":233,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":272,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":859,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":23,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":216,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":577,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":741,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":734,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":769,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":868,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":723,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":532,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":127,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":110,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":11,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":16,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":386,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":607,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":338,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":120,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":138,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":743,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":790,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":817,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":826,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":154,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":659,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":777,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":477,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":598,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":329,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":151,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":328,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":700,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":850,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":321,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":375,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":895,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":709,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":499,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":287,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":564,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":863,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":725,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":399,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":720,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":104,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":613,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":313,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":552,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":310,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":347,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":886,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":580,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":483,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":833,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":619,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":400,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":481,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":482,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":767,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":289,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":355,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":390,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":887,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":632,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":457,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":559,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":520,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":85},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"3c2c42d8-2e9f-11e6-9b9e-29831d5530d9","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[0,1],"tindex":"3c2d5449-2e9f-11e6-9b9e-4f4ec4bddfa8","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"3c2d544a-2e9f-11e6-9b9e-b7ae37f1776b","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                {\n                    final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n                    if (shortObject == null) {\n                        return defaultValue;\n                    } \n                    return shortObject.shortValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"3c2d7b5b-2e9f-11e6-9b9e-2f3048e82b07","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll instanceof org.apache.commons.collections4.Bag) {\n                        return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n                    } \n                    return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"3c2da26c-2e9f-11e6-9b9e-df1a38e4a9a2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3c2da26d-2e9f-11e6-9b9e-c39ccc1f7d4e","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"3c2dc97e-2e9f-11e6-9b9e-7f3ed850d254","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    if (unknownObjectBehavior == null) {\n                        throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n                    } \n                    org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[2,3,4,5],"tindex":"3c2df08f-2e9f-11e6-9b9e-5ddf1e27db45","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[6,7,8,9,10],"tindex":"3c2e17a0-2e9f-11e6-9b9e-19781939976c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[2,3,4,5],"tindex":"3c2e3eb1-2e9f-11e6-9b9e-7f3895ebe613","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3c2e3eb2-2e9f-11e6-9b9e-1bb3a30a4852","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"3c2e65c3-2e9f-11e6-9b9e-4174153c2875","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[64],"tindex":"3c2e8cd4-2e9f-11e6-9b9e-ad195a9e594f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((map.size()) != 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"3c2eb3e5-2e9f-11e6-9b9e-e3dac0f74674","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[92,93,94,95,96,97],"tindex":"3c2f0206-2e9f-11e6-9b9e-4783fa9068b9","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"3c2f0207-2e9f-11e6-9b9e-69857037a6b8","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    if (unknownObjectBehavior == null) {\n                        throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n                    } \n                    org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"3c2f2918-2e9f-11e6-9b9e-4b31f471d4af","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[98,99,100,101,102],"tindex":"3c2f2919-2e9f-11e6-9b9e-f7a55e5ffbb2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"3c2f502a-2e9f-11e6-9b9e-63fee57f7f65","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[103],"tindex":"3c2f502b-2e9f-11e6-9b9e-9b624455ea94","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"3c2f773c-2e9f-11e6-9b9e-b12136eacba8","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3c2f773d-2e9f-11e6-9b9e-3784b73836eb","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[124,125,126],"tindex":"3c2f9e4e-2e9f-11e6-9b9e-ed0dd8bf90bb","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"3c2f9e4f-2e9f-11e6-9b9e-83252df13163","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[127,128,9,120],"tindex":"3c2fc460-2e9f-11e6-9b9e-475ca204cd0a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[129],"tindex":"3c2fc461-2e9f-11e6-9b9e-0b4e57918219","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[130,131,132,133],"tindex":"3c2feb72-2e9f-11e6-9b9e-7580ac7cac67","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[134,135,136],"tindex":"3c2feb73-2e9f-11e6-9b9e-ddcdfbf49f21","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"3c2feb74-2e9f-11e6-9b9e-49804173476b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"3c301285-2e9f-11e6-9b9e-4d98e6438406","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[149],"tindex":"3c301286-2e9f-11e6-9b9e-5de8164241ca","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"3c303997-2e9f-11e6-9b9e-e755d1d70a61","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[180],"tindex":"3c303998-2e9f-11e6-9b9e-110246094471","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"3c303999-2e9f-11e6-9b9e-ff0bbed6fab7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3c3060aa-2e9f-11e6-9b9e-b1940a776e42","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"3c3060ab-2e9f-11e6-9b9e-29e75126970c","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3c3087bc-2e9f-11e6-9b9e-6362d866743f","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"3c3087bd-2e9f-11e6-9b9e-f75101f82de0","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[211],"tindex":"3c3087be-2e9f-11e6-9b9e-1745c7ae5dbc","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[212],"tindex":"3c30aecf-2e9f-11e6-9b9e-4f8bb8d1c8a5","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[213],"tindex":"3c30aed0-2e9f-11e6-9b9e-6707d3b0e7d3","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"3c30aed1-2e9f-11e6-9b9e-6b0de0bebe9f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3c30d5e2-2e9f-11e6-9b9e-8552d66178d8","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[214],"tindex":"3c30d5e3-2e9f-11e6-9b9e-63181bc8136b","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"3c30d5e4-2e9f-11e6-9b9e-cf343dd87501","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3c30fcf5-2e9f-11e6-9b9e-9d363d530b14","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        {\n            if (map != null) {\n                {\n                    java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[215,216,217,218,219,220,221,222,223,224,225,226],"tindex":"3c30fcf6-2e9f-11e6-9b9e-c56b139a9be9","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"3c312407-2e9f-11e6-9b9e-09318844321e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key != null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3c312408-2e9f-11e6-9b9e-e790d885d488","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                {\n                    final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n                    if (shortObject == null) {\n                        return defaultValue;\n                    } \n                    return shortObject.shortValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"tindex":"3c312409-2e9f-11e6-9b9e-d5aa98462c55","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[366],"tindex":"3c314b1a-2e9f-11e6-9b9e-19a02efc69a4","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"3c31722b-2e9f-11e6-9b9e-05e71cb760fd","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"3c31722c-2e9f-11e6-9b9e-fbdfe49d6f3b","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((map.size()) != 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"3c31722d-2e9f-11e6-9b9e-f94a5ca1b8eb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[399],"tindex":"3c31993e-2e9f-11e6-9b9e-89745d120fec","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[267,268,269,305,306,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,400,401,402,403,404,0,405,406,1,407,408,409,410,411,412,65,66,413,414,415,67,416,417,418,68,69,419,70,71,420,421,72,73,422,423,74,75,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,76,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,77,78,468,469,470,79,471,472,473,80,81,474,82,83,84,475,85,86,476,477,87,88,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,89,90,91,495,496,497,498,499,500,501,502,503,308,309,310,346,347,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,129],"tindex":"3c31993f-2e9f-11e6-9b9e-ad03a03cdfdd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[528,529,530,531],"tindex":"3c31c050-2e9f-11e6-9b9e-1f4d9f570dc6","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[532],"tindex":"3c31e761-2e9f-11e6-9b9e-1975f0b14568","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"3c31e762-2e9f-11e6-9b9e-e39aa2198dc3","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584],"tindex":"3c31e763-2e9f-11e6-9b9e-8b1636a02934","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"3c320e74-2e9f-11e6-9b9e-a9c7e5fd4ea7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"3c320e75-2e9f-11e6-9b9e-592961dde75c","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[585],"tindex":"3c323586-2e9f-11e6-9b9e-5934c21f0038","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"3c323587-2e9f-11e6-9b9e-4d02d3b3c900","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[586,587],"tindex":"3c323588-2e9f-11e6-9b9e-e36a005047c8","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[588,589],"tindex":"3c323589-2e9f-11e6-9b9e-a7fc0cf9a4e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"3c325c9a-2e9f-11e6-9b9e-8bf0152ed9ce","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"3c325c9b-2e9f-11e6-9b9e-0d9d2f033eb9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,367,606,369,371,387,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,116,122,635,636,637,533,561,638,639,640,641,642,643],"tindex":"3c3283ac-2e9f-11e6-9b9e-6d3c8f77ec7b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[644],"tindex":"3c3283ad-2e9f-11e6-9b9e-dbd5dc1c5d6e","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"3c3283ae-2e9f-11e6-9b9e-afa6aa5d8ada","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[2,3,5],"tindex":"3c32aabf-2e9f-11e6-9b9e-37f43bafae7c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"3c32aac0-2e9f-11e6-9b9e-a1b8a4e11e4e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[645],"tindex":"3c32d1d1-2e9f-11e6-9b9e-398ae22bb66a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[5],"tindex":"3c32d1d2-2e9f-11e6-9b9e-ebf69ab06624","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,636,679,680,681],"tindex":"3c32f8e3-2e9f-11e6-9b9e-4d055badeb89","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[682,683,684,588,685,686,687,688,689,690,691,98,692,693,694,695,696,563,564,565,566,567,568,697,569,570,698,699,571,572,700,701,702,703,704,705,99,100,101,706,707,708,709,710,711,712,713,102,714,715,716,573,717,718,719,720,721,722,589,723,724,725,726,585,727,728,729,577,578,730,579,580,581,731,582,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,583,751],"tindex":"3c32f8e4-2e9f-11e6-9b9e-91907027cd6d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3c32f8e5-2e9f-11e6-9b9e-b5ef277fecc7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[752],"tindex":"3c331ff6-2e9f-11e6-9b9e-81fa3cfd22c5","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,753,754,755,756,757,758,759,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527],"tindex":"3c331ff7-2e9f-11e6-9b9e-13d787379177","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[760,761,762,763,764,765,766,767],"tindex":"3c331ff8-2e9f-11e6-9b9e-e5da9d146d29","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[768],"tindex":"3c334709-2e9f-11e6-9b9e-e5e06f016a5f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786],"tindex":"3c33470a-2e9f-11e6-9b9e-015f61cda89e","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"3c33470b-2e9f-11e6-9b9e-b9a0a452fb29","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"3c33470c-2e9f-11e6-9b9e-d912eb47a747","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[787,618,788,789,790,619,791,792,793,620,794,795,621,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829],"tindex":"3c336e1d-2e9f-11e6-9b9e-fd1cdff2ef91","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[830,831,832,833,834],"tindex":"3c336e1e-2e9f-11e6-9b9e-33e22c536eb9","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"3c336e1f-2e9f-11e6-9b9e-93bcb6350e6b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[835,836,837],"tindex":"3c339530-2e9f-11e6-9b9e-85115a9b7916","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[838,761,765,839],"tindex":"3c339531-2e9f-11e6-9b9e-a7d85010a612","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"3c339532-2e9f-11e6-9b9e-c5bbeea45c0f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[614,840,841,842,615,843,844,845,616,846,847,617,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880],"tindex":"3c33bc43-2e9f-11e6-9b9e-dbfcb05112f5","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896],"tindex":"3c33bc44-2e9f-11e6-9b9e-db697bb1aa5a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"3c33bc45-2e9f-11e6-9b9e-e596ec22df83","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"3c33bc46-2e9f-11e6-9b9e-3b330a198182","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[897,898,899],"tindex":"3c33e357-2e9f-11e6-9b9e-399b5a3622a2","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"3c33e358-2e9f-11e6-9b9e-f97b8b25d606","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        {\n            if (map != null) {\n                {\n                    java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"3c33e359-2e9f-11e6-9b9e-0f91b8cd88ef","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[768],"tindex":"3c33e35a-2e9f-11e6-9b9e-ed069a744cb8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3c340a6b-2e9f-11e6-9b9e-ff41a73d54db","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll instanceof org.apache.commons.collections4.Bag) {\n                        return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n                    } \n                    return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}