{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":98,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":90,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":77,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":80,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.CollectionUtilsTest.collect":153,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":18,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":89,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":163,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":117,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":146,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":49,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":35,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":120,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":109,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.CollectionUtilsTest.transform2":151,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":0,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":145,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":135,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":152,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":28,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":91,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":10,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":144,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":85,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":161,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":12,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":65,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":122,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":155,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":126,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":115,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":97,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":32,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":165,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":6,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":110},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) == 0"},"failures":[0],"tindex":"c5eb7e96-2ed7-11e6-875c-cff9eb460595","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"c5ec41e7-2ed7-11e6-875c-550858a9f7ef","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c5ec41e8-2ed7-11e6-875c-d99b7f9d9907","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"c5ec68f9-2ed7-11e6-875c-53e037207839","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"c5ec68fa-2ed7-11e6-875c-d9ef1d5b9c1c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"c5ec900b-2ed7-11e6-875c-a5db44e5759c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[1],"tindex":"c5ecb71c-2ed7-11e6-875c-7def3becf558","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 4) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"c5ecde2d-2ed7-11e6-875c-ebda09a2361a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (!(value instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[2],"tindex":"c5ecde2e-2ed7-11e6-875c-9bb5f01e5d1f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[3,4,5,6,7,8],"tindex":"c5ed053f-2ed7-11e6-875c-21b577a25d5c","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end1 == 0) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"c5ed5360-2ed7-11e6-875c-65386088a7d2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[],"tindex":"c5ed7a71-2ed7-11e6-875c-21c1aed18ef6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 0) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[9,10,11],"tindex":"c5eda182-2ed7-11e6-875c-d784dc569c51","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtBinaryOperatorImpl","sourcecode":"yFormerParent != null"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"c5edc893-2ed7-11e6-875c-25bccd5efde1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yFormerParent":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[],"tindex":"c5edc894-2ed7-11e6-875c-238ae881e40a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < index) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"c5edefa5-2ed7-11e6-875c-15fe74fcace3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c5ee16b6-2ed7-11e6-875c-6300b9473483","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"initialCapacity < 0"},"failures":[],"tindex":"c5ee16b7-2ed7-11e6-875c-c5cdd67381ff","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[16,17,57,58,84],"tindex":"c5ee3dc8-2ed7-11e6-875c-ff2ca0a3fb42","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c5ee64d9-2ed7-11e6-875c-d3d40467265e","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[150],"tindex":"c5ee64da-2ed7-11e6-875c-ad99ec079d93","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"c5ee8beb-2ed7-11e6-875c-c1332ecc992e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[151,152,153],"tindex":"c5eeb2fc-2ed7-11e6-875c-79bbca2f6ac5","method":{"position":"org.apache.commons.collections4.CollectionUtils:994","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.lang.Iterable<I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.collect(inputCollection, transformer, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[154,155],"tindex":"c5eeb2fd-2ed7-11e6-875c-d5e5732905a8","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:310","type":"CtBinaryOperatorImpl","sourcecode":"loop == null"},"failures":[],"tindex":"c5eeda0e-2ed7-11e6-875c-852eea24c28f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loop":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[156,157],"tindex":"c5eeda0f-2ed7-11e6-875c-37d63762a475","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"put"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[158],"tindex":"c5ef0120-2ed7-11e6-875c-2f39cd453104","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[159],"tindex":"c5ef0121-2ed7-11e6-875c-b7543c60d947","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[160],"tindex":"c5ef2832-2ed7-11e6-875c-19c3ec6673d0","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[161,162,163,164,165],"tindex":"c5ef2833-2ed7-11e6-875c-adc2dad66c75","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"label"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":30,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}