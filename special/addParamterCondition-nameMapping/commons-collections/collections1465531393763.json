{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":397,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":255,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":138,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":671,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":390,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":587,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":642,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":277,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":525,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":191,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":232,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":166,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":167,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":245,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":510,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":812,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":665,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":216,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":698,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":451,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":289,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":95,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":359,"org.apache.commons.collections4.ListUtilsTest.testLazyList":850,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":622,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":781,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":711,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":343,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":342,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":341,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":105,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":182,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":702,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":847,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":646,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":660,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":857,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":146,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":269,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":690,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":749,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":675,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":300,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":666,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":527,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":747,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":238,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":358,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":603,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":604,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":605,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":427,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":586,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":140,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":183,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":707,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":830,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":292,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":799,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":677,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":299,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":386,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":187,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":621,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":774,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":263,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":674,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":742,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":737,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":285,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":784,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":177,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":267,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":779,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":780,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":778,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":703,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":718,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":754,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":180,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":514,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":617,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":670,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":689,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":709,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":580,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":389,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":801,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":350,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEmptyMapCompatibility":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":731,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":814,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":643,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":355,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":20,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":394,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":625,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":686,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":372,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":798,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":210,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":353,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":449,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":162,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":349,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":817,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":65,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":408,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":562,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":458,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":433,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":251,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":819,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":141,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":672,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":838,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":310,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":128,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":773,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":823,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":636,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":535,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":288,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":805,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":837,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":836,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":785,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":835,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":284,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":502,"org.apache.commons.collections4.map.LRUMapTest.testReset":793,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":407,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":94,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":281,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":481,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":685,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":755,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":697,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":809,"org.apache.commons.collections4.map.LinkedMapTest.testReset":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":744,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":664,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":821,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":771,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":841,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":454,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":28,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":745,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":18,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":532,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":432,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":442,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":840,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":266,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":524,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":235,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":283,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":657,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":546,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":860,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":723,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":592,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":431,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":772,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":209,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":259,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":185,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":585,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":131,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":547,"org.apache.commons.collections4.map.HashedMapTest.testClone":577,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":531,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":663,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":732,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":256,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":576,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":331,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":504,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":803,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":90,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":220,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":332,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":651,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":650,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":652,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":581,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":783,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":450,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":631,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":298,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":200,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":151,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":662,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":661,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":83,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":620,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":705,"org.apache.commons.collections4.map.LinkedMapTest.testClone":623,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":444,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":465,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":862,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":356,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":729,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":445,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":813,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":751,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":598,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":810,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":795,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":218,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":286,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":311,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":641,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":753,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":858,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":377,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":688,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":290,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":351,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":807,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":119,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":306,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":859,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":111,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":501,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":354,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEmptyMapCompatibility":490,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":767,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":497,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":365,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":378,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":630,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":424,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":152,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":678,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":700,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":214,"org.apache.commons.collections4.map.LRUMapTest.testLRU":794,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":411,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":357,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":595,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":791,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":201,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":529,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":565,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":831,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":271,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":584,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":829,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":414,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":804,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":756,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":828,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":715,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":734,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":328,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":100,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":557,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":559,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":770,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":441,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":839,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":741,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":609,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":854,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":415,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":606,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":280,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":787,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":352,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":856,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":113,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":634,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":344,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":638,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":765,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":640,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":228,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":567,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":188,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":548,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":439,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":849,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":212,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":246,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":345,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":848,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":376,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":137,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":768,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":843,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":186,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":590,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":130,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":556,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":84,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":330,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":844,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":309,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":513,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":681,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":25,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":134,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":68,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":782,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":752,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":142,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":530,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":506,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":637,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":364,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":761,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":434,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":519,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":861,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":244,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":582,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":738,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":639,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":509,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":126,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":792,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":739,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":573,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":555,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":374,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":379,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":615,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":3,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":648,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":808,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":398,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":863,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":296,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":463,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":430,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":273,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":193,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":619,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":716,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":704,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":17,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":574,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":426,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":240,"org.apache.commons.collections4.list.TreeListTest.testRemove":315,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":132,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":776,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":775,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":321,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":383,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":217,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":777,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":129,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":730,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":213,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":713,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":515,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":521,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":627,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":539,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":139,"org.apache.commons.collections4.map.LRUMapTest.testClone":806,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":591,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":649,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":687,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":417,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":370,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":480,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":491,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":265,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":409,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":366,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":208,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":714,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":107,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":34,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSimpleSerialization":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":323,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":275,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":405,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":845,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":462,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":391,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":404,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":227,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":279,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":435,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":852,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":764,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":270,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":658,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":39,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":533,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":846,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":190,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":8,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":818,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":588,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":727,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":566,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":199,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":318,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":561,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":578,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":207,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":419,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":420,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":853,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":258,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":655,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":545,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":570,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":647,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":654,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":653,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":313,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":645,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":416,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":786,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":743,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":726,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":81,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":512,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":558,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":189,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":117,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":614,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":816,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":694,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":695,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":696,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":748,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":722,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":560,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":393,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":523,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":495,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":790,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":825,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":540,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":725,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":335,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":337,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":597,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":336,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":632,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":842,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":679,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":181,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":361,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":51,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":319,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":250,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":492,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":802,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":518,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":517,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":572,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":143,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":103,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":569,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":237,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":680,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":710,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":116,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":516,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":294,"org.apache.commons.collections4.set.CompositeSetTest.testContains":2,"org.apache.commons.collections4.CollectionUtilsTest.isFull":436,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":563,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":608,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":827,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":211,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":494,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":413,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":123,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":395,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":522,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":760,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":719,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":314,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":583,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":204,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":44,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":329,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":362,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":428,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":163,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":347,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":421,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":422,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":706,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":346,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":728,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":291,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":108,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":324,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":402,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":325,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":788,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":815,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":148,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":669,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":668,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":769,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":534,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":257,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":387,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":763,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":762,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":160,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":482,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":826,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":282,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":692,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":693,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":691,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":304,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":305,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":97,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":241,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":684,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":158,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":600,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":438,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":824,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":74,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":721,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":851,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":676,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":176,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":498,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":194,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":673,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":855,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":683,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":230,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":796,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":6,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":272,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":834,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":708,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":667,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":832,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":833,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":96,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":64,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":80,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":192,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":602,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":635,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":457,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":552,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":797,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":571,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":822},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"40d94d2f-2ec0-11e6-bd70-25de89930116","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((index >= 0) && (bitIndex < index)) {\n        {\n            if (index == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"40d9e970-2ec0-11e6-bd70-c58f0912905b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"40da1081-2ec0-11e6-bd70-9b51288ade71","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[73,74,75,76,77],"tindex":"40da3792-2ec0-11e6-bd70-819af435d0d4","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex < (fromIndex / 2)) {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex","index":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"40da5ea3-2ec0-11e6-bd70-5fd856c6beb1","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,93,53,54,94,55,95,56,57,58,59,60,61,62,63,64,65,66,67,68,69,96,97,98,99,70,71,72],"tindex":"40da85b4-2ec0-11e6-bd70-89ac3b25d3fa","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"40daacc5-2ec0-11e6-bd70-2fff140002d0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"40daacc6-2ec0-11e6-bd70-651bc93501ca","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:689","type":"CtBinaryOperatorImpl","sourcecode":"(current.right) == null"},"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"40dad3d7-2ec0-11e6-bd70-21611159b06b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == null) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"h","right":"h"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"tindex":"40db21f8-2ec0-11e6-bd70-096977905cf3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[],"tindex":"40db21f9-2ec0-11e6-bd70-3b7bebdb636f","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[197,198],"tindex":"40db490a-2ec0-11e6-bd70-efbd9b0a2407","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl","sourcecode":"(m == 0) || (n == 0)"},"failures":[],"tindex":"40db701b-2ec0-11e6-bd70-93263020e668","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if ((index == 0) || (index == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index","n":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[199],"tindex":"40db701c-2ec0-11e6-bd70-d76df4fa3e4d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,73,74,75,76,77,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"40db972d-2ec0-11e6-bd70-1f038f1ee8bb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index > 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtBinaryOperatorImpl","sourcecode":"(intersects.size()) > 0"},"failures":[],"tindex":"40dbbe3e-2ec0-11e6-bd70-d71cf843c24e","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"intersects":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl","sourcecode":"index >= (maxElements)"},"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,155,300,301,302,303,304,305,306,307,308,156,309,310,157,158,311,312,159,160,161,162,154,313],"tindex":"40dbe54f-2ec0-11e6-bd70-0b029c7d160d","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (lengthInBits >= otherLengthInBits) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"otherLengthInBits","index":"lengthInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"40dc3270-2ec0-11e6-bd70-f59e9c5f9767","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"40dc3271-2ec0-11e6-bd70-5d8fd68a3174","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[314,315,316,317],"tindex":"40dc3272-2ec0-11e6-bd70-757163bb1432","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[73,74,76,77],"tindex":"40dc5983-2ec0-11e6-bd70-f9e2d450a9a7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:199","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (fromIndexInclusive == 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndexInclusive , toIndexExclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[318,319,320,321],"tindex":"40dc8094-2ec0-11e6-bd70-79a864c191d9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[322,323,324,325,326,327,328,329,330],"tindex":"40dc8095-2ec0-11e6-bd70-4536d74783df","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"40dc8096-2ec0-11e6-bd70-d16d7f53d1af","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[331,332,333,334],"tindex":"40dc8097-2ec0-11e6-bd70-affb27ee13ff","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (null == value) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[335,336,337,338,339,340,341,342,343],"tindex":"40dca7a8-2ec0-11e6-bd70-c1b14d4327ed","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[121,344,134,142],"tindex":"40dca7a9-2ec0-11e6-bd70-83a2c9c295bf","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"40dca7aa-2ec0-11e6-bd70-83fa777ef786","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[345,346,347,348,349,350,351,352,353,354,355,356,357,358],"tindex":"40dccebb-2ec0-11e6-bd70-bba8cbb9f4de","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if ((input instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[359,360],"tindex":"40dccebc-2ec0-11e6-bd70-01401936d343","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"40dcf5cd-2ec0-11e6-bd70-1b2d4f9982b9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.lang.Byte) {\n        {\n            if ((o == null) || (o == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return containsKey(o);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"o","b":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"40dcf5ce-2ec0-11e6-bd70-dbdfc140ae73","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[361,362],"tindex":"40dcf5cf-2ec0-11e6-bd70-bd470ef65835","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[363,364,365,366,367,368,369],"tindex":"40dd1ce0-2ec0-11e6-bd70-0f5a1d395409","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (null == key) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[370],"tindex":"40dd1ce1-2ec0-11e6-bd70-bdb734a47f2d","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"40dd1ce2-2ec0-11e6-bd70-233930e0be6a","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[371,372,373,374,375,376],"tindex":"40dd43f3-2ec0-11e6-bd70-69c87632c4e4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"40dd43f4-2ec0-11e6-bd70-036f4fb3a610","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.set.CompositeSet.this.mutator) == null"},"failures":[],"tindex":"40dd43f5-2ec0-11e6-bd70-231b25fe8c4a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"40dd43f6-2ec0-11e6-bd70-374df724234d","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[],"tindex":"40dd6b07-2ec0-11e6-bd70-3f52070dc858","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[377],"tindex":"40dd6b08-2ec0-11e6-bd70-275feeab142d","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"40dd9219-2ec0-11e6-bd70-71019c034811","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[378,379],"tindex":"40dd921a-2ec0-11e6-bd70-253f3b44e2ec","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"40dd921b-2ec0-11e6-bd70-ff1bd0147b37","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[380,381,382,383,384,385],"tindex":"40ddb92c-2ec0-11e6-bd70-ffc46f6ce725","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[386,387,360,388,389,390,391,392,393,394],"tindex":"40ddb92d-2ec0-11e6-bd70-f3af73be0025","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"40ddb92e-2ec0-11e6-bd70-1fae66c37a31","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[395],"tindex":"40dde03f-2ec0-11e6-bd70-1faa7d317ee2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435],"tindex":"40dde040-2ec0-11e6-bd70-9533dc92e992","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[436],"tindex":"40de0751-2ec0-11e6-bd70-75c503aece85","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"40de0752-2ec0-11e6-bd70-59658cb21c7a","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[],"tindex":"40de0753-2ec0-11e6-bd70-550d82afa738","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"40de2e64-2ec0-11e6-bd70-43825dfac7f8","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if ((end < 0) || (index >= end)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"end","index":"end"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[437],"tindex":"40de2e65-2ec0-11e6-bd70-f57b86474ca0","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"40de2e66-2ec0-11e6-bd70-336c0596622e","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"40de5577-2ec0-11e6-bd70-5dfe31a9d33f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"40de5578-2ec0-11e6-bd70-9bd1218c120d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.lang.Number) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                        return true;\n                    } \n                    return getEntrySet().equals(obj);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[488,351,352],"tindex":"40de5579-2ec0-11e6-bd70-ada5557cc253","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"40de7c8a-2ec0-11e6-bd70-39bd11c73e0a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"40de7c8b-2ec0-11e6-bd70-03083306908c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[489,389],"tindex":"40de7c8c-2ec0-11e6-bd70-6d7e59add397","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"40de7c8d-2ec0-11e6-bd70-43ba281447f1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.lang.Number) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                        return true;\n                    } \n                    return getEntrySet().equals(obj);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"40dea39e-2ec0-11e6-bd70-2f7e2ca000c7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"tindex":"40dea39f-2ec0-11e6-bd70-b512870d7d59","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"40dea3a0-2ec0-11e6-bd70-170892e6c430","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"40decab1-2ec0-11e6-bd70-c1643d270430","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[],"tindex":"40decab2-2ec0-11e6-bd70-9f2afd86695e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[],"tindex":"40decab3-2ec0-11e6-bd70-a1419f44e08a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if (newCapacity < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n            if (newCapacity <= oldCapacity) {\n                return ;\n            } \n            if ((int) == 0) {\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n            } else {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                (int)++;\n                for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                    if (entry != null) {\n                        oldEntries[i] = null;\n                        do {\n                            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            final int int = hashIndex(entry.int, newCapacity);\n                            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                            newEntries[index] = entry;\n                            entry = next;\n                        } while (entry != null );\n                    } \n                }\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"newCapacity"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537],"tindex":"40def1c4-2ec0-11e6-bd70-c5f37e45df40","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[538,539,540],"tindex":"40df18d5-2ec0-11e6-bd70-c92c09ebc79f","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[541,542,378,543,544,545,546,363,547,548,549,550,551,552,553,554,555,556,557,558,559,379,560,561,562,563,364,564,565,566,567,568,569,570,571,572,573,197,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,365,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,366,660,661,662,663,664,665,666,438,439,440,441,442,443,444,445,446,447,667,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,668,669,670,671,672,673,674,675,676,677,678,331,679,680,681,682,683,332,684,685,686,687,688,689,690,691,692,693,694,695,696,333,697,698,334,367,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,368,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,538,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,369,842,843,844,845,539,540,846],"tindex":"40df18d6-2ec0-11e6-bd70-756c008d80c4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[847,848,849],"tindex":"40df3fe7-2ec0-11e6-bd70-adfd1bd850e6","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[850],"tindex":"40df3fe8-2ec0-11e6-bd70-63bb362a34af","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[851,530,531,535,852,537],"tindex":"40df3fe9-2ec0-11e6-bd70-e3a3bea1d469","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl","sourcecode":"(m == 0) || (n == 0)"},"failures":[],"tindex":"40df66fa-2ec0-11e6-bd70-2745f904b939","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count == 0) || (count == 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().add(object, count);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"count","n":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"40df66fb-2ec0-11e6-bd70-a9ba99025b31","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[853,854,855,856,857,858,859,860,861,862,863,864,45],"tindex":"40df66fc-2ec0-11e6-bd70-0d25f14d6537","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[710,711,708,709,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,368,745,746,747,748,749,750,751],"tindex":"40df66fd-2ec0-11e6-bd70-35bb2e3a3a69","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"40df8e0e-2ec0-11e6-bd70-373693424c8a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"40df8e0f-2ec0-11e6-bd70-9fd0db11d5d2","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (((key == null) && (key == null)) || ((object != null) && (object.equals(current)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"key","object":"key"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl","sourcecode":"(bitIndex >= 0) && (bitIndex < lengthInBits)"},"failures":[],"tindex":"40df8e10-2ec0-11e6-bd70-85c314dbde4b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((index >= 0) && (bitIndex < index)) {\n        {\n            if (index == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index","bitIndex":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"40dfb521-2ec0-11e6-bd70-05f194188668","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count == 0) || (count == 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().add(object, count);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"40dfb522-2ec0-11e6-bd70-cb9ae8bd7c3e","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            super.removeNode(node);\n            addNodeToCache(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[],"tindex":"40dfb523-2ec0-11e6-bd70-c5f095668ab6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.lang.Byte) {\n        {\n            if ((o == null) || (o == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return containsKey(o);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":85,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}