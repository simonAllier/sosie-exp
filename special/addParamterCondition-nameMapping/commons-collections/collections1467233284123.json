{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":447,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":520,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":671,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":699,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":59,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":730,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":568,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":758,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":660,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":454,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":30,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":497,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":205,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":319,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":583,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":666,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":733,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":270,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":415,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":341,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":238,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":402,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":361,"org.apache.commons.collections4.ListUtilsTest.testLazyList":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":423,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":450,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":514,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":392,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":90,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":488,"org.apache.commons.collections4.CollectionUtilsTest.select":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":482,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":61,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":315,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":709,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":43,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":677,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":581,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":532,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":353,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":767,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":679,"org.apache.commons.collections4.CollectionUtilsTest.intersection":22,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":464,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":171,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":607,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":173,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":720,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":549,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":154,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":330,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":439,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":662,"org.apache.commons.collections4.map.CompositeMapTest.testPut":29,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":413,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":193,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":246,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":97,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":462,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":603,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":754,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":347,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":283,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":503,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":243,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":596,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":659,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":594,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":593,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":590,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":433,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":140,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":25,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":93,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":280,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":608,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":35,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":366,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":622,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":480,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":195,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":626,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":713,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":299,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":429,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":463,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":257,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":68,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":192,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":288,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":639,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":208,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":530,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":127,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":749,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":408,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":697,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":649,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":724,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":241,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":333,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":727,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":444,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":680,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":386,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":424,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":446,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":510,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":199,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":374,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":718,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":222,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":221,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":220,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":673,"org.apache.commons.collections4.map.LRUMapTest.testReset":200,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":707,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":14,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":765,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":441,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":740,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":291,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":759,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":734,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":591,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":582,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":744,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":269,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":202,"org.apache.commons.collections4.map.LinkedMapTest.testReset":282,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":209,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":318,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":592,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":643,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":521,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":624,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":770,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":604,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":225,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":69,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":585,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":352,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":311,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":704,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":160,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":674,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":693,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":98,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":558,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":153,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":580,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":566,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":414,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":103,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":411,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":512,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":574,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":375,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":248,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":650,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":197,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":104,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":508,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":16,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":570,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":743,"org.apache.commons.collections4.SetUtilsTest.testHashCode":493,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":254,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":305,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":678,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":304,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":34,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":306,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":149,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":449,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":290,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":19,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":719,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":722,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":498,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":505,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":398,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":100,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":5,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":317,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":316,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":281,"org.apache.commons.collections4.list.TreeListTest.testBug35258":614,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":412,"org.apache.commons.collections4.ListUtilsTest.testSelect":4,"org.apache.commons.collections4.map.LinkedMapTest.testClone":286,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":571,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":27,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":239,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":562,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":438,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":525,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":721,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":206,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":428,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":166,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":203,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":190,"org.apache.commons.collections4.SetUtilsTest.testEquals":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":636,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":162,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":723,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":547,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":644,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":616,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":419,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":516,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":298,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":515,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":420,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":670,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":715,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":234,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":259,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":496,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":36,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":367,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":117,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":328,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":382,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":383,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":20,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":640,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":372,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":178,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":105,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":546,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":247,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":274,"org.apache.commons.collections4.map.LRUMapTest.testLRU":189,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":533,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":620,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":685,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":85,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":163,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":380,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":134,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":716,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":131,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":216,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":702,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":587,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":448,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":351,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":436,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":536,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":407,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":753,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":47,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":654,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":701,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":123,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":362,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":364,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":224,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":458,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":42,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":632,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":174,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":371,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":567,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":143,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":368,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":345,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":24,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":74,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":3,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":83,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":295,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":572,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":606,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":612,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":706,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":728,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":332,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":710,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":663,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":141,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":403,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":92,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":297,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":147,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":387,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":75,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":768,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":229,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":120,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":251,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":565,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":772,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":129,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":672,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":569,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":682,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":712,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.map.CompositeMapTest.testGet":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":443,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":686,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":124,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":184,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":9,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":37,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":302,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":519,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":95,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":252,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":683,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":635,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":752,"org.apache.commons.collections4.CollectionUtilsTest.union":21,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":81,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":625,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":285,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":764,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":459,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":465,"org.apache.commons.collections4.list.TreeListTest.testRemove":613,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":451,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":64,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":739,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":300,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":84,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":164,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":573,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":88,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":648,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":2,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":623,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":642,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":324,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":326,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.map.LRUMapTest.testClone":201,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":669,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":258,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":303,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":355,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":539,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":72,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":204,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":605,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":513,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":531,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":314,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":518,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":79,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":681,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":708,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":725,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":630,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":690,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":517,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":527,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":236,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":400,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":647,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":481,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":501,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":32,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":31,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":312,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":627,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":703,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":490,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":609,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":610,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":237,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":7,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":107,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":575,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":336,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":676,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":337,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":126,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":440,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":541,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":542,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":309,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":136,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":301,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":308,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":540,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":416,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":6,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":742,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":122,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":233,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":183,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":15,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":265,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":266,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":267,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":638,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":10,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":688,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":363,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":125,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":511,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":645,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":334,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":711,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":23,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":691,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":165,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":228,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":249,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":506,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":563,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":507,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":404,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":695,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":349,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":1,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":736,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":726,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":431,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":694,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":769,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":396,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":106,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":705,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":748,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":96,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":631,"org.apache.commons.collections4.set.CompositeSetTest.testContains":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":128,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":176,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":629,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":634,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":687,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":771,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":545,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":766,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":732,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":26,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":735,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":561,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":550,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":560,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":73,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":71,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":543,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":544,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":406,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":388,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":425,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":418,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":757,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":700,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":342,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":524,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":741,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":522,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":399,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":381,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":763,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":339,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":272,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":523,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":491,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":729,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":354,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":427,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":656,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":746,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":745,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":714,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":576,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":564,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":213,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":263,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":264,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":262,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":86,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":235,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":760,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":761,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":762,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":168,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":747,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":453,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":696,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":245,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":628,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":242,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":253,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":384,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":489,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":756,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":114,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":410,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":633,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":646,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":331,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":218,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":0,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":637,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":667,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":751,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":664,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":94,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":619,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":116,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":675,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":188,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":504,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":44},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0],"tindex":"c68ccc7c-3e3a-11e6-88c8-bf3640079d1b","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[1,2],"tindex":"c68d41ad-3e3a-11e6-88c8-c57c8cf6c827","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[3],"tindex":"c68d41ae-3e3a-11e6-88c8-f5ff4a036450","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"c68d41af-3e3a-11e6-88c8-b5f2f2940e9b","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"c68d67c0-3e3a-11e6-88c8-55f1d1a39953","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[63],"tindex":"c68d67c1-3e3a-11e6-88c8-4beb137ac7bc","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            if ((predicate2 == null) || (predicate2 == null)) {\n                {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n                    return onePredicate;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[64],"tindex":"c68d67c2-3e3a-11e6-88c8-2139c8b01eef","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"c68d8ed3-3e3a-11e6-88c8-e7d8c97f2b1a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[65,66,67,68],"tindex":"c68d8ed4-3e3a-11e6-88c8-c9856f93ec08","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"c68d8ed5-3e3a-11e6-88c8-1951d6fb3f0f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[],"tindex":"c68db5e6-3e3a-11e6-88c8-bd3dbd9fa4c9","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            if ((predicate2 == null) || (predicate2 == null)) {\n                {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n                    return onePredicate;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"c68db5e7-3e3a-11e6-88c8-553ce24d6937","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c68db5e8-3e3a-11e6-88c8-f739a446f701","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[69,70],"tindex":"c68ddcf9-3e3a-11e6-88c8-c51d6a31d4a5","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c68ddcfa-3e3a-11e6-88c8-bf028f3f7ad5","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[71],"tindex":"c68e040b-3e3a-11e6-88c8-5786af3a7057","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c68e040c-3e3a-11e6-88c8-f982f105a80c","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"c68e040d-3e3a-11e6-88c8-0b6149cb8dd4","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,36,37,204,205,206,207,38,39,208,40,41,42,43,209,44,210,211,45,212,213,46,47,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,48,49,50,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,51,52,290,291,292,293,53,54,294,55,56,57,295,296,58,297,298,59,299,300,60,61,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,62,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"c68e2b1e-3e3a-11e6-88c8-a1b69f9bb672","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[333],"tindex":"c68e2b1f-3e3a-11e6-88c8-579a88183dff","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[334,335,336,337],"tindex":"c68e5230-3e3a-11e6-88c8-e50da4769777","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[115,134],"tindex":"c68e5231-3e3a-11e6-88c8-71c944fb4793","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[338],"tindex":"c68e5232-3e3a-11e6-88c8-41f210560991","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[339],"tindex":"c68e7943-3e3a-11e6-88c8-4335543d88eb","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"c68e7944-3e3a-11e6-88c8-c75fa5bdd4fd","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[340],"tindex":"c68e7945-3e3a-11e6-88c8-b90bb60872df","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c68ea056-3e3a-11e6-88c8-3762b616f327","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"c68ea057-3e3a-11e6-88c8-a53dd20bf325","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c68ea058-3e3a-11e6-88c8-b790889b9177","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"c68ea059-3e3a-11e6-88c8-79d423f3b4be","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[357,358,359,360,361,362],"tindex":"c68ea05a-3e3a-11e6-88c8-a9ae73bf28dd","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return new java.util.Iterator<E>() {\n                        public boolean hasNext() {\n                            return iterator.hasNext();\n                        }\n\n                        public E next() {\n                            return iterator.next();\n                        }\n\n                        public void remove() {\n                            iterator.remove();\n                        }\n                    };\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[363,364],"tindex":"c68ec76b-3e3a-11e6-88c8-9b909ed8a2a9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"c68ec76c-3e3a-11e6-88c8-97cc0763fc35","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[383],"tindex":"c68ec76d-3e3a-11e6-88c8-49b1f138f8e1","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map == null) {\n        {\n            if ((map.size()) > 0) {\n                {\n                    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n                    while (iter.hasNext()) {\n                        final E E = iter.next();\n                        map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[384],"tindex":"c68ec76e-3e3a-11e6-88c8-0ff63606abff","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[385,386],"tindex":"c68eee7f-3e3a-11e6-88c8-2fccd82f5dee","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c68eee80-3e3a-11e6-88c8-7f33586e2ff2","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"c68eee81-3e3a-11e6-88c8-bfdfba56c6c4","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[247,254,257,272,275,276,277,278,279],"tindex":"c68eee82-3e3a-11e6-88c8-b9edc971b8e1","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[387,388,389],"tindex":"c68eee83-3e3a-11e6-88c8-19b6145e5bd2","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[363,364,390,391],"tindex":"c68f1594-3e3a-11e6-88c8-3d801dd5adcc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"c68f1595-3e3a-11e6-88c8-b30b7dc341ce","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[488],"tindex":"c68f1596-3e3a-11e6-88c8-f1afc8b02c88","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[489],"tindex":"c68f1597-3e3a-11e6-88c8-e786953b026a","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],"tindex":"c68f3ca8-3e3a-11e6-88c8-efad9ab1a7cc","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[],"tindex":"c68f3ca9-3e3a-11e6-88c8-3bc70834a4e5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"c68f3caa-3e3a-11e6-88c8-9d3f09d27204","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"c68f63bb-3e3a-11e6-88c8-6ddf5d7368ee","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return new java.util.Iterator<E>() {\n                        public boolean hasNext() {\n                            return iterator.hasNext();\n                        }\n\n                        public E next() {\n                            return iterator.next();\n                        }\n\n                        public void remove() {\n                            iterator.remove();\n                        }\n                    };\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[517,518],"tindex":"c68f63bc-3e3a-11e6-88c8-573c862eb937","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557],"tindex":"c68f63bd-3e3a-11e6-88c8-5b5db2ffa7a8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c68f63be-3e3a-11e6-88c8-afdc8abf3bcf","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[558,559],"tindex":"c68f8acf-3e3a-11e6-88c8-091afeff0f89","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[560,561,562,563,564,565,334,566,567,568,569,570,571,572],"tindex":"c68f8ad0-3e3a-11e6-88c8-f99f081e05c9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[573],"tindex":"c68f8ad1-3e3a-11e6-88c8-6dc2997cef6c","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"c68f8ad2-3e3a-11e6-88c8-e56af4b25ecc","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map == null) {\n        {\n            if ((map.size()) > 0) {\n                {\n                    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n                    while (iter.hasNext()) {\n                        final E E = iter.next();\n                        map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[331],"tindex":"c68f8ad3-3e3a-11e6-88c8-9b389d4ebf7b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[574],"tindex":"c68fb1e4-3e3a-11e6-88c8-85c5a5fb4510","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[36,51],"tindex":"c68fb1e5-3e3a-11e6-88c8-db6ba72e51e3","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c68fb1e6-3e3a-11e6-88c8-b18352035d0e","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602],"tindex":"c68fb1e7-3e3a-11e6-88c8-83c65a8240ab","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[603,604,605,606,607,608,609,610,611,578,586,587],"tindex":"c68fb1e8-3e3a-11e6-88c8-4b654767f842","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[612],"tindex":"c68fd8f9-3e3a-11e6-88c8-c3d6675aa702","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[613,614,615,616,617,618,619,620,621,622,623,624,625,626],"tindex":"c68fd8fa-3e3a-11e6-88c8-6b6e61b9bcd9","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[627,628,629,630],"tindex":"c68fd8fb-3e3a-11e6-88c8-ffbbe6281da0","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[444],"tindex":"c68fd8fc-3e3a-11e6-88c8-4532e5da2272","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c690000d-3e3a-11e6-88c8-61b9376c4e4c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[631],"tindex":"c690000e-3e3a-11e6-88c8-0b3f1c0e335e","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[632,633,634,635,636],"tindex":"c690000f-3e3a-11e6-88c8-853d14b967dd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"c6900010-3e3a-11e6-88c8-1d58f82166af","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[637],"tindex":"c6900011-3e3a-11e6-88c8-53edc289e794","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[638],"tindex":"c6902722-3e3a-11e6-88c8-cd6cc59058f1","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"c6902723-3e3a-11e6-88c8-138aaa6d3304","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[639],"tindex":"c6902724-3e3a-11e6-88c8-034cd29a757e","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c6902725-3e3a-11e6-88c8-6fec462c1ae6","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c6904e36-3e3a-11e6-88c8-9bcc23dfa5f1","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"c6904e37-3e3a-11e6-88c8-b7eaac77e660","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[640,641],"tindex":"c6904e38-3e3a-11e6-88c8-4b3a9596ccb1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[642,643,644,645,646,647,648,649],"tindex":"c6904e39-3e3a-11e6-88c8-271ca803ad35","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,348,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,649,728,729,730,731,732],"tindex":"c6904e3a-3e3a-11e6-88c8-273e2341b0aa","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"c6904e3b-3e3a-11e6-88c8-5d217708f33a","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[733],"tindex":"c690754c-3e3a-11e6-88c8-fd93d028d820","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[734],"tindex":"c690754d-3e3a-11e6-88c8-9b95fc372c28","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c690754e-3e3a-11e6-88c8-2f8acdd0b887","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[105,124],"tindex":"c690754f-3e3a-11e6-88c8-d5e17e8bc3ba","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[519,528,555,556],"tindex":"c6907550-3e3a-11e6-88c8-db4593f9ecd7","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"c6909c61-3e3a-11e6-88c8-b9c74c7ad384","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[735,736],"tindex":"c6909c62-3e3a-11e6-88c8-6f2fcdec5259","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[737,738,739,740,741,742,743,744,745,746,747,748,749],"tindex":"c6909c63-3e3a-11e6-88c8-f781d4615d1b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[750],"tindex":"c6909c64-3e3a-11e6-88c8-ebab922b3fce","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"c6909c65-3e3a-11e6-88c8-63e92dc02569","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[751,752,753],"tindex":"c6909c66-3e3a-11e6-88c8-051b53075443","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"c690c377-3e3a-11e6-88c8-857e132c277d","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:211","type":"CtBinaryOperatorImpl","sourcecode":"get == null"},"failures":[754,755],"tindex":"c690c378-3e3a-11e6-88c8-0bbb31995232","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get == null) {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[756,637,757,758,759],"tindex":"c690c379-3e3a-11e6-88c8-afe1dbed2584","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[760,761,762,763,764,765,766,767,768,769,770,771,772],"tindex":"c690c37a-3e3a-11e6-88c8-8f2352b4bdea","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[520,522,523,525,526,527,530,532,535,536,550,553,554,555,556,557],"tindex":"c690c37b-3e3a-11e6-88c8-a35bed39524f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"c690ea8c-3e3a-11e6-88c8-cf856bf1dd1c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"c690ea8d-3e3a-11e6-88c8-a3abbfbd95ba","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c690ea8e-3e3a-11e6-88c8-03cf2b82b7d9","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[186],"tindex":"c690ea8f-3e3a-11e6-88c8-8bc7074b9359","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229087068/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}