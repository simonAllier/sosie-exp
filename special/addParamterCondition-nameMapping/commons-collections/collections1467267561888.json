{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":764,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":802,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":946,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":1042,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":166,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":947,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":453,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":60,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":566,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":840,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":221,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":1020,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":685,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":1016,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":705,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":844,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":766,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":636,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":797,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":296,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":799,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":420,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":621,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSerializeDeserializeThenCompare":1050,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":574,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":1039,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":741,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":891,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":336,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":948,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":52,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":994,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":744,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":809,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":748,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":737,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":587,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":734,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":871,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":777,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":718,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":827,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":996,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":196,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":627,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":652,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":126,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":852,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":674,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":599,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":819,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":816,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":886,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":770,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":442,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":474,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":249,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":549,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":527,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":1047,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":235,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":868,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":845,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":666,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":530,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":315,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":673,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":730,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":861,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":823,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":156,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":854,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":934,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":368,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":408,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":659,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":378,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":727,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":692,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":987,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":178,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":895,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":373,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":119,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":774,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":904,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":843,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":471,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":306,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":915,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":443,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":1028,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":462,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":229,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":565,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":850,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":1009,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":880,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":404,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":781,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":61,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":95,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":769,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":456,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":457,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":644,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":91,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":1036,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":1032,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":570,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":821,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":628,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":1048,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":323,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":588,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":604,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":697,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":913,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":993,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":492,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":44,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":650,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":916,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":1013,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":742,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":805,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":738,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":259,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":690,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":310,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":800,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":217,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":303,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":762,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":536,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":860,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":124,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":713,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":480,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":763,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":662,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":726,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":85,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":379,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":1034,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":594,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":731,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":286,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":642,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":862,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":595,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":829,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":656,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":903,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":466,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":759,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":297,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalEmptyCollectionExists":1054,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":647,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":1038,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":419,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":1,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":148,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":1014,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":70,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":907,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":272,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":575,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":926,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":1027,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":928,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":927,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":985,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":204,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":981,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":302,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":901,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":818,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":620,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":257,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":918,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":399,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":691,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":787,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":585,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":159,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":804,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":509,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":234,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":814,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":291,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":512,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":191,"org.apache.commons.collections4.map.HashedMapTest.testClone":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":292,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":1024,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":293,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":847,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":667,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":893,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":452,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":853,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":531,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":617,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":725,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":911,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":529,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":393,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":405,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":317,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":919,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":1004,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":657,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":856,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":933,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":998,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":1029,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":922,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":127,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":986,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":230,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":545,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":139,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":632,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":830,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":437,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":826,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":472,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":832,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":855,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":672,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":944,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":945,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":874,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":943,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":905,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":581,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":957,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":992,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":743,"org.apache.commons.collections4.ListUtilsTest.testSelect":833,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":720,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":484,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":955,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":956,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":1008,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":431,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":450,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":828,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":757,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":290,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":752,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":244,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":997,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":519,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":1056,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":469,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":660,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":838,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":538,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":213,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":637,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalFullCollectionExists":1052,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":979,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToString":1045,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":446,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":532,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":683,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":535,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":669,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":202,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":579,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":808,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":1018,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":707,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":325,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":896,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":586,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":648,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":849,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":36,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":898,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":680,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":597,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":1001,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":596,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":1040,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":280,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":963,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":965,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":964,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":225,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":99,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":316,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":340,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":481,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":134,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":1019,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":610,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":241,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":939,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":515,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":589,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":940,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":941,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":180,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":203,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":889,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":909,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":169,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":626,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":304,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":789,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":756,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":495,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":351,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":746,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":865,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":526,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":1005,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":1025,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":704,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":407,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":506,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":6,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":13,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":470,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":40,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":364,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":429,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":801,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":767,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":414,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":883,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":655,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":381,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":869,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":732,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":1044,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":780,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":813,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":461,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":831,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":299,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":149,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":1051,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":812,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":553,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":768,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":715,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":360,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":479,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":716,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":275,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":571,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":105,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":1033,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":447,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":590,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":796,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":193,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":219,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":631,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":794,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":1012,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":795,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":284,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":273,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":995,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":197,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":890,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":925,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":740,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":924,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":923,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":866,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":287,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":228,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":176,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":87,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":921,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":559,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":848,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":557,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":1021,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":362,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":521,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":239,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":10,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":19,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":508,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":681,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":839,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":184,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":885,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":376,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":346,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":723,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":339,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":629,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":714,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":356,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":806,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":962,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":542,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":1015,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":733,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":199,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":77,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":177,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":231,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":977,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":88,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":347,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":791,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":603,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":183,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":412,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":687,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":1007,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":25,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":641,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":724,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":18,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":448,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":41,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":262,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":688,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":788,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":92,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":811,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":568,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":1041,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":670,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":728,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":864,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":449,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":3,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":132,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":622,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":439,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":942,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":147,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":1053,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":207,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":1006,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":978,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":773,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":894,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":684,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":835,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":552,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":949,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":555,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":950,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":951,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":888,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":369,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":765,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":371,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":1049,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":661,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":458,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":983,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":879,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":150,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":403,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":936,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":561,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":938,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":937,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":1003,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":1031,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":722,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":653,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":240,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":174,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSimpleSerialization":1055,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":961,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":959,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":140,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":960,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":274,"org.apache.commons.collections4.ListUtilsTest.testSubtract":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":790,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":465,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":822,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":576,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":90,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":155,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":81,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":108,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":779,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":834,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":859,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":35,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":671,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":551,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":930,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":931,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":932,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":390,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":115,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":1043,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":130,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":215,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":967,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":914,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":968,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":929,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":966,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":908,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":430,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":1046,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":483,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":510,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":878,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsSelfHashCode":1057,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":71,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":567,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":971,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":972,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":970,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":776,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":991,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":518,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":1023,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":359,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":990,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":591,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":857,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":170,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":954,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":953,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":952,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":825,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":870,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":279,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":698,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":550,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":55,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":75,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":837,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":267,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":520,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":125,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":634,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":984,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":912,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":1010,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":758,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":497,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":498,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":1022,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":793,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":496,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":464,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":686,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":717,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":269,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":745,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":402,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":39,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":706,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":899,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":910,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":618,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":295,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":696,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":846,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":398,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":640,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":428,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":42,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":569,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":654,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":729,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":635,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":435,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":974,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":836,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":976,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":975,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":920,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":709,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":887,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":735,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":318,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":902,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":783,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":784,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":113,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":785,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":1017,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":935,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":523,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":353,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":619,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":980,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":94,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":93,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":1037,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":815,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":1002,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":754,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":522,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":319,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":668,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":45,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":693,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":175,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":254,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":703,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":563,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":884,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":638,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":494,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":355,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":607,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":136,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":1000,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":395,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":232,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":501,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":100,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":223,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":842,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":516,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":507,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":803,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":141,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":999,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":606,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":499,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":750,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":747,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":511,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":167,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":810,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":487,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":503,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":875,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":900,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":695,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":778,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":782,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":969,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":639,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":873,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":308,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":338,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":307,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":363,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":958,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":488,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":1035,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":820,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":863,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":751,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":675,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":881,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":775,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":556,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":357,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":602,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":478,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":268,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":858,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":467,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":988,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":841,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":592,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":514,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":876,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":54,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":328,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":678,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":1030,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":679,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":771,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":57,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":152,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":630,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":989,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":564,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":600,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":246,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":427,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":867,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":162,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":736,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":397,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":906,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":314,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":973,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":311,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":322,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":16,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":528,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":824,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":982,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":792,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":892,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":248,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":712,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":882,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":444,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":643,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":17,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":897,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":1026,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":872,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":584,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":689,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":102,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":701},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0,1,2,3,4],"tindex":"95aed283-3e8a-11e6-97b8-31a7722029c3","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"95af20a4-3e8a-11e6-97b8-9dca3d3fe112","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[5],"tindex":"95af47b5-3e8a-11e6-97b8-551683340aae","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[6,7,8,9],"tindex":"95af47b6-3e8a-11e6-97b8-879059f88269","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[10,11,12,13],"tindex":"95af47b7-3e8a-11e6-97b8-b54f3cb37cf6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95af6ec8-3e8a-11e6-97b8-19d9dbc7b166","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"95af6ec9-3e8a-11e6-97b8-5f06cc428218","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"95af6eca-3e8a-11e6-97b8-81b7535167b1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"95af6ecb-3e8a-11e6-97b8-a70716ff26a0","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"95af95dc-3e8a-11e6-97b8-2f5f8dd7b520","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"95af95dd-3e8a-11e6-97b8-e5272b5f4500","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[26,27,28,29,30,31,32,14,15,33,34,16,35,17,36,37,18,19,38,39,40,41,42,43,44,45,20,21,46,47,22,48,23,49,50,24,25,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"95af95de-3e8a-11e6-97b8-f7628c1eff51","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,1,104,105,106,107,108,109,110,111,112,113,114,115,116,2,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,4,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"95afbcef-3e8a-11e6-97b8-335d5ef2dd26","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[225],"tindex":"95afbcf0-3e8a-11e6-97b8-a50b8bbf74bb","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"95afe401-3e8a-11e6-97b8-9feb98c8cbd9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                {\n                    if (obj == null) {\n                        {\n                            if ((obj instanceof java.util.Map.Entry) == false) {\n                                return false;\n                            } \n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                            final java.lang.Object java.lang.Object = entry.getValue();\n                            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n                            return (node != null) && (node.getKey().equals(value));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[26,27,28,29,30,31,32,14,15,33,34,16,35,17,36,37,18,19,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,51,52,53,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,54,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,55,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,56,57,58,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,63,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,64,387,65,66,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,67,68,69,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,70,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,71,449,72,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"tindex":"95afe402-3e8a-11e6-97b8-6582d3e6cc02","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95b00b13-3e8a-11e6-97b8-25acbd763e55","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"95b00b14-3e8a-11e6-97b8-59bce30ba190","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"95b00b15-3e8a-11e6-97b8-0b265166a372","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[474,475,476],"tindex":"95b00b16-3e8a-11e6-97b8-1955f211ee63","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"95b00b17-3e8a-11e6-97b8-2dd9ab1473f3","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"95b03228-3e8a-11e6-97b8-f580ccac441b","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[477,478,479,480],"tindex":"95b03229-3e8a-11e6-97b8-b7266016ea9d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"95b0322a-3e8a-11e6-97b8-5fd07440e169","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[481,482,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,174,175,176,177,178,179,180,181,182,183,4,184,185,186,187,188,483,484,485,486],"tindex":"95b0322b-3e8a-11e6-97b8-6197c7875cd1","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"tindex":"95b0322c-3e8a-11e6-97b8-bd40f14f5f26","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"95b0593d-3e8a-11e6-97b8-379aed7927b2","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = decorated().size();\n                    if (index < size) {\n                        E E = decorated().get(index);\n                        if (object == null) {\n                            object = org.apache.commons.collections4.Factory<? extends E>.create();\n                            decorated().set(index, object);\n                            return object;\n                        } \n                        return object;\n                    } \n                    for (int int = size ; i < index ; i++) {\n                        decorated().add(null);\n                    }\n                    final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().add(object);\n                    return object;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"95b0593e-3e8a-11e6-97b8-5d468c2f91ce","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95b0593f-3e8a-11e6-97b8-cb6f7788b186","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"95b05940-3e8a-11e6-97b8-d13269d0e536","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[503,504,505,506,507,508,509,510,511],"tindex":"95b08051-3e8a-11e6-97b8-1b558224b256","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    return decorated().getKey(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[512,513,514,515],"tindex":"95b08052-3e8a-11e6-97b8-41299946d3c2","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[516,517],"tindex":"95b08053-3e8a-11e6-97b8-b9c4e3b8aff6","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[207,518],"tindex":"95b08054-3e8a-11e6-97b8-dbbae7245e97","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"95b08055-3e8a-11e6-97b8-a32f9d1f875f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"95b0a766-3e8a-11e6-97b8-85f9506652bb","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"95b0a767-3e8a-11e6-97b8-9fc28355bc81","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[519,520,521],"tindex":"95b0a768-3e8a-11e6-97b8-dff8fd1d41b3","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"95b0a769-3e8a-11e6-97b8-c11ec0f006cb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"95b0a76a-3e8a-11e6-97b8-a53dad950c44","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"95b0ce7b-3e8a-11e6-97b8-694624145447","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"95b0ce7c-3e8a-11e6-97b8-af63c1f1b48d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                {\n                    if (obj == null) {\n                        {\n                            if ((obj instanceof java.util.Map.Entry) == false) {\n                                return false;\n                            } \n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                            final java.lang.Object java.lang.Object = entry.getValue();\n                            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n                            return (node != null) && (node.getKey().equals(value));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[571,490,493,572,573],"tindex":"95b0ce7d-3e8a-11e6-97b8-65b27a98bd2a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"95b0f58e-3e8a-11e6-97b8-01f9daca886c","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"95b0f58f-3e8a-11e6-97b8-33f6198c5683","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"95b0f590-3e8a-11e6-97b8-c9d4e183e6df","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[574,575,576,577,106,155,173,190,578,579,580,581,582,583,584,585,586,587,588,589],"tindex":"95b0f591-3e8a-11e6-97b8-6daf3453546f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"95b0f592-3e8a-11e6-97b8-85cfb257ad96","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[590],"tindex":"95b11ca3-3e8a-11e6-97b8-0d381204e6fc","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                    } \n                    for (int int = 0 ; i < (closures.int) ; i++) {\n                        if ((closures[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"95b11ca4-3e8a-11e6-97b8-35900e7e6535","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[591],"tindex":"95b11ca5-3e8a-11e6-97b8-67557d5dd75a","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"95b11ca6-3e8a-11e6-97b8-79c20cf35ebd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[617,618],"tindex":"95b143b7-3e8a-11e6-97b8-b751eebf9724","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.lang.Object[]) {\n                {\n                    final boolean boolean = super.remove(object);\n                    if (removed) {\n                        removeFromIndex(((C)(object)));\n                    } \n                    return removed;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[54,266,277,303,304,347,358,384,385],"tindex":"95b16ac8-3e8a-11e6-97b8-83212417e598","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,485,586,639,640,641,642,643,644,645,646,647,648,649,650],"tindex":"95b16ac9-3e8a-11e6-97b8-23893552f1d8","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[651],"tindex":"95b16aca-3e8a-11e6-97b8-c33ffd5e4d3d","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[652,653,654],"tindex":"95b16acb-3e8a-11e6-97b8-999e0b08b070","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[429,70,430],"tindex":"95b191dc-3e8a-11e6-97b8-a1073dd9f98f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"95b191dd-3e8a-11e6-97b8-9128653400c6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                    } \n                    for (int int = 0 ; i < (closures.int) ; i++) {\n                        if ((closures[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"95b191de-3e8a-11e6-97b8-4bf25c5da1b0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[655,656,657,658,592,593,594,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,595,674,675,676,677,678,679,596,597,680,598,681,682,599,600,683,684,601,602,603,604,605,685,686],"tindex":"95b191df-3e8a-11e6-97b8-ff49136a2695","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[231,232,233,234,235,236,237,239,51,241,242,687,688,689,690,271,272,273,274,275,276,277,279,55,283,284,691,692,693,694,695,696,697,698,699,700,652,701,702,703,704,705,706,707,708,313,314,316,317,318,321,56,323,324,709,710,711,712,713,714,715,716,60,717,718,719,720,721,722,352,353,354,355,356,357,358,360,63,364,365,723,724,725,726,393,394,395,396,397,398,399,401,67,403,404,727,728,729,730,439,440,441,442,443,444,445,447,71,450,451,731,732,733],"tindex":"95b1b8f0-3e8a-11e6-97b8-0d3aee99c103","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"95b1b8f1-3e8a-11e6-97b8-e537093ad092","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[734,735,736,737,522,738,503,504,505,739,740,523,524,741,525,526,742,527,528,529,743,530,531,744,745,746,747,532,533,534,535,748,749,750,536,751,752,753,537,754,538,539,540,755,756,541,757,758,759,760,761,762,542,763,764,543,544,545,546,765,547,548,766,549,550,551,767,552,553,768,554,769,770,555,556,771,772,773,557,558,559,560,561,562,563,774,775,564,565,776,777,566,567,568,569,570],"tindex":"95b1b8f2-3e8a-11e6-97b8-4f93656dcd15","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[660,661,663,664,665,668,670,673,595,677,678,679,596,597,680,602,778,779,474,780,781,782,783,784,785,786,787,788,789,790,791,792,793,608,794,795,796,797,798,799,613],"tindex":"95b1b8f3-3e8a-11e6-97b8-e58e914313dc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"95b1e004-3e8a-11e6-97b8-298d574f5119","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end1 < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[252,265,800,334,801,346,414,426],"tindex":"95b1e005-3e8a-11e6-97b8-7f24cbdbfef8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[802,487,488,489,490,491,492,493,494,495,499,500,501,803,804,502,805,806,807],"tindex":"95b1e006-3e8a-11e6-97b8-7b4e1a528d7d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[780],"tindex":"95b20717-3e8a-11e6-97b8-11462bfb3b42","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95b20718-3e8a-11e6-97b8-f7bcc0821640","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"95b20719-3e8a-11e6-97b8-5d5132f6bd3e","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"95b2071a-3e8a-11e6-97b8-993ff9436fa2","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[738,757,564,566,568,569,570],"tindex":"95b2071b-3e8a-11e6-97b8-07dd42263062","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"95b2071c-3e8a-11e6-97b8-f71ad20950cb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"95b2071d-3e8a-11e6-97b8-379e9d43eaf5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                {\n                    if (obj == null) {\n                        {\n                            if ((obj instanceof java.util.Map.Entry) == false) {\n                                return false;\n                            } \n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                            final java.lang.Object java.lang.Object = entry.getValue();\n                            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n                            return (node != null) && (node.getKey().equals(value));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[808],"tindex":"95b22e2e-3e8a-11e6-97b8-e3aa481b8eab","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[809,810,811,812,813,814,156,165,815,816,817,818,819,820,174,183],"tindex":"95b22e2f-3e8a-11e6-97b8-03f7e951e0a8","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[821],"tindex":"95b22e30-3e8a-11e6-97b8-732fb7a9020a","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[430],"tindex":"95b22e31-3e8a-11e6-97b8-1b33ede5c029","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95b25542-3e8a-11e6-97b8-4daa3ef17798","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"95b25543-3e8a-11e6-97b8-09944a48b82d","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = decorated().size();\n                    if (index < size) {\n                        E E = decorated().get(index);\n                        if (object == null) {\n                            object = org.apache.commons.collections4.Factory<? extends E>.create();\n                            decorated().set(index, object);\n                            return object;\n                        } \n                        return object;\n                    } \n                    for (int int = size ; i < index ; i++) {\n                        decorated().add(null);\n                    }\n                    final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().add(object);\n                    return object;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[822,823],"tindex":"95b25544-3e8a-11e6-97b8-978a6eee28f4","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"95b25545-3e8a-11e6-97b8-9f8073027184","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[824,825],"tindex":"95b25546-3e8a-11e6-97b8-fdd65ef2d58f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[826,210],"tindex":"95b25547-3e8a-11e6-97b8-bb984ef4a52c","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[827,828],"tindex":"95b27c58-3e8a-11e6-97b8-7d2d574e5824","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[829,830,831],"tindex":"95b27c59-3e8a-11e6-97b8-e5ba9d275474","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"95b27c5a-3e8a-11e6-97b8-e1324cc5e7f7","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.lang.Object[]) {\n                {\n                    final boolean boolean = super.remove(object);\n                    if (removed) {\n                        removeFromIndex(((C)(object)));\n                    } \n                    return removed;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[832],"tindex":"95b27c5b-3e8a-11e6-97b8-23d25981af2d","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"95b27c5c-3e8a-11e6-97b8-cd10529f786b","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[428,70],"tindex":"95b27c5d-3e8a-11e6-97b8-518d8165edad","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"95b2a36e-3e8a-11e6-97b8-dfe2ebd6f0f2","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[833],"tindex":"95b2a36f-3e8a-11e6-97b8-d95454c7ade3","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"95b2a370-3e8a-11e6-97b8-533bf0489358","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    return decorated().getKey(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[834],"tindex":"95b2a371-3e8a-11e6-97b8-4fea34fd177c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (c == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[835,836,837,838,481,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,482,874,875,876,877,878,879,880,881,882,883,884,885,78,80,81,83,86,88,886,887,888,889,890,891,892,96,97,99,101,893,894,895,896,108,110,111,113,116,118,897,125,127,128,130,133,136,144,145,147,149,898,899,900,901,902,903,904,905,906,809,907,813,908,157,159,160,162,165,168,909,910,815,911,819,912,175,177,178,180,183,185,913,914,915,916,917,918,192,194,195,197,200,203,826,210,212,213,215,218,221,919,533,534,535,748,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,483,994,995,484,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,620,1013,628,635,636,485,639,642,643,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,486,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037],"tindex":"95b2a372-3e8a-11e6-97b8-9dc9f9f8b9c3","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[237,261,262,319,343,344,715,1038,1039,65,64,399,423,424,426],"tindex":"95b2ca83-3e8a-11e6-97b8-8f6b6d40ab79","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[1040],"tindex":"95b2ca84-3e8a-11e6-97b8-8dce084e8609","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map == null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[1041,919,1023,1042,1043,1044,1045,1046,1025,1026,1047,1048,486,588,1027,1049,1050,1028,1029,1051,1052,1053,1054,1055,1056,1057],"tindex":"95b2ca85-3e8a-11e6-97b8-df0939dc2d74","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"95b2ca86-3e8a-11e6-97b8-29d9c224d566","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}