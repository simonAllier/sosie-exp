{"failureDictionary":{"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":72,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":627,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":86,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":216,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":381,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":588,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":577,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":118,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":449,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":656,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":325,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":516,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":339,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":61,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":525,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":684,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":333,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":604,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":255,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":464,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":471,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":616,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":377,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":530,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":386,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":299,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":399,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":27,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":246,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":187,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":344,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":162,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":443,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":67,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":287,"org.apache.commons.collections4.CollectionUtilsTest.get":157,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":419,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":382,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":629,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":145,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":388,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":463,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":490,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":227,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":251,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":511,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":612,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":233,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":265,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":552,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":97,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":64,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":672,"org.apache.commons.collections4.CollectionUtilsTest.select":152,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":249,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":283,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":496,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":495,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":397,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":373,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":554,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":601,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":96,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":679,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":38,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":613,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":492,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":531,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":609,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":517,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":40,"org.apache.commons.collections4.CollectionUtilsTest.intersection":160,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":400,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":447,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":587,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":540,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":688,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":420,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":378,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":462,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":107,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":392,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":427,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":361,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":603,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":434,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":371,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":347,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":451,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":606,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":266,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":666,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":3,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":332,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":637,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":276,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":524,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.CompositeMapTest.testPut":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":99,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":316,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":633,"org.apache.commons.collections4.map.CompositeMapTest.testGet":176,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":262,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":270,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":21,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":124,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":84,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":428,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":383,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":319,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":410,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":126,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":675,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":536,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":479,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":580,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":422,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":171,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":0,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":200,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":439,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":599,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":213,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":557,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":331,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":317,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":44,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":60,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":273,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.CollectionUtilsTest.union":159,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":286,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":683,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":294,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":209,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":535,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":615,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":563,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":229,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":582,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":306,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":597,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":327,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":183,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":308,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":432,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":506,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":384,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":504,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":650,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":651,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":405,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":250,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":59,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":202,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":611,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":538,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":690,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":574,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":320,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":133,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":568,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":573,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":281,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":334,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":1,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":321,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":481,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":261,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":514,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":483,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":482,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":510,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":509,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":543,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":528,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":444,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":70,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":256,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":636,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":22,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":634,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":689,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":459,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":635,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":304,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":549,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":123,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":277,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":353,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":253,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":207,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":455,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":275,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":355,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":307,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":620,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":56,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":527,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":83,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":431,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":2,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":380,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":484,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":668,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":485,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":486,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":111,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":285,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":429,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":430,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":114,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":32,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":112,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":234,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":398,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":647,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":645,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":76,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":621,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":237,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":550,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":572,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":657,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":642,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":643,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":641,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":105,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":512,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":12,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":74,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":69,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":341,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":368,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":94,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":180,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":500,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":533,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":623,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":13,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":147,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":179,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":293,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":560,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":417,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":433,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":364,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":467,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":618,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":90,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":626,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":625,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":624,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":236,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":605,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":230,"org.apache.commons.collections4.ListUtilsTest.testHashCode":326,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":154,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":379,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":231,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":423,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":351,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":584,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":440,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":169,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":453,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":671,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":413,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":523,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":217,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":669,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":37,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":298,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":569,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":354,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":225,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":282,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":241,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":667,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":678,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":314,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":539,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":475,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":505,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":477,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":476,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":570,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":518,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":470,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":11,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":168,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":91,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":681,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":310,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":465,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":670,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":146,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":75,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":148,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":79,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":607,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":122,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":303,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":181,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":441,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":374,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":172,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":149,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":49,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":50,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":322,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":501,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":460,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":271,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":312,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":394,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":33,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":362,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":359,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":357,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":98,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":665,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":51,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":352,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":161,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":404,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":522,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":529,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":544,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":680,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":77,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":630,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":407,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":583,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":632,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":631,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":491,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":58,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":617,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":478,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":292,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":556,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":278,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":445,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":507,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":519,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":480,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":409,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":493,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":39,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":571,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":182,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":565,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":155,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":515,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":674,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":156,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":106,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":421,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":581,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":80,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":348,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":498,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":92,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":497,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":594,"org.apache.commons.collections4.set.CompositeSetTest.testContains":170,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":295,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":301,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":654,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":211,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":395,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":578,"org.apache.commons.collections4.ListUtilsTest.testSelect":166,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":340,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":553,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":130,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":336,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":165,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":652,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":406,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":653,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":25,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":48,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":537,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":35,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":219,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":52,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":686,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":120,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":164,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":108,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":189,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":221,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":438,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":220,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":676,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":330,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":349,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":546,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":390,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":555,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":258,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":214,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":31,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":659,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":585,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":87,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":239,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":110,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":247,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":564,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":328,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":435,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":595,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":437,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":290,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":436,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":350,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":532,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":592,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":425,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":365,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":655,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":513,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":117,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":488,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":598,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":487,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":71,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":210,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":102,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":575,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":385,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":520,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":448,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":54,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":387,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":658,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":454,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":337,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":619,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":610,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":254,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":558,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":589,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":10,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":288,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":593,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":15,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":14,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":324,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":158,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":356,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":508,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":466,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":685,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":638,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":559,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":640,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":639,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":369,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":244,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":376,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":602,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":345,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":82,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":586,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":687,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":46,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":521,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":457,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":296,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":335,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":472,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":473,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":663,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":127,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":644,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":474,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":103,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":318,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":358,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":411,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":309,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":89,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":184,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":393,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":235,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":567,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":268,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":389,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":223,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":458,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":65,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":153,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":391,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":576,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":534,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":36,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":503,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":590,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":545,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":502,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":424,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":55,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":329,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":682,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":469,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":660},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"98a73fb3-3e8c-11e6-9ec6-596fc3bdf78f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"98a78dd4-3e8c-11e6-9ec6-25e9187826bf","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1,2,3],"tindex":"98a78dd5-3e8c-11e6-9ec6-dd52b8963579","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"98a7b4e6-3e8c-11e6-9ec6-dba1565b51c6","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[4,5,6,7,8,9],"tindex":"98a7b4e7-3e8c-11e6-9ec6-71d41e310cc6","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"98a7dbf8-3e8c-11e6-9ec6-b5f0347ce545","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"98a7dbf9-3e8c-11e6-9ec6-896eadc138c7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"98a8030a-3e8c-11e6-9ec6-8bac3679e408","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[35],"tindex":"98a82a1b-3e8c-11e6-9ec6-f991f956c7da","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"98a82a1c-3e8c-11e6-9ec6-5b5c60a5bdb4","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"98a8512d-3e8c-11e6-9ec6-273ffe950324","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"98a8512e-3e8c-11e6-9ec6-599bef563914","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"98a8512f-3e8c-11e6-9ec6-19b1bc4714f3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[121],"tindex":"98a85130-3e8c-11e6-9ec6-31d579a59cc3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[122],"tindex":"98a87841-3e8c-11e6-9ec6-d34d8253e54d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"98a87842-3e8c-11e6-9ec6-ef405d85c63c","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:94","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"98a87843-3e8c-11e6-9ec6-9bba79bf540d","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"98a87844-3e8c-11e6-9ec6-a5e9772318d8","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[17,135,28,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"98a87845-3e8c-11e6-9ec6-0f95a6080a8f","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[208],"tindex":"98a89f56-3e8c-11e6-9ec6-6155a633f567","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[209,210,211],"tindex":"98a89f57-3e8c-11e6-9ec6-8b0733dceb18","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[212],"tindex":"98a89f58-3e8c-11e6-9ec6-11f9f0686574","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[213],"tindex":"98a89f59-3e8c-11e6-9ec6-01978c069655","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[214,215,216,217,218,219,220,221,222,223],"tindex":"98a8c66a-3e8c-11e6-9ec6-d77c4bc72410","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"98a8c66b-3e8c-11e6-9ec6-8119cdc62092","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"98a8c66c-3e8c-11e6-9ec6-7d2bec39d029","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"98a8c66d-3e8c-11e6-9ec6-e518843323c6","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[236,237],"tindex":"98a8c66e-3e8c-11e6-9ec6-35e121c44f3d","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[218],"tindex":"98a8ed7f-3e8c-11e6-9ec6-e796ff971228","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"98a8ed80-3e8c-11e6-9ec6-0b226c380cce","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return false;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"98a8ed81-3e8c-11e6-9ec6-111efe97f255","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"98a8ed82-3e8c-11e6-9ec6-d773b30d164b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (k == null) {\n                        return false;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[238,239],"tindex":"98a91493-3e8c-11e6-9ec6-e1508b9dd0fe","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[215],"tindex":"98a91494-3e8c-11e6-9ec6-495b13920b73","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"98a91495-3e8c-11e6-9ec6-a5d234a2b004","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[148,151,153,160,163,164,168,169,170,171,172,173,176,177,178,179,180,181,182,183],"tindex":"98a91496-3e8c-11e6-9ec6-6df26fff7132","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"98a91497-3e8c-11e6-9ec6-05e4c34c88ae","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[240,21,22,241,242,243,24,244,32,33],"tindex":"98a93ba8-3e8c-11e6-9ec6-9797e8150a8e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"98a93ba9-3e8c-11e6-9ec6-af7a312ad282","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"98a93baa-3e8c-11e6-9ec6-3df80b8ac032","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtBinaryOperatorImpl","sourcecode":"(count <= 0) || (closure == null)"},"failures":[245],"tindex":"98a93bab-3e8c-11e6-9ec6-3797aad5e0cc","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((count <= 0) || (closure == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count","closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[246,247,248],"tindex":"98a93bac-3e8c-11e6-9ec6-8fde3a036a49","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[215,216],"tindex":"98a93bad-3e8c-11e6-9ec6-bb3271ddee6f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[249],"tindex":"98a962be-3e8c-11e6-9ec6-793277bc7698","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"98a962bf-3e8c-11e6-9ec6-1b854ccc7273","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[250,251,252,253],"tindex":"98a962c0-3e8c-11e6-9ec6-1d08344dcadf","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[254,255,256,257,258,259],"tindex":"98a962c1-3e8c-11e6-9ec6-87517e35e61c","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"98a989d2-3e8c-11e6-9ec6-c754d9d164df","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Float) {\n                        return ((java.lang.Float)(answer));\n                    } \n                    return java.lang.Float.valueOf(answer.floatValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"98a989d3-3e8c-11e6-9ec6-cdd9043423d0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"98a989d4-3e8c-11e6-9ec6-dd0e248c5441","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[260],"tindex":"98a989d5-3e8c-11e6-9ec6-158522a709a1","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,36,37,39,40,42,45,48,284,285,286,287,53,58,59,62,64,67,68,288,289,290,291,292,293,294,295,296,297,298,299,76,77,79,80,82,85,88,300,301,302,303,304,305,306,307,308,91,92,94,95,97,100,103,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,106,107,109,110,112,115,118],"tindex":"98a9b0e6-3e8c-11e6-9ec6-e9a43efbe7d0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (null == object) {\n                {\n                    return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[215,216],"tindex":"98a9b0e7-3e8c-11e6-9ec6-1d18f4b37228","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[145,146,147,148,151,152,153,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183],"tindex":"98a9b0e8-3e8c-11e6-9ec6-6f7c63d3b9e7","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[324],"tindex":"98a9b0e9-3e8c-11e6-9ec6-17633a846aa3","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[325],"tindex":"98a9b0ea-3e8c-11e6-9ec6-a74556cb7402","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"98a9d7fb-3e8c-11e6-9ec6-1fcdd245d11b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[326],"tindex":"98a9d7fc-3e8c-11e6-9ec6-111f0e4034a2","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"98a9d7fd-3e8c-11e6-9ec6-27ee7ba7334f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[370,371,372,373],"tindex":"98a9d7fe-3e8c-11e6-9ec6-75bcc5ae00f8","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) == 0"},"failures":[374],"tindex":"98a9d7ff-3e8c-11e6-9ec6-373e3dd46c05","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"98a9ff10-3e8c-11e6-9ec6-213f3a14a4dc","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"98a9ff11-3e8c-11e6-9ec6-9fd5e45c8da8","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"98a9ff12-3e8c-11e6-9ec6-0fb6fbb5d840","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Double) {\n                        return ((java.lang.Double)(answer));\n                    } \n                    return java.lang.Double.valueOf(answer.doubleValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"98a9ff13-3e8c-11e6-9ec6-f18e5350f048","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[399,400],"tindex":"98a9ff14-3e8c-11e6-9ec6-639f414cd70f","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[222],"tindex":"98aa2625-3e8c-11e6-9ec6-a1ee1edb1c58","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[168,169,170,171,172,173,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,184,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"98aa2626-3e8c-11e6-9ec6-71b14c08d24d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[467],"tindex":"98aa2627-3e8c-11e6-9ec6-a1a0d31de106","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[16,27],"tindex":"98aa2628-3e8c-11e6-9ec6-ed66d739cbe8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"98aa4d39-3e8c-11e6-9ec6-05aaff066595","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[152],"tindex":"98aa4d3a-3e8c-11e6-9ec6-7dceab37f218","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[468,469,470],"tindex":"98aa4d3b-3e8c-11e6-9ec6-b953179752f0","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"98aa4d3c-3e8c-11e6-9ec6-a3225b6303d1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[471],"tindex":"98aa744d-3e8c-11e6-9ec6-9fe05c75484e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"98aa744e-3e8c-11e6-9ec6-e95b754b82ef","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"98aa744f-3e8c-11e6-9ec6-11e618567095","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                {\n                    final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        return null;\n                    } \n                    if (answer instanceof java.lang.Float) {\n                        return ((java.lang.Float)(answer));\n                    } \n                    return java.lang.Float.valueOf(answer.floatValue());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[472,473,474,4,475,476,477,5,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,36,37,39,40,42,45,48,284,285,286,287,53,58,59,62,64,67,68,288,289,290,291,292,293,294,295,296,297,298,299,76,77,79,80,82,85,88,300,301,302,303,304,305,306,307,308,91,92,94,95,97,100,103,309,310,311,312,313,314,315,316,317,318,319,320,106,107,109,110,112,115,118,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655],"tindex":"98aa7450-3e8c-11e6-9ec6-7556c3b909be","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"98aa9b61-3e8c-11e6-9ec6-79890f472e6e","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[656,657,658],"tindex":"98aa9b62-3e8c-11e6-9ec6-1b6814bf0722","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"98aa9b63-3e8c-11e6-9ec6-9f0728fc9038","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (null == object) {\n                {\n                    return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[659,660,661],"tindex":"98aa9b64-3e8c-11e6-9ec6-5396063bb21c","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"98aa9b65-3e8c-11e6-9ec6-430fa65be95b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond > 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"beyond"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[662,663],"tindex":"98aac276-3e8c-11e6-9ec6-556ed98e5ed4","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[664],"tindex":"98aac277-3e8c-11e6-9ec6-43a3ec518aec","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"98aac278-3e8c-11e6-9ec6-d1b5f03dbb7d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[665],"tindex":"98aac279-3e8c-11e6-9ec6-794ffb877556","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[666,667,668,669,670],"tindex":"98aac27a-3e8c-11e6-9ec6-53e8bff51358","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"98aac27b-3e8c-11e6-9ec6-357f0229428b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[269,279,289,671,319],"tindex":"98aae98c-3e8c-11e6-9ec6-27dd6cce6bab","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"98aae98d-3e8c-11e6-9ec6-5b178bf95faf","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"98aae98e-3e8c-11e6-9ec6-630eb76fa8b6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[672,673,674],"tindex":"98aae98f-3e8c-11e6-9ec6-d13579ef18cd","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[24],"tindex":"98aae990-3e8c-11e6-9ec6-453cf9417d4e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[148,153,159,160,163,164,168,169,170,172,173,176,177,178,179,180,181,182,183],"tindex":"98aae991-3e8c-11e6-9ec6-a9ce5f6ce783","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:214","type":"CtBinaryOperatorImpl","sourcecode":"get instanceof java.util.Map"},"failures":[675,676],"tindex":"98ab10a2-3e8c-11e6-9ec6-350598d799fb","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[677,678,679,680,681,682,683,684],"tindex":"98ab10a3-3e8c-11e6-9ec6-5bf97f090a18","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"98ab10a4-3e8c-11e6-9ec6-33e61ebe44fd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"98ab10a5-3e8c-11e6-9ec6-5b86a58d195b","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[256,685,257,686,687,688,259,689,690],"tindex":"98ab10a6-3e8c-11e6-9ec6-23318abe31de","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527588/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}