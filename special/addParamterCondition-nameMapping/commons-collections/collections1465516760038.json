{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":381,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":279,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":750,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":333,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":49,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":277,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":275,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":492,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":679,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":646,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":210,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":236,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":211,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":439,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":604,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":257,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":359,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":743,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":284,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":373,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":601,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":621,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":326,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":130,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":307,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":596,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":465,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":498,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":808,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":710,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":185,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":673,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":51,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":328,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":694,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":577,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":311,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":778,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":656,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":113,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":243,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":87,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":647,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":103,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":608,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":522,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":260,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":611,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":525,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":500,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":737,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":798,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":318,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":717,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":506,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":416,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":781,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":692,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":539,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":751,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":423,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":181,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":810,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":204,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":119,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":114,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":721,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":671,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":733,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":774,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":534,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":139,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":245,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":412,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":413,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":332,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":815,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":706,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":31,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":270,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":369,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":175,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":729,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":515,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":365,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":544,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":739,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":748,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":607,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":445,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":600,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":186,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":762,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":582,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":207,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":644,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":485,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":641,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":216,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":388,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":473,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":357,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":217,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":805,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":796,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":44,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":637,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":578,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":474,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":731,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":722,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":530,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":363,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":819,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":110,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":84,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":554,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":16,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":444,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":691,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":757,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":565,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":570,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":724,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":581,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":354,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":426,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":159,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":322,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":438,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":308,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":98,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":225,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":425,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":795,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":434,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":759,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":776,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":574,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":575,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":370,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":576,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":633,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":612,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":393,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":690,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":27,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":155,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":772,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":253,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":510,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":387,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":711,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":728,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":403,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":766,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":402,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":404,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":325,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":683,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":446,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":603,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":797,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":734,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":560,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":524,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":476,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":716,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":451,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":540,"org.apache.commons.collections4.list.TreeListTest.testBug35258":704,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":421,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":529,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":727,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":528,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":735,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":471,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":767,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":572,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":573,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":626,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":125,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":480,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":468,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":422,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":617,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":618,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":206,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":483,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":773,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":462,"org.apache.commons.collections4.CollectionUtilsTest.find":812,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":364,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":628,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":542,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":163,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":222,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":218,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":382,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":558,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":189,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":229,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":26,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":391,"org.apache.commons.collections4.map.LRUMapTest.testLRU":394,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":719,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":367,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":593,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":99,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":273,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":386,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":179,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":177,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":437,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":384,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":583,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":313,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":324,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":606,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":549,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":804,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":73,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":427,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":172,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":650,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":69,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":785,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":358,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":491,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":496,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":197,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":300,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":309,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":378,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":659,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":801,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":350,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":725,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":591,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":652,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":653,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":787,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":537,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":685,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":535,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":86,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":807,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":160,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":116,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":235,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":511,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":234,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":201,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":541,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":182,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":602,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":809,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":707,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":164,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":294,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":686,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":802,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":661,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":97,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":12,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":488,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":372,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":792,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":47,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":342,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":361,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":640,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":509,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":362,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":149,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":230,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":3,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":697,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":140,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":588,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":518,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":142,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":21,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":320,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":371,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":14,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":226,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":816,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":771,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":676,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":262,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":29,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":770,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":794,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":684,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":289,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":589,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":732,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":660,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":740,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":651,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":301,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":764,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":657,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":503,"org.apache.commons.collections4.list.TreeListTest.testRemove":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":643,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":726,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":191,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":789,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":256,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":120,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":392,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":761,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":563,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":592,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":138,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":752,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":455,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":806,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":814,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":730,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":502,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":664,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":288,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":818,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":521,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":430,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":32,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":398,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":800,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":228,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":123,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":555,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":242,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":536,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":162,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":203,"org.apache.commons.collections4.list.TreeListTest.testListEquals":709,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":649,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":312,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":543,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":587,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":336,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":337,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":304,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":360,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":376,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":714,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":747,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":435,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":349,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":323,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":330,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":117,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":517,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":675,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":687,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":790,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":672,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":753,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":319,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":341,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":703,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":562,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":566,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":88,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":89,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":779,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":157,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":504,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":567,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":321,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":763,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":246,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":545,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":636,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":516,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":195,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":232,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":158,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":180,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":224,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":614,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":475,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":723,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":13,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":379,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":194,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":35,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":556,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":223,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":765,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":135,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":173,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":553,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":90,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":677,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":456,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":482,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":165,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":396,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":136,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":316,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":595,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":28,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":486,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":249,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":250,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":746,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":352,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":693,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":712,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":698,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":449,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":813,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":20,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":629,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":442,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":599,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":156,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":531,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":736,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":261,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":176,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":745,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":72,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":738,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":667,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":783,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":283,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":701,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":93,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":346,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":353,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":428,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":460,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":470,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":453,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":799,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":208,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":605,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":616,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":417,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":274,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":317,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":345,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":479,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":769,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":241,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":247,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":22,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":303,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":625,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":356,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":276,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":568,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":487,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":397,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":400,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":401,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":129,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":458,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":803,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":266,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":658,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":670,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":298,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":408,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":514,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":749,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":419,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":780,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":25,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":754,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":688,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":61,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":305,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":609,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":407,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":784,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":817,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":231,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":405,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":406,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":756,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":547,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":196,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":410,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":811,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":115,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":718,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":689,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":62,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":741,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":443,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":586,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":19,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":538},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"2e786050-2e9e-11e6-8be7-7bb9025a9c3a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[0,1,2],"tindex":"2e794ab1-2e9e-11e6-8be7-6962a43b34a4","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2e7971c2-2e9e-11e6-8be7-ebfc8ef43381","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"2e7971c3-2e9e-11e6-8be7-77194b744fe7","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[3],"tindex":"2e7998d4-2e9e-11e6-8be7-bdbf740a5fdb","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"2e79bfe5-2e9e-11e6-8be7-5550b261a6aa","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[149,150,151,152,153,154],"tindex":"2e79e6f6-2e9e-11e6-8be7-392444632e7b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[4,155,5,156,157,158,159,6,7,160,161,8,162,9,163,10,11,12,164,165,166,167,168,169,170,171,13,172,14,173,174,175,176,15,16,177,178,17,179,18,180,19,20,21,181,182,183,184,185],"tindex":"2e7a0e07-2e9e-11e6-8be7-23c219fa7005","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"2e7a3518-2e9e-11e6-8be7-57b44536019c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"2e7a3519-2e9e-11e6-8be7-2d4159feab5a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[198,199,200,201,202,203],"tindex":"2e7a5c2a-2e9e-11e6-8be7-7f52787a89d4","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[204],"tindex":"2e7a833b-2e9e-11e6-8be7-795fd13f3e23","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[205,206],"tindex":"2e7aaa4c-2e9e-11e6-8be7-8f83bfca93c2","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[207],"tindex":"2e7aaa4d-2e9e-11e6-8be7-858011192c2c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2e7ad15e-2e9e-11e6-8be7-37195547fdef","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"2e7ad15f-2e9e-11e6-8be7-95d4a5bf4ba2","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"2e7b1f80-2e9e-11e6-8be7-c1758612499d","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                        return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"2e7b4691-2e9e-11e6-8be7-4365071a3dab","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2e7b94b2-2e9e-11e6-8be7-d3a5adbf5e30","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[222,223],"tindex":"2e7b94b3-2e9e-11e6-8be7-ebde4d68fa27","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[208,224,225,226,227,228,229,230,231,232,209,233,234,235,210,211,236,212,237,213,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,214,215,216,255,256,257,258,259,260,261,262,263,217,264,265,266,218,219,267,220,268,221,269,270,271],"tindex":"2e7bbbc4-2e9e-11e6-8be7-73fcafe31f1d","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[272],"tindex":"2e7bbbc5-2e9e-11e6-8be7-b5a92ab31f2d","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,198,312,313,314,315,316,317,318,319,320,321,322,323],"tindex":"2e7bbbc6-2e9e-11e6-8be7-bb62e3b46731","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2e7be2d7-2e9e-11e6-8be7-73c9c80dc465","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[207,324,325,326,327],"tindex":"2e7be2d8-2e9e-11e6-8be7-e3014c3e8b57","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                {\n                    return doRemoveKey(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[328,329],"tindex":"2e7be2d9-2e9e-11e6-8be7-07ff1d842f4e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[330,331],"tindex":"2e7be2da-2e9e-11e6-8be7-79a0da7a4beb","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map<?, ?>) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    return entrySet().equals(other.entrySet());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[332],"tindex":"2e7c09eb-2e9e-11e6-8be7-75950cf870ec","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[333,334,335,336,337,338,339,340,341,342,343,344,345,346,2,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380],"tindex":"2e7c09ec-2e9e-11e6-8be7-b5f22b21837d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[381],"tindex":"2e7c30fd-2e9e-11e6-8be7-4dda6004cd5e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:94","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[382,383,384,385,386,387,388,389,390,391,392,393],"tindex":"2e7c30fe-2e9e-11e6-8be7-61d49ccdc6d8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2e7c580f-2e9e-11e6-8be7-bf6bb37644d9","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[394,395,71,396,397],"tindex":"2e7c5810-2e9e-11e6-8be7-a3d87d3583cc","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[398],"tindex":"2e7c5811-2e9e-11e6-8be7-913c43a721e5","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2e7c7f22-2e9e-11e6-8be7-9f26152c9ec4","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[24,25,26,27,28,29,32,399,400,401,33,34,35,38,43,44,45,46,47,48,49,50,51,402,403,404,52,53,54,57,65,66,67,68,69,70,71,72,73,405,406,407,74,75,76,79,92,93,94,95,96,97,98,99,100,408,409,410,101,102,103,106,111,112,113,114,115,116,117,118,119,411,412,413,120,121,122,125,126,127,131,132,133,134,135,136,137,138,139,414,415,416,140,141,142,145],"tindex":"2e7c7f23-2e9e-11e6-8be7-f7e923ef21e1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,290,305,310,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,126,127,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560],"tindex":"2e7ca634-2e9e-11e6-8be7-17d7999d1118","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[561],"tindex":"2e7ca635-2e9e-11e6-8be7-7197238963d7","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2e7ccd46-2e9e-11e6-8be7-8d5ee0725cfe","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"2e7ccd47-2e9e-11e6-8be7-39d6da6d1804","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                        return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[562,563],"tindex":"2e7ccd48-2e9e-11e6-8be7-1d4e346a1659","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2e7cf459-2e9e-11e6-8be7-ff408668ac97","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[564,565,566,567,568,569,83,84,85,86,87,570,88,89,90,91,571,572,573,574,575,576,577,578,579,580,581,582,583,584],"tindex":"2e7cf45a-2e9e-11e6-8be7-b58ef55672a6","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[585,586,587,588,589,590,591,592,593,594],"tindex":"2e7cf45b-2e9e-11e6-8be7-8f272f19b569","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[352,355,358,360,361,363,365,367,368,369,370,373,375,378,380],"tindex":"2e7d1b6c-2e9e-11e6-8be7-edd616fb3a78","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof java.util.Map) {\n                        final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                        return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"2e7d1b6d-2e9e-11e6-8be7-538874dd0ff8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[595,596,597,598,599,600,417,418,419,601,602,420,603,604,605,606,607,608,609,610,421,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,422,423,630,631,632,633,634,635,636,637,638,639,207,640,641,381,642,324,325,326,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,327,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678],"tindex":"2e7d427e-2e9e-11e6-8be7-b18aa114d0b5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[679],"tindex":"2e7d698f-2e9e-11e6-8be7-af42a595da5e","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[605,606,608,609,610,421,612,644,645,646,647,648,649,650,652,327,680,681],"tindex":"2e7d6990-2e9e-11e6-8be7-ef1815c724ac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"2e7d6991-2e9e-11e6-8be7-4dc90ff163d0","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[560],"tindex":"2e7d90a2-2e9e-11e6-8be7-95a773efa780","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697],"tindex":"2e7d90a3-2e9e-11e6-8be7-83cc20dad397","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"2e7db7b4-2e9e-11e6-8be7-49bf97b8acb1","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map<?, ?>) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    return entrySet().equals(other.entrySet());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"2e7db7b5-2e9e-11e6-8be7-d5e0b7bf75fd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                {\n                    return doRemoveKey(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[698,699],"tindex":"2e7ddec6-2e9e-11e6-8be7-0b5417663d67","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735],"tindex":"2e7ddec7-2e9e-11e6-8be7-a3a0dc6a745a","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[704,705,700,715,718,719,720,721,730,731,732,733],"tindex":"2e7e05d8-2e9e-11e6-8be7-1380294118cf","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2e7e2ce9-2e9e-11e6-8be7-87baa4e1d123","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"2e7e2cea-2e9e-11e6-8be7-fdfa5dd8df0d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767],"tindex":"2e7e2ceb-2e9e-11e6-8be7-fbb979a13a6a","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[768],"tindex":"2e7e2cec-2e9e-11e6-8be7-ab39004810c6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2e7e53fd-2e9e-11e6-8be7-f10b27bd37bb","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[553],"tindex":"2e7e53fe-2e9e-11e6-8be7-05fb1a5c588c","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"2e7e53ff-2e9e-11e6-8be7-31002a853e38","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2e7e7a10-2e9e-11e6-8be7-69e2152e7c6a","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"2e7e7a11-2e9e-11e6-8be7-2fe484fe5f8f","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[769],"tindex":"2e7ea122-2e9e-11e6-8be7-5d05179bc18c","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[770,771],"tindex":"2e7ea123-2e9e-11e6-8be7-2b0a49399be4","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[772],"tindex":"2e7ea124-2e9e-11e6-8be7-b766be3e2f97","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[773],"tindex":"2e7ea125-2e9e-11e6-8be7-e51496063d5b","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[774,775],"tindex":"2e7ec836-2e9e-11e6-8be7-2bf1e3f58293","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2e7ec837-2e9e-11e6-8be7-d5b7f38f15ba","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"2e7eef48-2e9e-11e6-8be7-056cb07aa124","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"2e7eef49-2e9e-11e6-8be7-d51183eec29c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[776,777],"tindex":"2e7eef4a-2e9e-11e6-8be7-fdf0b53d3489","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2e7f165b-2e9e-11e6-8be7-3d9793bc2e34","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[778,779,780,781],"tindex":"2e7f165c-2e9e-11e6-8be7-8d31db5227f6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[782,783,784,785,786],"tindex":"2e7f165d-2e9e-11e6-8be7-19ee72a32024","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"2e7f3d6e-2e9e-11e6-8be7-c90a37ed7d43","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"2e7f3d6f-2e9e-11e6-8be7-d960455d3334","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2e7f3d70-2e9e-11e6-8be7-3f8ddca49a47","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"2e7f6481-2e9e-11e6-8be7-f12f73046adb","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[787,788,789,790],"tindex":"2e7f6482-2e9e-11e6-8be7-f39b5b1f0cbc","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2e7f6483-2e9e-11e6-8be7-91d9e73d6d9d","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[149,537],"tindex":"2e7f6484-2e9e-11e6-8be7-b9b451d98fb2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[791,792],"tindex":"2e7fd9b5-2e9e-11e6-8be7-fbba6ebda997","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"2e7fd9b6-2e9e-11e6-8be7-c344d23c3c9b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof java.util.Map) {\n                        final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                        return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"2e7fd9b7-2e9e-11e6-8be7-f1c9663d8e5e","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[543,544,545,546,547,548,549],"tindex":"2e8027d8-2e9e-11e6-8be7-5ddaa8fc2e94","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[793,794,795,796,797,770,205,798,799,800,801,802,803,804,585,586,587,588,589,590,591,592,593,594,805,806,807,808,809,810,811],"tindex":"2e804ee9-2e9e-11e6-8be7-0385a797c64c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"2e804eea-2e9e-11e6-8be7-fb86bdd527ef","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2e804eeb-2e9e-11e6-8be7-8361afd31949","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[812],"tindex":"2e804eec-2e9e-11e6-8be7-c9d021c96cce","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[813,814],"tindex":"2e8075fd-2e9e-11e6-8be7-91d0e5b97289","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[815,816],"tindex":"2e8075fe-2e9e-11e6-8be7-35b013f1a644","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[770],"tindex":"2e8075ff-2e9e-11e6-8be7-3b1456ab2aa2","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2e809d10-2e9e-11e6-8be7-2d7b02d2f7c8","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"2e809d11-2e9e-11e6-8be7-9d9e80e38510","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[817,818],"tindex":"2e809d12-2e9e-11e6-8be7-e58b3b9a396c","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[819],"tindex":"2e809d13-2e9e-11e6-8be7-21a2522a81f9","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}