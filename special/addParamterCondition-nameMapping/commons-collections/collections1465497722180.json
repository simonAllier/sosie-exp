{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":320,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":105,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":43,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":524,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":14,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":183,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":66,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":378,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":372,"org.apache.commons.collections4.CollectionUtilsTest.collect":98,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":264,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":135,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":32,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":485,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":249,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":79,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":295,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":62,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":91,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":7,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":530,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":437,"org.apache.commons.collections4.CollectionUtilsTest.get":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":357,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":319,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":282,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":373,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":33,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":92,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":424,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":483,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":173,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":368,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":417,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":407,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":198,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":10,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":259,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":497,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":193,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":208,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":512,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":78,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":529,"org.apache.commons.collections4.CollectionUtilsTest.transform2":36,"org.apache.commons.collections4.CollectionUtilsTest.transform1":35,"org.apache.commons.collections4.CollectionUtilsTest.select":53,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":353,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":96,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":383,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":112,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":55,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":409,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":104,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":187,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":292,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":469,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":267,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":365,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":380,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":431,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":18,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":386,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":444,"org.apache.commons.collections4.CollectionUtilsTest.intersection":77,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":155,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":525,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":197,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":12,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":301,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":163,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":44,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":216,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":85,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":146,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":496,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":519,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":374,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":257,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":194,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":283,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":429,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":377,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":498,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":203,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":395,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":120,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":460,"org.apache.commons.collections4.map.CompositeMapTest.testPut":134,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":446,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":294,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":396,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":16,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":472,"org.apache.commons.collections4.map.CompositeMapTest.testGet":133,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":494,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":502,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":401,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":405,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":243,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":5,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":400,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":271,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":316,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":82,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":236,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":157,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":330,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":473,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":175,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":363,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":457,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":250,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":336,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":192,"org.apache.commons.collections4.CollectionUtilsTest.union":76,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":454,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":99,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":423,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":238,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":456,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":501,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":87,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":196,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":505,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":507,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":303,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":527,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":410,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":346,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":476,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":93,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":116,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":412,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":354,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":399,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":438,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":88,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":274,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":515,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":154,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":493,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":206,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":256,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":185,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":415,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":251,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":27,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":503,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":20,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":200,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":461,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":499,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.CollectionUtilsTest.get1":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":328,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":430,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":459,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":57,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":506,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":64,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":349,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":261,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":477,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":523,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":371,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":191,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":511,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":522,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":504,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":119,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":279,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":486,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":2,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":406,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":384,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":118,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":338,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":327,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":367,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":94,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":347,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":422,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":75,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":276,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":109,"org.apache.commons.collections4.CollectionUtilsTest.exists":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":418,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":510,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":221,"org.apache.commons.collections4.CollectionUtilsTest.filter":46,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":26,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":170,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":272,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":39,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":341,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":333,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":148,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":28,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":277,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":359,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":532,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":464,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":234,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":3,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":262,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":442,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":484,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":97,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":470,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":281,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":348,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":329,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":398,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":298,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":103,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":11,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":233,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":150,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":508,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":466,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":37,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":40,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":488,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":84,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":480,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":350,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":339,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":42,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":270,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":285,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":426,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":516,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":8,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":403,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":455,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":468,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":321,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":376,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":160,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":392,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":81,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":61,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":487,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":343,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":52,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":310,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":452,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":385,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":462,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":331,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":443,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":89,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":139,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":247,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":314,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":389,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":63,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":260,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":518,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":362,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":489,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":231,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":340,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":168,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":509,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":158,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.set.CompositeSetTest.testContains":235,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":481,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.CollectionUtilsTest.isFull":48,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":209,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":471,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":478,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":302,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":102,"org.apache.commons.collections4.ListUtilsTest.testSelect":230,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":361,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":162,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":165,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":117,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":70,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":286,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":393,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":108,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":306,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":95,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":287,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":241,"org.apache.commons.collections4.CollectionUtilsTest.reverse":101,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":24,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":369,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":358,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":211,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":521,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":245,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":450,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":533,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":179,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":269,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":177,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":433,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":169,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":495,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":322,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":225,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":123,"org.apache.commons.collections4.CollectionUtilsTest.find":72,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":458,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":268,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":414,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":421,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":305,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":113,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":293,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":210,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":448,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":253,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":381,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":156,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":54,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":304,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":217,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":432,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":337,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":240,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":317,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":355,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":207,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":490,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":307,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":121,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":482,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":474,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":514,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":186,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":254,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":334,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":500,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":29,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":517,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":290,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":391,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":531,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":59,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":273,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":182,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":441,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":178,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":411,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":382,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":252,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":434,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":232,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":397,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":492,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":174},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"db05c7cf-2e71-11e6-8f1a-21ea0a72c1f7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[0,1,2],"tindex":"db06d940-2e71-11e6-8f1a-255627c10b0c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"db070051-2e71-11e6-8f1a-5feac7f9a915","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[3],"tindex":"db070052-2e71-11e6-8f1a-1524b2e3ec18","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex < (fromIndex / 2)) {\n        {\n            if (fromIndex < 0) {\n                {\n                    return cursor(fromIndex);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[4,5],"tindex":"db072763-2e71-11e6-8f1a-1126ed5db33f","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (defaultClosure == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"defaultClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[],"tindex":"db072764-2e71-11e6-8f1a-71f55121d70f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[6],"tindex":"db074e75-2e71-11e6-8f1a-4be1b5703cb7","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"db074e76-2e71-11e6-8f1a-3d7e0dc6ae8d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            if (!(value == null ? value == null : obj1.equals(obj2))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (value == null) {\n                        for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                            if ((entry.getValue()) == null) {\n                                return true;\n                            } \n                        }\n                    } else {\n                        for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                            if (isEqualValue(value, entry.getValue())) {\n                                return true;\n                            } \n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"value","obj1":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"db079c97-2e71-11e6-8f1a-278df03f3a73","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"db07c3a8-2e71-11e6-8f1a-a71aafa22336","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[],"tindex":"db07eab9-2e71-11e6-8f1a-3bcef5977663","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"db07eaba-2e71-11e6-8f1a-d31e42ece383","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtBinaryOperatorImpl","sourcecode":"(h.right.parent) == h"},"failures":[],"tindex":"db0811cb-2e71-11e6-8f1a-794083f8c3f0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior == h) {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"prior","h":"prior","right":"prior"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"db0811cc-2e71-11e6-8f1a-31d36e8655f6","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity <= (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[281],"tindex":"db0838dd-2e71-11e6-8f1a-7bb2d62a43b1","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index <= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[107,110,282],"tindex":"db0838de-2e71-11e6-8f1a-41cdafb05f8c","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"db0838df-2e71-11e6-8f1a-a7de2130570c","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if ((((index % 2) != 0) && ((delta - index) <= index)) && (k <= (delta + d))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[283],"tindex":"db085ff0-2e71-11e6-8f1a-a393e5b20e53","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((trueClosure == null) || (falseClosure == null)) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"falseClosure","trueClosure":"trueClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[284],"tindex":"db085ff1-2e71-11e6-8f1a-817ae5b0965c","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[285,0,1,2,286,287,288,289,290,291],"tindex":"db085ff2-2e71-11e6-8f1a-537cfb565c86","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < index) {\n        {\n            return K[][index];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"db088703-2e71-11e6-8f1a-2fd136f89dc8","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,3,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"db088704-2e71-11e6-8f1a-d74fcad78b05","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index <= 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[],"tindex":"db08ae15-2e71-11e6-8f1a-6ddee31c2690","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"db08ae16-2e71-11e6-8f1a-27bfa0edd616","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:415","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (!(value1 == null ? value1 == null : obj1.equals(obj2))) {\n        {\n            return (value1 == value2) || (value1 == null ? false : value1.equals(value2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"value1","obj1":"value1"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[102],"tindex":"db08d527-2e71-11e6-8f1a-ad138188a925","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[0,1,2,285],"tindex":"db08d528-2e71-11e6-8f1a-4dddf39f941e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 instanceof java.util.Iterator<?>) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[213,373,216,374],"tindex":"db08fc39-2e71-11e6-8f1a-c170ae3a9d71","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"db08fc3a-2e71-11e6-8f1a-a3061b606496","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex == 0) {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[375],"tindex":"db08fc3b-2e71-11e6-8f1a-9f53216f8caf","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"db08fc3c-2e71-11e6-8f1a-d52a14440d9b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (((key == null) && (key == null)) || ((object != null) && (object.equals(current)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"key","object":"key"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"db09234d-2e71-11e6-8f1a-4914a5a389b7","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            if (!(value == null ? value == null : obj1.equals(obj2))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (value == null) {\n                        for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                            if ((entry.getValue()) == null) {\n                                return true;\n                            } \n                        }\n                    } else {\n                        for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                            if (isEqualValue(value, entry.getValue())) {\n                                return true;\n                            } \n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) == 0) && ((-d) <= k)) && (k <= d)"},"failures":[],"tindex":"db094a5e-2e71-11e6-8f1a-d9a1dd6a7169","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[376,377],"tindex":"db094a5f-2e71-11e6-8f1a-73b8c9d1a725","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"db094a60-2e71-11e6-8f1a-cffae7f32841","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531],"tindex":"db097171-2e71-11e6-8f1a-835256a75dae","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"db097172-2e71-11e6-8f1a-1373dbc164c7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[35,36],"tindex":"db099883-2e71-11e6-8f1a-f72ae766be69","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"db099884-2e71-11e6-8f1a-afe54fcb3839","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"db099885-2e71-11e6-8f1a-4959a9882795","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex < (fromIndex / 2)) {\n        {\n            if (fromIndex < 0) {\n                {\n                    return cursor(fromIndex);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex","index":"fromIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[292,323],"tindex":"db09bf96-2e71-11e6-8f1a-09f73f4ff4d4","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:312","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeChanged(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"db09bf97-2e71-11e6-8f1a-f12d563ce79b","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                        validate(entry.getKey(), entry.getValue());\n                    }\n                    super.putAll(mapToCopy);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"db09e6a8-2e71-11e6-8f1a-436699d3d0d3","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                        validate(entry.getKey(), entry.getValue());\n                    }\n                    super.putAll(mapToCopy);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[],"tindex":"db09e6a9-2e71-11e6-8f1a-0f977efcfeec","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index <= 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[532],"tindex":"db09e6aa-2e71-11e6-8f1a-f32ace80c96d","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == (-1)) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"db0a0dbb-2e71-11e6-8f1a-e723ce853844","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"db0a0dbc-2e71-11e6-8f1a-4596145ef6fe","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"db0a34cd-2e71-11e6-8f1a-c78fc8a88abb","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[533],"tindex":"db0a34ce-2e71-11e6-8f1a-2ff1166cd298","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[74],"tindex":"db0a34cf-2e71-11e6-8f1a-ff99dceafbdc","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"obj"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":49,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}