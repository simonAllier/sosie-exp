{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":55,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":299,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":499,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":300,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":242,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":241,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":431,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":373,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":375,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":372,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":63,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":260,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":77,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":480,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":420,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":126,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":70,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":23,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":184,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":362,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":3,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":217,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":196,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":237,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":403,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":411,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":158,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":131,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":500,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":258,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":305,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":471,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":504,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":240,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":522,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":81,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":79,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":384,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":270,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":430,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":388,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":327,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":264,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":200,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":433,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":21,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":295,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":51,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":328,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":144,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":314,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":466,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":189,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":239,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSimpleSerialization":236,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":225,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":310,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":317,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":190,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":360,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":234,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":177,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":324,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":86,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":280,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":68,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":274,"org.apache.commons.collections4.list.TreeListTest.testRemove":117,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":386,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":128,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":60,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":193,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":352,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":229,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":138,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":383,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":72,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":457,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":290,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":152,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":392,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":252,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":343,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":475,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":197,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":438,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":238,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":424,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":460,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":312,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":435,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":509,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":259,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":490,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":16,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":266,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":294,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":485,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":394,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":369,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":413,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":166,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":52,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":176,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":248,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":291,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":520,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":257,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":54,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":311,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":494,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":365,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":338,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":397,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":219,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":113,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":235,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":481,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":230,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalEmptyCollectionExists":231,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":398,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":332,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":321,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":357,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":49,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":116,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":139,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":454,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":263,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":101,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":443,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":65,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":127,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":124,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":465,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":153,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":159,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":250,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":418,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":503,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":339,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":378,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":525,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":307,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":24,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":122,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":511,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":194,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":423,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":210,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":329,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":448,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":45,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":358,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":19,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":461,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":301,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":474,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":160,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":105,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":162,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":0,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":287,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":143,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":506,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":364,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":293,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":58,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":359,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":396,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":198,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":331,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":512,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":218,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":422,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":404,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":426,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":450,"org.apache.commons.collections4.list.TreeListTest.testBug35258":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":336,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":165,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":523,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":245,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":377,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":459,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":104,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":518,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":313,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":400,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":370,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":353,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":226,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalFullCollectionExists":232,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":447,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":470,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":140,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":516,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":221,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":401,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":215,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":207,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":449,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":517,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":175,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":302,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":508,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":278,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":244,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":496,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":262,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":468,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":216,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":224,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":507,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":288,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":417,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":275,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":130,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":325,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":296,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":349,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":192,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":436,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":157,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":484,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":333,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":150,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":149,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":18,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":100,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":154,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":323,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":44,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":97,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":437,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":15,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":251,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":410,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":374,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":214,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":265},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"710af4f1-2e9f-11e6-9ab0-f775f9e29187","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:565","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T extends java.lang.Comparable<T>>org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookup(final java.lang.Object data, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (data == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n            while (node != null) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(data)), ((T)(node.getData(dataElement))));\n                if (cmp == 0) {\n                    rval = node;\n                    break;\n                } else {\n                    node = cmp < 0 ? node.getLeft(dataElement) : node.getRight(dataElement);\n                }\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[97],"tindex":"710bb842-2e9f-11e6-9ab0-95e912d757be","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[98],"tindex":"710bdf53-2e9f-11e6-9ab0-e3cd8ead74e5","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"710c0664-2e9f-11e6-9ab0-7b56e5373bec","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"710c0665-2e9f-11e6-9ab0-5ff610969691","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"710c2d76-2e9f-11e6-9ab0-bdea087aa36a","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (next != null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n            recalcHeight();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"next"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[129,130],"tindex":"710c5487-2e9f-11e6-9ab0-0d6c40dc3f07","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"710c7b98-2e9f-11e6-9ab0-4f8d4605b32c","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"710c7b99-2e9f-11e6-9ab0-a9d165211280","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[200,201,202,203,204,205,206,207,208,209],"tindex":"710cc9ba-2e9f-11e6-9ab0-7baf5517f839","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"710cc9bb-2e9f-11e6-9ab0-f37350df1007","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(hashIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"710d17dc-2e9f-11e6-9ab0-37b9f1cc2b2d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"710d3eed-2e9f-11e6-9ab0-7b195be8d932","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtBinaryOperatorImpl","sourcecode":"retval > 0"},"failures":[],"tindex":"710d3eee-2e9f-11e6-9ab0-01c24a40c89a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"710d65ff-2e9f-11e6-9ab0-51b3ad9e15a6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"710d6600-2e9f-11e6-9ab0-c3473522b733","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtBinaryOperatorImpl","sourcecode":"null != (comparatorChain)"},"failures":[],"tindex":"710d8d11-2e9f-11e6-9ab0-f9529c8dc154","method":{"position":"org.apache.commons.collections4.ComparatorUtils:103","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E extends java.lang.Comparable<? super E>>java.util.Comparator<E> chainedComparator(final java.util.Collection<java.util.Comparator<E>> comparators) {\n    if (null != comparators) {\n        {\n            return org.apache.commons.collections4.ComparatorUtils.chainedComparator(((java.util.Comparator<E>[])(comparators.toArray(new java.util.Comparator[comparators.size()]))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparatorChain":"comparators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"710db422-2e9f-11e6-9ab0-f7e969c9ea77","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if ((((index % 2) != 0) && ((delta - index) <= index)) && (k <= (delta + d))) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"710db423-2e9f-11e6-9ab0-d79a4cb703ed","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"710ddb34-2e9f-11e6-9ab0-73afb8a6668e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[210],"tindex":"710e0245-2e9f-11e6-9ab0-13cccade2e15","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"710e2956-2e9f-11e6-9ab0-bd5f15381d17","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[237,238,239],"tindex":"710e2957-2e9f-11e6-9ab0-ebe6a3ddbfa0","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"710e5068-2e9f-11e6-9ab0-8d93c258fac6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl","sourcecode":"index >= (maxElements)"},"failures":[374,375,376,377,129,378,379,380,381,382,383,384,385,386,387,388,130,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426],"tindex":"710e5069-2e9f-11e6-9ab0-e5c5af239fef","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size >= size) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"size","index":"size"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[427],"tindex":"710e777a-2e9f-11e6-9ab0-879934c4ff8c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[428],"tindex":"710e777b-2e9f-11e6-9ab0-61877fee8dad","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[429,430,431,432,433,434,435,436,437,438,439,440,441,442],"tindex":"710e777c-2e9f-11e6-9ab0-b11bc1013603","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"710e9e8d-2e9f-11e6-9ab0-8588d88377f5","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[443],"tindex":"710e9e8e-2e9f-11e6-9ab0-8ba83295f4a1","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtBinaryOperatorImpl","sourcecode":"(lastUsedIterator) == null"},"failures":[444],"tindex":"710e9e8f-2e9f-11e6-9ab0-17b204cb608d","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastUsedIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"710ec5a0-2e9f-11e6-9ab0-1b33ed8d1765","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[463],"tindex":"710fd711-2e9f-11e6-9ab0-b72faf1584b5","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"71102532-2e9f-11e6-9ab0-ad44d69c59e5","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,377,378,379,385,386,390,391,395,398,506,416,423],"tindex":"71102533-2e9f-11e6-9ab0-13a5da22273c","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[7,8,47,49,50],"tindex":"71104c44-2e9f-11e6-9ab0-f7b5038acd23","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[302,344],"tindex":"71109a65-2e9f-11e6-9ab0-379112077b99","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (null == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"7110e886-2e9f-11e6-9ab0-394a588110be","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:415","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2.isAssignableFrom(value1.getReturnType())) {\n        {\n            return (value1 == value2) || (value1 == null ? false : value1.equals(value2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"value2","method":"value1"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[],"tindex":"71110f97-2e9f-11e6-9ab0-4fa646592658","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtBinaryOperatorImpl","sourcecode":"(cloned.delegateMap) != null"},"failures":[],"tindex":"71110f98-2e9f-11e6-9ab0-9f8a61780e0d","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cloned":"map","delegateMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[507,508,509,510,511,512],"tindex":"711136a9-2e9f-11e6-9ab0-6daa22486556","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[374,384,130,389],"tindex":"711136aa-2e9f-11e6-9ab0-514be006ff1a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"71115dbb-2e9f-11e6-9ab0-97e0645f49db","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.left, p)"},"failures":[],"tindex":"711184cc-2e9f-11e6-9ab0-e3219429d8b8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(tree, p)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"start","left":"tree"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[513],"tindex":"7111f9fd-2e9f-11e6-9ab0-8591375c57fe","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"7112210e-2e9f-11e6-9ab0-4716e0e8daeb","method":{"position":"org.apache.commons.collections4.CollectionUtils:994","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.lang.Iterable<I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.collect(inputCollection, transformer, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[514,515],"tindex":"7112481f-2e9f-11e6-9ab0-0fc5a6a9853e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[516,517,518,519,520,521,522,523,524,525,526,527],"tindex":"71126f30-2e9f-11e6-9ab0-b1fcce3f934e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":48,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}