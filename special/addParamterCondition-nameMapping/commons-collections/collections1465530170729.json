{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":2,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":238,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":503,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":69,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":375,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":535,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":136,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":262,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":229,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":605,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":289,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":701,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":643,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":486,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":118,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":518,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":360,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":254,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":567,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":74,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":166,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":96,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":209,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":649,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":720,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":681,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":696,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":709,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":245,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":298,"org.apache.commons.collections4.ListUtilsTest.testEquals":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":634,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":618,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":342,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":740,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":197,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":490,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":551,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":552,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":257,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":23,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":534,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":167,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":345,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":193,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":308,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":93,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":620,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":362,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":121,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":653,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":454,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":617,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":595,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":199,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":464,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":430,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":251,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":225,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":376,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":459,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":460,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":458,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":576,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":650,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":165,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":521,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":656,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":613,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":633,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":135,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":512,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":7,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":335,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":278,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":223,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":250,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":589,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":678,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":162,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":227,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":34,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":168,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":12,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":662,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":103,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":187,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":764,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":780,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":484,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":294,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":773,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":48,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":399,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":469,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":493,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":364,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":763,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":373,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":296,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":261,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":38,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":615,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":46,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":386,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":0,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":235,"org.apache.commons.collections4.IteratorUtilsTest.testToList":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":79,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":453,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":301,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":1,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":282,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":315,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":465,"org.apache.commons.collections4.map.LRUMapTest.testReset":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":609,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":629,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":664,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":435,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":642,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":284,"org.apache.commons.collections4.map.LinkedMapTest.testReset":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":299,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":700,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":451,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":604,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":334,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":475,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":318,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":402,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":19,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":384,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":381,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":369,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":52,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":741,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":29,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":692,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":418,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":141,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":712,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":762,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":559,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":581,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":207,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":540,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":146,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":452,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":383,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":359,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":533,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":420,"org.apache.commons.collections4.map.HashedMapTest.testClone":525,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":769,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":771,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":158,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":575,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":699,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":107,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":590,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":622,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":102,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":280,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":413,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":59,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":329,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":758,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":757,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":756,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":90,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":390,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":686,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":685,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":242,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":687,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":529,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":463,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":719,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":485,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":562,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":258,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":244,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":14,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":698,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":697,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":734,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":655,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":652,"org.apache.commons.collections4.map.LinkedMapTest.testClone":654,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":477,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":500,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":714,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":479,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":64,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":546,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":285,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":519,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":542,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":494,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":641,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":676,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":433,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":221,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":446,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":214,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":710,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":644,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":632,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":120,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":426,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":765,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":330,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":711,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":447,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":137,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":558,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":414,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":665,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":776,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":621,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":647,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":115,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":119,"org.apache.commons.collections4.map.LRUMapTest.testLRU":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":726,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":123,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":543,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":760,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":471,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":406,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":105,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":739,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":737,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":128,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":728,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":777,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":255,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":307,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":281,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":155,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":228,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":306,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":520,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":393,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":395,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":450,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":474,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":317,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":691,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":100,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":226,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":178,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":599,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":557,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":706,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":218,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":511,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":437,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":41,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":736,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":752,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":243,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":754,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":753,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":669,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":673,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":718,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":445,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":675,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":101,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":169,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":160,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":421,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":495,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":22,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":379,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":482,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":124,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":189,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":731,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":527,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":603,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":779,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":774,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":448,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":322,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":538,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":429,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":624,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":727,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":462,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":431,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":232,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":775,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":646,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":401,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":441,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":713,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":530,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":432,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":596,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":674,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":49,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":152,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":472,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":24,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":597,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":411,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":496,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":396,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":564,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":287,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":683,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":715,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":498,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":332,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":161,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":487,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":91,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":346,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":488,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":574,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":651,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":723,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":35,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":388,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":716,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":767,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":456,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":455,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":66,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":457,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":770,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":509,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":508,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":385,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":544,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":588,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":377,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":571,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":196,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":660,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":181,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":746,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":745,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":744,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":325,"org.apache.commons.collections4.map.LRUMapTest.testClone":270,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":694,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":631,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":684,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":200,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":515,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":188,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":555,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":695,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":424,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":177,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":572,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":729,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":264,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":61,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":476,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":747,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":748,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":372,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":357,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":340,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":497,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":537,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":9,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":213,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":339,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":761,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":378,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":153,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":768,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":444,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":693,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":236,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":327,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":62,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":37,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":295,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":252,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":536,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":404,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":179,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":216,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":387,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":398,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":526,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":705,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":690,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":408,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":417,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":682,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":689,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":514,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":680,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":584,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":648,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":394,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":750,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":738,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":772,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":563,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":219,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":778,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":134,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":638,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":639,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":267,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":640,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":607,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":580,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":766,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":473,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":397,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":190,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":470,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":303,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":583,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":483,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":145,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":724,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":545,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":743,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":127,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":667,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":321,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":722,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":732,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":33,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":371,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":138,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":438,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":84,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":751,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":499,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":415,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":220,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":361,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":569,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":25,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":370,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":400,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":305,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":556,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":363,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":343,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":440,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":577,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":531,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":266,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":32,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":524,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":717,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":586,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":735,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":336,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":292,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":612,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":759,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":645,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":611,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":449,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":40,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":217,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":337,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":240,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":725,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":392,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":4,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":443,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":442,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":268,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":517,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":636,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":637,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":635,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":570,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":198,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":628,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":203,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":548,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":481,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":374,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":579,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":733,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":619,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":194,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":241,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":239,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":358,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":616,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":707,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":626,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":234,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":144,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":423,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":173,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":273,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":157,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":248,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":312,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":382,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":730,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":566,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":269,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":310,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":311,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":99,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":550,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":670,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":492,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":425,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":721,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":274,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":67,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":409,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":300},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"67dd1f10-2ebd-11e6-8a86-85f46023e51c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((replacementNode.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n            while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateRight(siblingNode, dataElement);\n                            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateLeft(siblingNode, dataElement);\n                            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"replacementNode","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"67de5791-2ebd-11e6-8a86-99902a99fa02","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"67de5792-2ebd-11e6-8a86-a7924d07672f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[32],"tindex":"67de7ea3-2ebd-11e6-8a86-77b0fbb6dd51","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"67dea5b4-2ebd-11e6-8a86-aba9b396ef3c","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[33,34],"tindex":"67deccc5-2ebd-11e6-8a86-b7cf24e285ac","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[35],"tindex":"67def3d6-2ebd-11e6-8a86-e985babe0453","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Collection) {\n                {\n                    if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                        return true;\n                    } \n                    return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[36],"tindex":"67df1ae7-2ebd-11e6-8a86-77cd2b9716a5","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"67df41f8-2ebd-11e6-8a86-4b0016abbece","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[37],"tindex":"67df41f9-2ebd-11e6-8a86-8b2683e9c042","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"67df690a-2ebd-11e6-8a86-010221617754","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"67df690b-2ebd-11e6-8a86-b545e0eedef0","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"67df901c-2ebd-11e6-8a86-3725f945b069","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"67dfb72d-2ebd-11e6-8a86-7f9c47bc7671","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Collection) {\n                {\n                    if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                        return true;\n                    } \n                    return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[140,141,142,143,144,145],"tindex":"67dfde3e-2ebd-11e6-8a86-39b36cd2b0cc","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[146,147,148,149,150,151,152,153,39,42,43,44,45,46,47,48,49,50,56,57,58,59,60,61,154,155,156,157,158,159,65,68,69,70,71,72,73,74,75,76,92,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,127,130,131,132,133,134,135,136,137,138,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"67e0054f-2ebd-11e6-8a86-07171ca49839","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"67e00550-2ebd-11e6-8a86-6f1b37651e04","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl","sourcecode":"(entry.after) != (header)"},"failures":[],"tindex":"67e00551-2ebd-11e6-8a86-df9d10f56721","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            return entry.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[244,245,246],"tindex":"67e02c62-2ebd-11e6-8a86-b1577ab10d9c","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[247],"tindex":"67e02c63-2ebd-11e6-8a86-f1c1b0778428","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"list1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl","sourcecode":"(m == 0) || (n == 0)"},"failures":[248,249,250,251,252,253],"tindex":"67e05374-2ebd-11e6-8a86-b3c4e9b08214","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start2 == 0) || (start2 == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"start2","n":"start2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[254,255,6,8,10,11,12],"tindex":"67e05375-2ebd-11e6-8a86-9b7f68c37086","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"67e07a86-2ebd-11e6-8a86-bd7479e8ea85","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"67e07a87-2ebd-11e6-8a86-671f42a133f1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key instanceof java.util.List) == false) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[],"tindex":"67e07a88-2ebd-11e6-8a86-9b23582fe3b8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Long) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"67e0a199-2ebd-11e6-8a86-a362ae955a4f","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[37,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"tindex":"67e0a19a-2ebd-11e6-8a86-457d0f4a0ee2","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode == hashIndex) {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"hashIndex","end":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"67e0c8ab-2ebd-11e6-8a86-4383c91aeb87","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Enumeration<?>) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[328],"tindex":"67e0efbc-2ebd-11e6-8a86-81aaed6fc1d7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object != null) {\n                {\n                    return decorated().lastIndexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"67e0efbd-2ebd-11e6-8a86-41a2052ba9ab","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == (wrappedIteratorIndex)"},"failures":[329],"tindex":"67e116ce-2ebd-11e6-8a86-532599769cc3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"67e116cf-2ebd-11e6-8a86-6708b6d5f16a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[330],"tindex":"67e116d0-2ebd-11e6-8a86-f36a1815d6a4","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[331,332,333,334,335],"tindex":"67e13de1-2ebd-11e6-8a86-7324c4bfecf8","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[336,337,338,339,340,341,342,343,344],"tindex":"67e13de2-2ebd-11e6-8a86-e5c691ccb11e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"67e164f3-2ebd-11e6-8a86-7f3e3198685f","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if ((coll == null) || (coll == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"67e164f4-2ebd-11e6-8a86-9fb5135d0d6f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[345],"tindex":"67e164f5-2ebd-11e6-8a86-5d78799a1fe4","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (trueClosure == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"trueClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"67e164f6-2ebd-11e6-8a86-2b66c6d5dbb1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[346],"tindex":"67e18c07-2ebd-11e6-8a86-bfd179c57fb8","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[347,348,349,350,351,352,353,354,355,356,336,337,338,339,340,341,342,343,344],"tindex":"67e18c08-2ebd-11e6-8a86-936bbabd26c9","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"67e1b319-2ebd-11e6-8a86-554f6e15ebf5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"67e1b31a-2ebd-11e6-8a86-e193f51d9cfc","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"67e1b31b-2ebd-11e6-8a86-9f46c37c40c3","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"67e1da2c-2ebd-11e6-8a86-8b859f6b19f9","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"67e1da2d-2ebd-11e6-8a86-b3757d3fe334","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[357],"tindex":"67e1da2e-2ebd-11e6-8a86-4395ed87ac35","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index <= 0) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"67e2013f-2ebd-11e6-8a86-d5995db9e7bc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object != null) {\n                {\n                    return decorated().lastIndexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[358],"tindex":"67e20140-2ebd-11e6-8a86-39d45cdc1621","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[359],"tindex":"67e20141-2ebd-11e6-8a86-b97a758f4c50","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"67e20142-2ebd-11e6-8a86-fbcfc6a949b3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[360],"tindex":"67e22853-2ebd-11e6-8a86-cdcaab2aafa9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,241,379,380,381,382,383,384,385,386,387,388,389,390,391],"tindex":"67e22854-2ebd-11e6-8a86-89e9aebcc502","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == i) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"i","end":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[392],"tindex":"67e22855-2ebd-11e6-8a86-8f13f3fd1287","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,35,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,175,524,193,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,33,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,653,654,655,360,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702],"tindex":"67e24f66-2ebd-11e6-8a86-3f2579a1c400","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"67e24f67-2ebd-11e6-8a86-cd9e210c193d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"67e27678-2ebd-11e6-8a86-5b4c29c627c0","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[],"tindex":"67e27679-2ebd-11e6-8a86-31ba002b4dca","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[703],"tindex":"67e29d8a-2ebd-11e6-8a86-911a65a4e19c","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[704,705,706,707,708,709,710,711,712,713,714,715,716],"tindex":"67e29d8b-2ebd-11e6-8a86-558420bfb21a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[717],"tindex":"67e29d8c-2ebd-11e6-8a86-c5f2dbc66bf9","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[401,419],"tindex":"67e29d8d-2ebd-11e6-8a86-bbd6f24ab57a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"67e2c49e-2ebd-11e6-8a86-4581514fca65","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,357,774,388,775,776,777],"tindex":"67e2c49f-2ebd-11e6-8a86-ef9d3bf702d7","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"67e2c4a0-2ebd-11e6-8a86-1f245a77f1a0","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"67e2ebb1-2ebd-11e6-8a86-07936d6028ee","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[778],"tindex":"67e2ebb2-2ebd-11e6-8a86-9b2bc508eff6","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[779,780],"tindex":"67e2ebb3-2ebd-11e6-8a86-65479fd96396","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value != null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"67e2ebb4-2ebd-11e6-8a86-6ffe6fd8b3eb","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":69,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}