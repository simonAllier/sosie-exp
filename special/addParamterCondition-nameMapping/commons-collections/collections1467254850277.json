{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":390,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":531,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":344,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":380,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":521,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":362,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":232,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":602,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":255,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":556,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":422,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":331,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":514,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":291,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":631,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":55,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":174,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":127,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":26,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":688,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":183,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":434,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":141,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":417,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":383,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":479,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":78,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":607,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":433,"org.apache.commons.collections4.CollectionUtilsTest.get":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":133,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":134,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":724,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":529,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":8,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":306,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":88,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":494,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":548,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":596,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":524,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":669,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":242,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":388,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":379,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":352,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":70,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":392,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":643,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":437,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":710,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":65,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":408,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":414,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":202,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":273,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":487,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":321,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":625,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":655,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":562,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":471,"org.apache.commons.collections4.CollectionUtilsTest.select":13,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":75,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":248,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":382,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":32,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":325,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":654,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":591,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":484,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":367,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":544,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":197,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":318,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":542,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":145,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":143,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":326,"org.apache.commons.collections4.CollectionUtilsTest.intersection":18,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":345,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":448,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":137,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":287,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":300,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":82,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":640,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":378,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":621,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":449,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":386,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":120,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":117,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":223,"org.apache.commons.collections4.map.CompositeMapTest.testPut":25,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":41,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":340,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":613,"org.apache.commons.collections4.map.CompositeMapTest.testGet":24,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":511,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":608,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":500,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":135,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":598,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":200,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":454,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":680,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":245,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":447,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":338,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":229,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":230,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":554,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":611,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":499,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":615,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":213,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":682,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":648,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":395,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":472,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":646,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":441,"org.apache.commons.collections4.CollectionUtilsTest.union":17,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":403,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":578,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":442,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":150,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":461,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":265,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":199,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":48,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":404,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":666,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":539,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":132,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":31,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":411,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":406,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":138,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":518,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":45,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":173,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":124,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":572,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":316,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":594,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":402,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":731,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":730,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":439,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":694,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":593,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":617,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":401,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":304,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":102,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":136,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":576,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":288,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":220,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":549,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":701,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":211,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":464,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":238,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":373,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":351,"org.apache.commons.collections4.ListUtilsTest.testSubtract":430,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":276,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":637,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":718,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":634,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":62,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":475,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":604,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":605,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":712,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":81,"org.apache.commons.collections4.list.TreeListTest.testListEquals":561,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":214,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":311,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":641,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":43,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":590,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":695,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":653,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":674,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":322,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":185,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":116,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":233,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":310,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":99,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":194,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":673,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":298,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":428,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":432,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":409,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":118,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":180,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":538,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":662,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":702,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":491,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":72,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":154,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":652,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":485,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":684,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":28,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":501,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":205,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":375,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":413,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":113,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":583,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":728,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":234,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":609,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":301,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":632,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":668,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":354,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":360,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":478,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":129,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":391,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":577,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":355,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":436,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":568,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":622,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":3,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":707,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":400,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":256,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":735,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":350,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":717,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":208,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":587,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":642,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":336,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":112,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":698,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":450,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":660,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":693,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":690,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":708,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":723,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":670,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":294,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":381,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":515,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":89,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":217,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":302,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":490,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":709,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":268,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":280,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":286,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":569,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":337,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":677,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":551,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":558,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":9,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":346,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":11,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":163,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":219,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":359,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":308,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":314,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":483,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":398,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":692,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":6,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":178,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":342,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":444,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":215,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":649,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":716,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":87,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":293,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":415,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":303,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":309,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":394,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":465,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":438,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":656,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":370,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":638,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":166,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":705,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":488,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":253,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":374,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":66,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":519,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":371,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":241,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":327,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":639,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":672,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":249,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":290,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":201,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":574,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":564,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":699,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":384,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":427,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":546,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":30,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":516,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":225,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":122,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":175,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":15,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":297,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":453,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":250,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":104,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":206,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":736,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":706,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":259,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":663,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":585,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":650,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":418,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":703,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":476,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":498,"org.apache.commons.collections4.set.CompositeSetTest.testContains":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":283,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":671,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":719,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":365,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":520,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":729,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":610,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":305,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":665,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":85,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":603,"org.apache.commons.collections4.ListUtilsTest.testSelect":0,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":169,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":573,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":323,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":385,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":23,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":626,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":440,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":330,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":109,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":734,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":508,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":580,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":101,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":296,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":536,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":98,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":272,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":186,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":725,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":492,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":679,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":71,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":358,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":469,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":589,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":63,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":618,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":100,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":218,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":315,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":658,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":261,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":284,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":657,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":170,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":527,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":244,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":419,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":505,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":393,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":502,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":503,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":504,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":140,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":727,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":396,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":240,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":675,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":455,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":335,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":423,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":369,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":678,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":239,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":547,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":243,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":73,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":555,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":69,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":165,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":397,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":533,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":592,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":685,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":317,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":347,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":687,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":435,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":181,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":600,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":722,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":659,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":720,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":83,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":526,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":704,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":691,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":226,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":530,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":732,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":192,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":198,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":111,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":64,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":14,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":34,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":90,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":376,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":407,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":443,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":446,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":553,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":324,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":532,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":366,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":635,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":667,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":517,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":339,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":586,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":363,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":714,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":715},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"fcf985d9-3e6c-11e6-b1f5-afde620ae0c0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"fcf9d3fa-3e6c-11e6-b1f5-53ee0763efff","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"fcf9fb0b-3e6c-11e6-b1f5-bfa19ec6c05d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"fcf9fb0c-3e6c-11e6-b1f5-9f1449000da2","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[32],"tindex":"fcf9fb0d-3e6c-11e6-b1f5-5f5c8c0beabe","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"fcfa221e-3e6c-11e6-b1f5-45a65cfb66c4","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[45,46,47,48],"tindex":"fcfa221f-3e6c-11e6-b1f5-adb480ab09f4","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n                    } \n                    if (index >= (int)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n                    } \n                    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    if (index < ((int) / 2)) {\n                        entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                            entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        }\n                    } else {\n                        entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        for (int int = int ; currentIndex > index ; currentIndex--) {\n                            entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        }\n                    }\n                    return entry;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[49],"tindex":"fcfb81b0-3e6c-11e6-b1f5-9b584c363ee3","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[50,51,52,53,54,55],"tindex":"fcfb81b1-3e6c-11e6-b1f5-49f35bc75e5c","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"fcfb81b2-3e6c-11e6-b1f5-edf7f8365920","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"fcfba8c3-3e6c-11e6-b1f5-f54d5287709a","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"fcfba8c4-3e6c-11e6-b1f5-636e3a5f1edd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[56,57,58,59,60,61],"tindex":"fcfba8c5-3e6c-11e6-b1f5-bdaf5bcc38ca","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[62,63,64],"tindex":"fcfba8c6-3e6c-11e6-b1f5-39bd570d3474","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"fcfba8c7-3e6c-11e6-b1f5-b99813a0b3b2","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[0,13],"tindex":"fcfba8c8-3e6c-11e6-b1f5-45e1eb6cccbc","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"fcfbcfd9-3e6c-11e6-b1f5-af85d51d7cc8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return node == null ? null : node.getLeft(dataElement);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"fcfbcfda-3e6c-11e6-b1f5-135bd7d44ea2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"fcfbcfdb-3e6c-11e6-b1f5-7d1373f85f7f","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"fcfbf6ec-3e6c-11e6-b1f5-79ad588e6fd9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"fcfbf6ed-3e6c-11e6-b1f5-ed09c7c9ce99","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[65,66,69,70,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,108,109,284,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"fcfbf6ee-3e6c-11e6-b1f5-3786ded213ec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"fcfbf6ef-3e6c-11e6-b1f5-736c8be7c6cf","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n                    } \n                    if (index >= (int)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n                    } \n                    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    if (index < ((int) / 2)) {\n                        entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                            entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        }\n                    } else {\n                        entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        for (int int = int ; currentIndex > index ; currentIndex--) {\n                            entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                        }\n                    }\n                    return entry;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[285],"tindex":"fcfc1e00-3e6c-11e6-b1f5-cf836df08e44","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(coll.isEmpty())) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().addAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[286,287,288,289,290,291,292,293,294,295,296],"tindex":"fcfc1e01-3e6c-11e6-b1f5-7b88fb878348","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"fcfc1e02-3e6c-11e6-b1f5-5923d56959c8","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[],"tindex":"fcfc1e03-3e6c-11e6-b1f5-3fc3c7f05f3a","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"fcfc4514-3e6c-11e6-b1f5-354be43f0b4c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[297],"tindex":"fcfc4515-3e6c-11e6-b1f5-3fbe8d1a822f","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"tindex":"fcfc4516-3e6c-11e6-b1f5-8ddfbd1483ec","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[328],"tindex":"fcfc4517-3e6c-11e6-b1f5-e369e3baaeb9","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[329],"tindex":"fcfc4518-3e6c-11e6-b1f5-a5543692a1cf","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[330],"tindex":"fcfc4519-3e6c-11e6-b1f5-276667416da0","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"fcfc6c2a-3e6c-11e6-b1f5-8d781cc9191b","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[331],"tindex":"fcfc6c2b-3e6c-11e6-b1f5-27e4805d58af","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[332],"tindex":"fcfc6c2c-3e6c-11e6-b1f5-7d364ed73a1a","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"fcfc6c2d-3e6c-11e6-b1f5-6554140a5557","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"fcfc6c2e-3e6c-11e6-b1f5-efe7e3284edc","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(coll.isEmpty())) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().addAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[333],"tindex":"fcfc933f-3e6c-11e6-b1f5-6f240d2add05","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"fcfc9340-3e6c-11e6-b1f5-b365f9c5dc38","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"fcfc9341-3e6c-11e6-b1f5-f537b38066f0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"fcfc9342-3e6c-11e6-b1f5-3585269c627b","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[412],"tindex":"fcfc9343-3e6c-11e6-b1f5-75a1bd239264","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[413],"tindex":"fcfcba54-3e6c-11e6-b1f5-d55dc8b55ec6","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[414,415,416,417,418,419,420],"tindex":"fcfcba55-3e6c-11e6-b1f5-29c90264f2e5","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"fcfcba56-3e6c-11e6-b1f5-ebeef05b63be","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[421],"tindex":"fcfcba57-3e6c-11e6-b1f5-1bb272cf8704","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[422,423,424,425,426,427,428],"tindex":"fcfcba58-3e6c-11e6-b1f5-d1a90053da09","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object == null) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[429],"tindex":"fcfce169-3e6c-11e6-b1f5-41213c6b7fde","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[],"tindex":"fcfce16a-3e6c-11e6-b1f5-315421fa9fb7","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[38],"tindex":"fcfce16b-3e6c-11e6-b1f5-33e40be253a2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"fcfce16c-3e6c-11e6-b1f5-333d8aadd891","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"fcfd087d-3e6c-11e6-b1f5-3197b770226d","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"fcfd087e-3e6c-11e6-b1f5-3371601c9e50","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"fcfd087f-3e6c-11e6-b1f5-059347ac642e","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"fcfd0880-3e6c-11e6-b1f5-b72bc20d212a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[430,431],"tindex":"fcfd0881-3e6c-11e6-b1f5-cb2f180758d6","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"fcfd0882-3e6c-11e6-b1f5-89bef8929485","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[432],"tindex":"fcfd2f93-3e6c-11e6-b1f5-d723af748167","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"fcfd2f94-3e6c-11e6-b1f5-fd14fd9a2d46","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return node == null ? null : node.getLeft(dataElement);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"fcfd2f95-3e6c-11e6-b1f5-95883bfe0475","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"fcfd2f96-3e6c-11e6-b1f5-c5b02e39a982","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[433],"tindex":"fcfd2f97-3e6c-11e6-b1f5-d3669ca40da5","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"fcfd56a8-3e6c-11e6-b1f5-c5050f2e3b41","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[434],"tindex":"fcfd56a9-3e6c-11e6-b1f5-e1af1859e25d","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[435],"tindex":"fcfd56aa-3e6c-11e6-b1f5-c33af9fefbcf","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[118,149],"tindex":"fcfd56ab-3e6c-11e6-b1f5-5d90c775f9e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"fcfd56ac-3e6c-11e6-b1f5-450bd3d72baa","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"fcfd7dbd-3e6c-11e6-b1f5-a30ff37a63cc","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[436,437,438,439,440,441,442],"tindex":"fcfd7dbe-3e6c-11e6-b1f5-03fa792d0eb4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"fcfda4cf-3e6c-11e6-b1f5-6ba8ba80c504","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[334,335,443,444,445,446,336,447,448,337,338,449,450,451,452,339,453,454,340,341,342,343,344,345,346,347,348,455,456,457,458,459,460,358,359,360,361,362,363,364,365,366,461,462,463,464,465,466,367,368,369,370,371,372,467,468,373,469,470,471,472,473,474,374,375,376,377,378,379,380,381,382,475,476,477,478,479,480,393,392,394,395,396,397,398,399,400,401,402,481,482,483,484,485,486,487],"tindex":"fcfda4d0-3e6c-11e6-b1f5-efc5650b536c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515],"tindex":"fcfda4d1-3e6c-11e6-b1f5-9b18f7cc1931","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556],"tindex":"fcfdcbe2-3e6c-11e6-b1f5-0be6fa2c85de","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[32,557,332],"tindex":"fcfdcbe3-3e6c-11e6-b1f5-4b852306b421","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"fcfdcbe4-3e6c-11e6-b1f5-c1c91628ad46","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"fcfdcbe5-3e6c-11e6-b1f5-6308c6e3d0a7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"fcfdcbe6-3e6c-11e6-b1f5-710e1a94e712","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fcfdf2f7-3e6c-11e6-b1f5-fdff36175f96","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n                    return node == null ? null : node.getKey();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"fcfdf2f8-3e6c-11e6-b1f5-4997cb7daa39","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[558,559],"tindex":"fcfdf2f9-3e6c-11e6-b1f5-6934f1f0133a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"fcfdf2fa-3e6c-11e6-b1f5-7f21fb84e01d","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"fcfdf2fb-3e6c-11e6-b1f5-e1c7eeb3847d","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581],"tindex":"fcfe1a0c-3e6c-11e6-b1f5-5f4abe582214","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index > 0) {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"fcfe1a0d-3e6c-11e6-b1f5-5db664b3d103","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"fcfe1a0e-3e6c-11e6-b1f5-45b26994c3a6","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610],"tindex":"fcfe1a0f-3e6c-11e6-b1f5-05055edf1704","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"fcfe1a10-3e6c-11e6-b1f5-a506fcec8486","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[611,612,613],"tindex":"fcfe1a11-3e6c-11e6-b1f5-773d49fbf62d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[430],"tindex":"fcfe1a12-3e6c-11e6-b1f5-d1ff312499c7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[614],"tindex":"fcfe4123-3e6c-11e6-b1f5-d526c4d935ea","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"fcfe4124-3e6c-11e6-b1f5-67d8d26605b6","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"fcfe4125-3e6c-11e6-b1f5-2dd445167804","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[163,168,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,41,42,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702],"tindex":"fcfe4126-3e6c-11e6-b1f5-599b9038e0ed","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fcfe4127-3e6c-11e6-b1f5-3542634846bc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n                    return node == null ? null : node.getKey();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[703],"tindex":"fcfe4128-3e6c-11e6-b1f5-d3fab0f06ee8","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[704],"tindex":"fcfe6839-3e6c-11e6-b1f5-d55adb3fa7a9","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[334,705,335,706,707,708,709,443,444,710,711,445,712,446,713,336,447,448,714,337,715,338,716,717,718,719,449,450,720,721,451,722,452,723,339,453,454,346,724,725,726,355,467,727,728,729,380,730,731,389,392,732,393,400,733,734,735,409,736],"tindex":"fcfe683a-3e6c-11e6-b1f5-a97de0f3628c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"fcfe683b-3e6c-11e6-b1f5-358a5fc006ad","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"fcfe683c-3e6c-11e6-b1f5-492ba68e163b","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647391/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}