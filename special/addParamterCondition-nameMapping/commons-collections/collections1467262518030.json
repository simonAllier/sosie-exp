{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":594,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":713,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":924,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":292,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":156,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":120,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":493,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":384,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":866,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":652,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":901,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":60,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":526,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":585,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":835,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":873,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":636,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":184,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":249,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":501,"org.apache.commons.collections4.ListUtilsTest.testLazyList":294,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":224,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":748,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":518,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":549,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":955,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":771,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":931,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":783,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":895,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":809,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":904,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":746,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":928,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":599,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":720,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":817,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":63,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":346,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":319,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":755,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":476,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":806,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":824,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":422,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":430,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":508,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":745,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":853,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":383,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":850,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":253,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":578,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":79,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":137,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":138,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":727,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":675,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":547,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":577,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":119,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":724,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":896,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":845,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":668,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":885,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":401,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":310,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":424,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":820,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":773,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":160,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":608,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":497,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":604,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":157,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":855,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":303,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":344,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":392,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":480,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":567,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":800,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":408,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":222,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":223,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":31,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":551,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":920,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":894,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":909,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":443,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":921,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":284,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":153,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":888,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":275,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":112,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":541,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":916,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":470,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":797,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":44,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":391,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":864,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":814,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":13,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":897,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":957,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":269,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":770,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":270,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":572,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":396,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":665,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":171,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":837,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":778,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":495,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":350,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":338,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":788,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":460,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":737,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":762,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":360,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":412,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":232,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":256,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":555,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":574,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":804,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":592,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":715,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":589,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":918,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":923,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":956,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":893,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":330,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":553,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":358,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":216,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":861,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":586,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":306,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":522,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":914,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":511,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":540,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":302,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":892,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":796,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":297,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":279,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":170,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":729,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":847,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":503,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":663,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":214,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":252,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":949,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":376,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":240,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":75,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":417,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":699,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":768,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":559,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":664,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":454,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":860,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":80,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":718,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":301,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":9,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":919,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":742,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":144,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":36,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":658,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":751,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":802,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":743,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":125,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":451,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":459,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":627,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":600,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":118,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":954,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":95,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":290,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":96,"org.apache.commons.collections4.map.HashedMapTest.testClone":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":311,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":844,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":679,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":644,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":475,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":677,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":812,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":654,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":342,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":689,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":162,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":906,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":4,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":298,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":666,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":686,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":732,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":760,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":646,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":640,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":168,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":421,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":114,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":226,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":487,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":351,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":710,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":618,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":819,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":856,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":445,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":678,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":672,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":286,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":242,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":263,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":903,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":944,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":276,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":510,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":94,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":881,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":772,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":650,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":777,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":648,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":911,"org.apache.commons.collections4.SetUtilsTest.testEquals":958,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":282,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":926,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":638,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":792,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":304,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":867,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":490,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":787,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":257,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":333,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":198,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":795,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":398,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":520,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":656,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":313,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":878,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":89,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":573,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":829,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":308,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":660,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":387,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":952,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":557,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":810,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":17,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":327,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":325,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":929,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":83,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":690,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":210,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":458,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":610,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":714,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":816,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":634,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":808,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":765,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":645,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":642,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":801,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":128,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":234,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":779,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":874,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":433,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":471,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":473,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":753,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":868,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":767,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":347,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":403,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":566,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":369,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":199,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":674,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":790,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":865,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":571,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":813,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":528,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":700,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":922,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":283,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":213,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":239,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":382,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":871,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":830,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":863,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":693,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":595,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":883,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":296,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":230,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":769,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":838,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":910,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":890,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":288,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":448,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":781,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":785,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":274,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":103,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":429,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":862,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":593,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":353,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":684,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":647,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":531,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":899,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":936,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":940,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":12,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":258,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":657,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":469,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":434,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":631,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":695,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":840,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":681,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":91,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":869,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":111,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":905,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":570,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":354,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":211,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":898,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":329,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":575,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":947,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":948,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":399,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":225,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":946,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":195,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":293,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":716,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":529,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":512,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":411,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":780,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":891,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":479,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":194,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":397,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":405,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":843,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":482,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":945,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":736,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":534,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":750,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":259,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":149,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":1,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":834,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":628,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":756,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":848,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":314,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":562,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":352,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":561,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":524,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":722,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":712,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":613,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":250,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":702,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":428,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":499,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":655,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":251,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":407,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":334,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":739,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":776,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":872,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":432,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":291,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":218,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":723,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":637,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":671,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":483,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":728,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":630,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":271,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":43,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":416,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":633,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":821,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":875,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":484,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":617,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":775,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":395,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":852,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":734,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":807,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":951,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":556,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":124,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":172,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":857,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":876,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":839,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":544,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":402,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":140,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":606,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":410,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":798,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":626,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":692,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":456,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":649,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":707,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":26,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":427,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":548,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":468,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":741,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":461,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":560,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":935,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":669,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":241,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":933,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":912,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":623,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":614,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":764,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":365,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":513,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":877,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":605,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":624,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":299,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":670,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":525,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":886,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":701,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":703,"org.apache.commons.collections4.CollectionUtilsTest.filter":496,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":611,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":643,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":823,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":579,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":639,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":415,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":393,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":523,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":84,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":602,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":805,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":880,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":759,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":414,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":915,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":477,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":371,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":625,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":598,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":8,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":683,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":597,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":601,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":341,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":793,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":71,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":104,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":731,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":917,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":907,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":516,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":900,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":472,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":99,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":884,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":680,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":833,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":938,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":609,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":87,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":537,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":831,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":698,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":841,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":766,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":233,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":822,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":752,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":887,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":38,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":858,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":248,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":450,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":130,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":632,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":431,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":441,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":506,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":413,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":345,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":662,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":588,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":859,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":842,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":474,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":932,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":533,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":694,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":532,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":164,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":312,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":719,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":478,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":629,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":953,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":708,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":641,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":368,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":203,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":289,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":685,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":927,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":32,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":116,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":375,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":621,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":937,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":607,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":827,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":564,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":942,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":941,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":498,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":373,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":673,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":509,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":309,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":811,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":913,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":730,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":361,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":761,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":849,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":749,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":439,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":818,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":152,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":151,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":212,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":740,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":882,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":362,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":784,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":378,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":889,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":596,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":691,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":754,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":206,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":930,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":576,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":939,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":280,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":789,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":584,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":705,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":300,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":66,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":176,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":22,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":324,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":521,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":854,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":721,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":169,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":379,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":870,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":758,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":688,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":738,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":133,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":591,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":925,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":237,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":453,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":826,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":34,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":444,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":159,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":815,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":846,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":902,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":155,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":167,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":709,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":390,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":934,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":687,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":676,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":389,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":879,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":612,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":943,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":950,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":851,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":622,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":436,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":786,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":255,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":696,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":357,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":426,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":908,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":799},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"d74f52e6-3e7e-11e6-b5cb-9ff720d17357","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1],"tindex":"d74fa107-3e7e-11e6-b5cb-837207b4a2ef","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                        return bag;\n                    } \n                    return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"d74fa108-3e7e-11e6-b5cb-6f900e6742aa","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"d74fc819-3e7e-11e6-b5cb-4bcd004dcc11","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[286],"tindex":"d74fc81a-3e7e-11e6-b5cb-4d7ce2869b8c","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (start < 0) {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d74fef2b-3e7e-11e6-b5cb-d9892c6bb781","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[287],"tindex":"d74fef2c-3e7e-11e6-b5cb-69c6d7b7541a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[288],"tindex":"d74fef2d-3e7e-11e6-b5cb-fd351e9596dc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[289,290,291,292,293],"tindex":"d74fef2e-3e7e-11e6-b5cb-31eb977663c8","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d750163f-3e7e-11e6-b5cb-25876a18d56c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[294],"tindex":"d7501640-3e7e-11e6-b5cb-c557285c933b","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[295],"tindex":"d7501641-3e7e-11e6-b5cb-fb7045033f7e","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"d7503d52-3e7e-11e6-b5cb-35bbb0007088","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherLengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherLengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d7503d53-3e7e-11e6-b5cb-0f916113a72d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"d7506464-3e7e-11e6-b5cb-c963a8c67094","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"d7506465-3e7e-11e6-b5cb-51346cca2fc6","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"d7506466-3e7e-11e6-b5cb-33e53be34a2e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[358,359],"tindex":"d7506467-3e7e-11e6-b5cb-69de9f9c3b2e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d7508b78-3e7e-11e6-b5cb-9949efd6261b","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[360],"tindex":"d7508b79-3e7e-11e6-b5cb-6db366ce7c00","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"d7508b7a-3e7e-11e6-b5cb-cfdf66efff5c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj.getClass().isArray()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == null) {\n                        {\n                            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                                return true;\n                            } \n                            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                                return false;\n                            } \n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[377],"tindex":"d7508b7b-3e7e-11e6-b5cb-4b22f156cd79","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[378],"tindex":"d7508b7c-3e7e-11e6-b5cb-a3c4a3a1861a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"d750b28d-3e7e-11e6-b5cb-675d6b062693","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[379],"tindex":"d750b28e-3e7e-11e6-b5cb-a56b0bdaab90","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[380],"tindex":"d750b28f-3e7e-11e6-b5cb-0318b8cb1a73","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[54,98,139,182,381,382,224,274],"tindex":"d750b290-3e7e-11e6-b5cb-91d95203f9ec","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"d750b291-3e7e-11e6-b5cb-b5e29c9bbba0","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d750d8a2-3e7e-11e6-b5cb-11548b690bc6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[383,384,385,386,387],"tindex":"d750d8a3-3e7e-11e6-b5cb-3f32ad4022b0","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"d750d8a4-3e7e-11e6-b5cb-afc414edfd29","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[388],"tindex":"d750d8a5-3e7e-11e6-b5cb-e501b3675709","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[389,390,391,392,393,394],"tindex":"d750d8a6-3e7e-11e6-b5cb-2f429c7b3fe9","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start1 - start2) > (end1 - end1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start2","end2":"end1","end1":"start1","start2":"end1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[395],"tindex":"d750ffb7-3e7e-11e6-b5cb-717836527052","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"tindex":"d750ffb8-3e7e-11e6-b5cb-191d557da677","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[494,495],"tindex":"d750ffb9-3e7e-11e6-b5cb-2729334dd19e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[496,497],"tindex":"d750ffba-3e7e-11e6-b5cb-81b0fec05797","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"d75126cb-3e7e-11e6-b5cb-b929af163f89","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d75126cc-3e7e-11e6-b5cb-2150115e3326","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d75126cd-3e7e-11e6-b5cb-69668c94007f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[498],"tindex":"d75126ce-3e7e-11e6-b5cb-65ea33c83d3a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"tindex":"d75126cf-3e7e-11e6-b5cb-9519b4a5e4a6","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d7514de0-3e7e-11e6-b5cb-296557c55acc","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[10,11,14,16,19,20,529,530,531,532,533,534],"tindex":"d7514de1-3e7e-11e6-b5cb-e9f757203365","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[535],"tindex":"d7514de2-3e7e-11e6-b5cb-7d4830b703e3","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[378,536],"tindex":"d7514de3-3e7e-11e6-b5cb-d304b51ff330","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[399,400,537,401,402,538,403,539,540,404,541,542,405,543,544,409,410,545,411,412,546,413,547,548,414,549,550,415,551,552,553,554,437,555,556,557,558,438,439,559,560,440,561,441,562,563,442,443,564,565,516,566,567,568,569,477,478,570,479,480,571,481,572,573,482,574,575,483,576,577],"tindex":"d7514de4-3e7e-11e6-b5cb-4336df3521df","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[240,238],"tindex":"d75174f5-3e7e-11e6-b5cb-2f1fc1cb289f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[578,579,580],"tindex":"d75174f6-3e7e-11e6-b5cb-75813f9e622e","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d75174f7-3e7e-11e6-b5cb-095433b9717b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d75174f8-3e7e-11e6-b5cb-d3179d041704","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[69,66,67,68,72,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"d75174f9-3e7e-11e6-b5cb-1baa47b70e92","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[581,582,583,584],"tindex":"d7519c0a-3e7e-11e6-b5cb-03f2060d7eb9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[585,586,587,588,589,590,591,592,593,594,342,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,344,610,345,346,611,347,612,613,348,614,615,349,616,617,618,619,620,621,622,623,624,625,626,627,350,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,352,645,353,354,646,355,647,648,356,649,650,357,651,652],"tindex":"d7519c0b-3e7e-11e6-b5cb-dbc08faad710","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,581,785,786,787,582,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,291,292,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,250,251,252,253,254,255,256,258,260,263,264,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903],"tindex":"d7519c0c-3e7e-11e6-b5cb-2358d7557a33","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[904],"tindex":"d751c31d-3e7e-11e6-b5cb-afa2ded8e935","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d751c31e-3e7e-11e6-b5cb-95dd0afdc5e4","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[3,18,905,906,907,908,909,910],"tindex":"d751c31f-3e7e-11e6-b5cb-29ace68d28a9","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"d751c320-3e7e-11e6-b5cb-77f7f00e824d","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"d751c321-3e7e-11e6-b5cb-79f59384b164","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"d751ea32-3e7e-11e6-b5cb-6d319dfaf573","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj.getClass().isArray()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == null) {\n                        {\n                            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                                return true;\n                            } \n                            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                                return false;\n                            } \n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[911],"tindex":"d751ea33-3e7e-11e6-b5cb-3f75b0c9e457","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d751ea34-3e7e-11e6-b5cb-c963bfc40f0f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"d751ea35-3e7e-11e6-b5cb-835f6c2f57b7","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[912,913,653,654,655,656,657,658,659,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933],"tindex":"d751ea36-3e7e-11e6-b5cb-054bdda49b6a","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[934],"tindex":"d7521147-3e7e-11e6-b5cb-ab6355eed4b0","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[535,935,936,937,938,939,484,485,486,487,488,489,490,491,492,493],"tindex":"d7521148-3e7e-11e6-b5cb-b5b4a9d73aa2","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d7521149-3e7e-11e6-b5cb-a9117cbdca06","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"d752114a-3e7e-11e6-b5cb-4b0fae866909","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[940,941],"tindex":"d752114b-3e7e-11e6-b5cb-0b2016170d5c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d752385c-3e7e-11e6-b5cb-157a58c28752","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                        return bag;\n                    } \n                    return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[942],"tindex":"d752385d-3e7e-11e6-b5cb-4dbd9edf75ec","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d752385e-3e7e-11e6-b5cb-8397f5f0ed9c","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d752385f-3e7e-11e6-b5cb-874f3d41d3a3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[943],"tindex":"d7523860-3e7e-11e6-b5cb-7595e78e946f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[424,944,431,454,470,492],"tindex":"d7523861-3e7e-11e6-b5cb-edbc4f99779c","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d7525f72-3e7e-11e6-b5cb-1b83a00a7c1d","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[945],"tindex":"d7525f73-3e7e-11e6-b5cb-b5a60a750af7","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d7525f74-3e7e-11e6-b5cb-c56b9eed829e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"d7525f75-3e7e-11e6-b5cb-2b8665a9075a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj.getClass().isArray()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == null) {\n                        {\n                            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                                return true;\n                            } \n                            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                                return false;\n                            } \n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[946,947,948,949,950,951],"tindex":"d7525f76-3e7e-11e6-b5cb-dd89aeb0ad67","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[952,953],"tindex":"d7525f77-3e7e-11e6-b5cb-f9807c4799e8","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[286],"tindex":"d7528688-3e7e-11e6-b5cb-b14c91e7c858","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[],"tindex":"d7528689-3e7e-11e6-b5cb-2f7f88701dff","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"d752868a-3e7e-11e6-b5cb-89e586b0fe7c","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[241],"tindex":"d752868b-3e7e-11e6-b5cb-8f73991bb32c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"d752868c-3e7e-11e6-b5cb-5545c14b8d4e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"d752ad9d-3e7e-11e6-b5cb-4f04ad22e859","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[954],"tindex":"d752ad9e-3e7e-11e6-b5cb-232f6b0d4899","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"d752ad9f-3e7e-11e6-b5cb-1deae017c03a","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[955],"tindex":"d752ada0-3e7e-11e6-b5cb-7bca580b97c4","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"d752ada1-3e7e-11e6-b5cb-4d1810d72f5d","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"d752ada2-3e7e-11e6-b5cb-1d1dfba24761","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[956],"tindex":"d752ada3-3e7e-11e6-b5cb-a5279d6372d5","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"d752d4b4-3e7e-11e6-b5cb-9d43968b78ff","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[957],"tindex":"d752d4b5-3e7e-11e6-b5cb-2f89b89793d1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"d752d4b6-3e7e-11e6-b5cb-65cf2ddd2c40","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (start < 0) {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[958],"tindex":"d752d4b7-3e7e-11e6-b5cb-e3dc5644464b","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (((set2 == null) || (set1 == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"d752fbc8-3e7e-11e6-b5cb-27d249403344","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"d752fbc9-3e7e-11e6-b5cb-d7aefebe83f7","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259602383/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}