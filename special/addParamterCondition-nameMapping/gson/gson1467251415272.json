{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":212,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":426,"com.google.gson.functional.StringTest.testStringValueDeserialization":424,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":124,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":541,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":367,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":504,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":7,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":323,"com.google.gson.MixedStreamTest.testWriteLenient":238,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":416,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":297,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":375,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":207,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":149,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":159,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":296,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":550,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":275,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":596,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":95,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":512,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":271,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":585,"com.google.gson.functional.ObjectTest.testSingletonLists":65,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":368,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":427,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":497,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":244,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":266,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":79,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":451,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":382,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":309,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":619,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":552,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":49,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":598,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":439,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":51,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":97,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":542,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":401,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":489,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":604,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":289,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":400,"com.google.gson.functional.EnumTest.testEnumCaseMapping":595,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":240,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":425,"com.google.gson.functional.JsonTreeTest.testToJsonTree":91,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":488,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":384,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":21,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":1,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":345,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":46,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":361,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":499,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":587,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":156,"com.google.gson.functional.ObjectTest.testNullDeserialization":317,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":59,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":436,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":304,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":562,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":622,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":505,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":310,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":287,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":200,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":314,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":621,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":93,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":385,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":141,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":566,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":565,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":381,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":47,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":547,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":526,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":344,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":571,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":75,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":366,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":524,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":396,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":417,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":539,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":133,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":358,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":197,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":257,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":122,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":423,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":548,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":540,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":74,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":471,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":180,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":242,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":300,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":10,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":403,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":509,"com.google.gson.metrics.PerformanceTest.testDummy":617,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":278,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":14,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":34,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":256,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":258,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":324,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":407,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":84,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":461,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":253,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":360,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":199,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":0,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":292,"com.google.gson.functional.CollectionTest.testSetDeserialization":449,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":96,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":69,"com.google.gson.functional.EnumTest.testEnumSet":222,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":455,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":531,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":35,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":24,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":350,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":71,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":33,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":232,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":544,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":255,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":554,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":80,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":284,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":555,"com.google.gson.functional.MapTest.testHashMapDeserialization":390,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":502,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":372,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":469,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":580,"com.google.gson.MixedStreamTest.testReadNulls":613,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":127,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":211,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":195,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":330,"com.google.gson.functional.MapTest.testSortedMap":402,"com.google.gson.functional.MapTest.testMapSerialization":112,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":213,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":459,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":537,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":477,"com.google.gson.functional.MapTest.testSerializeMaps":106,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":166,"com.google.gson.functional.MapTest.testComplexKeysSerialization":121,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":454,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":406,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":194,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":61,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":594,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":221,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":414,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":327,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":593,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":100,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":8,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":316,"com.google.gson.functional.MapTest.testStringKeyDeserialization":405,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":479,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":261,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":568,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":123,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":508,"com.google.gson.functional.PrettyPrintingTest.testMap":98,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":465,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":503,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":152,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":214,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":328,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":341,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":48,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":480,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":618,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":430,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":433,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":82,"com.google.gson.functional.CollectionTest.testQueueSerialization":153,"com.google.gson.functional.MapTest.testMapSerializationEmpty":404,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":532,"com.google.gson.functional.MapTest.testMapOfMapSerialization":111,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":523,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":363,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":447,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":148,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":534,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":267,"com.google.gson.functional.FieldNamingTest.testIdentity":167,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":428,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":259,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":52,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":318,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":9,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":64,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":90,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":578,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":491,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":605,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":429,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":484,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":408,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":529,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":376,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":3,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":147,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":357,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":387,"com.google.gson.functional.MapTest.testMapSubclassSerialization":105,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":564,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":136,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":274,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":457,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":170,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":237,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":521,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":597,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":340,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":418,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":577,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":326,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":32,"com.google.gson.functional.EnumTest.testEnumSubclass":225,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":543,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":307,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":620,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":490,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":198,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":549,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":25,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":411,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":493,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":126,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":527,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":409,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":12,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":233,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":474,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":303,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":533,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":248,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":525,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":378,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":295,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":389,"com.google.gson.MixedStreamTest.testWriteNulls":611,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":189,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":421,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":185,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":60,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":269,"com.google.gson.CommentsTest.testParseComments":608,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":28,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":66,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":588,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":174,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":478,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":546,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":458,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":114,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":143,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":280,"com.google.gson.MixedStreamTest.testReadInvalidState":609,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":92,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":39,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":380,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":168,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":501,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":481,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":171,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":517,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":146,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":364,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":559,"com.google.gson.functional.MapTest.testMapDeserialization":395,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":359,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":103,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":388,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":584,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":19,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":108,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":218,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":216,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":415,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":89,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":592,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":338,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":76,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":308,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":129,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":467,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":13,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":346,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":272,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":125,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":134,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":99,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":383,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":487,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":264,"com.google.gson.functional.PrimitiveTest.testShortSerialization":563,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":589,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":551,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":291,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":522,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":203,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":2,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":500,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":163,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":224,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":151,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":135,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":392,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":516,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":205,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":452,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":419,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":374,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":591,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":616,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":575,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":570,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":43,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":247,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":77,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":250,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":260,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":228,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":333,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":557,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":251,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":26,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":528,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":321,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":299,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":227,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":130,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":456,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":347,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":463,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":262,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":215,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":365,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":507,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":353,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":370,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":17,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":443,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":494,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":558,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":530,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":573,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":177,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":217,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":223,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":583,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":460,"com.google.gson.functional.MapTest.testGeneralMapField":118,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":298,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":183,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":574,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":191,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":464,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":485,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":85,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":116,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":334,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":498,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":553,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":5,"com.google.gson.MixedStreamTest.testReadMixedStreamed":615,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":348,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":397,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":160,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":483,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":606,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":277,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":535,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":290,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":254,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":83,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":398,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":442,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":391,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":206,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":263,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":57,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":230,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":518,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":362,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":422,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":332,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":446,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":590,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":29,"com.google.gson.functional.ObjectTest.testNestedDeserialization":322,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":279,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":312,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":581,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":11,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":288,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":572,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":173,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":245,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":399,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":431,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":31,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":561,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":410,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":210,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":420,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":162,"com.google.gson.functional.ObjectTest.testNullSerialization":305,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":132,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":441,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":393,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":117,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":492,"com.google.gson.functional.MapTest.testInterfaceTypeMap":115,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":476,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":466,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":16,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":495,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":42,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":226,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":413,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":468,"com.google.gson.MixedStreamTest.testReadClosed":610,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":335,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":286,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":510,"com.google.gson.MixedStreamTest.testWriteClosed":614,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":155,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":582,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":67,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":386,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":36,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":15,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":176,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":78,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":172,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":87,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":20,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":68,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":154,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":600,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":538,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":231,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":412,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":371,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":282,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":144,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":576,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":515,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":343,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":62,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":181,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":175,"com.google.gson.functional.CollectionTest.testQueueDeserialization":453,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":520,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":536,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":435,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":579,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":379,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":601,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":109,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":355,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":142,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":320,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":150,"com.google.gson.functional.MapTest.testRawMapSerialization":120,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":236,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":450,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":369,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":44,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":72,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":128,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":462,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":4,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":235,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":184,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":325,"com.google.gson.functional.PrimitiveTest.testByteSerialization":560,"com.google.gson.ObjectTypeAdapterTest.testSerialize":243,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":293,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":138,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":506,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":208,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":190,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":164,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":37,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":432,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":603,"com.google.gson.functional.MapTest.testMapWithQuotes":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":342,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":513,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":434,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":23,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":482,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":268,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":55,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":567,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":339,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":94,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":586,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":30,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":319,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":104,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":352,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":545,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":193,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":302,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":81,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":209,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":354,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":556,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":331,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":448,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":472,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":182,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":270,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":377,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":131,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":54,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":602,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":137,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":329,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":273,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":496,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":41,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":265,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":311,"com.google.gson.functional.ObjectTest.testNestedSerialization":73,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":178,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":139,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":201,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":438,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":56,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":119,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":169,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":22,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":239,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":623,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":70,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":281,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":569,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":18,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":276,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":356,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":241,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":511,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":607,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":313,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":337,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":599,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":45,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":437,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":188,"com.google.gson.functional.CollectionTest.testSetSerialization":161,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":486,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":27,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":101,"com.google.gson.functional.StringTest.testStringValueSerialization":440,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":63,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":145,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":246,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":444,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":470,"com.google.gson.MixedStreamTest.testWriteInvalidState":612,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":301,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":514,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":192,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":519,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":179,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":349,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":6,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":165,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":58,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":283,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":285,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":373,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":294,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":394,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":186,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":252},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"fd8c97b8-3e64-11e6-ae32-7da8bd5e96ec","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[0,1],"tindex":"fd8ce5d9-3e64-11e6-ae32-871b36091c0d","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonNull) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"fd8ce5da-3e64-11e6-ae32-81e3570a4558","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    if (json == null) {\n                        return null;\n                    } \n                    return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:168","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.ParameterizedType)"},"failures":[],"tindex":"fd8ce5db-3e64-11e6-ae32-c17440f83ca4","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:223","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (!(a instanceof java.lang.reflect.ParameterizedType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[2,3,4],"tindex":"fd8d0cec-3e64-11e6-ae32-a72c51a78d34","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"fd8d0ced-3e64-11e6-ae32-3172a5aadf14","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:313","type":"CtBinaryOperatorImpl","sourcecode":"(value) == null"},"failures":[],"tindex":"fd8d33fe-3e64-11e6-ae32-4bbed3a2bf95","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[5,6],"tindex":"fd8d33ff-3e64-11e6-ae32-037505f0a77d","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:95","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fd8d3400-3e64-11e6-ae32-cd45f422c85c","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"fd8d5b11-3e64-11e6-ae32-172bee312c9e","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.lang.Class<?>) {\n                {\n                    if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                        type = value.getClass();\n                    } \n                    return type;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"fd8d5b12-3e64-11e6-ae32-ffda57ec6381","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (json == null) {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:250","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[7,245,8,246,247,248,9,10,11,12,13,14,15,16,17,18,249,250,19,20,21,22,251,252,253,254,255,256,23,257,24,258,259,260,25,261,26,262,27,28,263,264,265,266,267,268,29,30,269,270,31,32,33,34,35,271,36,37,38,272,39,273,274,40,275,276,277,50,278,51,279,280,281,52,53,282,54,283,284,285,286,287,288,289,290,291,56,57,58,59,60,61,292,62,63,293,294,64,65,295,296,66,297,298,67,299,300,68,301,302,303,69,304,305,70,306,307,308,309,310,71,311,72,73,312,313,74,314,315,316,317,75,318,76,77,319,78,320,321,322,323,324,325,326,79,327,328,329,330,331,80,332,333,334,335,336,337,338,339,340,341,342,343,81,344,345,346,347,348,349,350,2,351,352,353,354,355,82,356,357,358,359,360,361,362,363,83,364,365,366,367,368,369,370,371,372,373,84,374,375,85,376,86,377,378,379,380,87,381,382,383,3,384,385,386,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,387,388,389,390,391,105,106,392,393,107,394,108,395,109,396,397,398,399,110,111,112,400,401,113,114,402,115,116,117,118,119,120,403,121,404,405,122,406,407,123,124,125,408,409,126,127,128,129,410,130,131,132,411,412,133,413,134,414,415,135,136,137,416,417,418,419,420,421,422,423,138,139,140,141,142,424,425,426,427,428,429,430,431,143,432,433,434,435,436,437,438,439,440,441,442,149,150,151,152,443,444,445,153,154,155,156,157,446,447,158,448,449,159,160,450,161,162,451,452,453,454,455,456,457,163,164,165,166,167,458,459,168,460,169,461,462,463,464,465,466,170,467,468,171,172,173,174,175,176,177,178,179,180,469,181,182,470,183,471,184,185,186,472,473,187,188,189,474,475,476,190,477,191,478,192,479,193,480,194,481,195,482,483,196,197,198,484,485,486,199,200,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,201,510,511,512,513,514,515,516,517,202,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,203,551,552,553,554,555,556,557,558,559,560,561,562,563,204,564,565,566,567,568,569,205,570,571,572,573,206,574,575,576,577,207,208,578,209,210,211,579,212,213,580,581,214,582,583,215,584,585,216,586,587,217,218,588,219,589,220,4,590,221,591,222,223,224,225,592,593,226,594,227,595,596,597,228,598,599,229,230,600,601,231,602,603,232,604,605,606,233,234,607,608,236,609,610,237,611,612,238,613,239,614,615,616,617,240,241,242,618,619,620,621,622,623],"tindex":"fd8d8223-3e64-11e6-ae32-59b9d952fd53","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[534,548,561],"tindex":"fd8da934-3e64-11e6-ae32-3318450bb945","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[2,219],"tindex":"fd8da935-3e64-11e6-ae32-13f15d6be6cb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fd8da936-3e64-11e6-ae32-d9514470a110","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"fd8da937-3e64-11e6-ae32-8d57668554e8","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    if (json == null) {\n                        return null;\n                    } \n                    return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonPrimitive"},"failures":[],"tindex":"fd8dd048-3e64-11e6-ae32-1927e4830070","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonPrimitive) {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[],"tindex":"fd8dd049-3e64-11e6-ae32-f5691083a9f4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value.isJsonNull()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"fd8dd04a-3e64-11e6-ae32-ad73cd22166f","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (!lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"fd8dd04b-3e64-11e6-ae32-3f597a40b2a1","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"fd8df75c-3e64-11e6-ae32-b770288bf074","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.lang.Class<?>) {\n                {\n                    if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                        type = value.getClass();\n                    } \n                    return type;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058614/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":21,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}