{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":81,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":389,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":129,"com.google.gson.functional.StringTest.testStringValueDeserialization":387,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":72,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":549,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":296,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":513,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":41,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":255,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":7,"com.google.gson.MixedStreamTest.testWriteLenient":58,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":85,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":305,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":10,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":407,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":216,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":424,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":557,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":183,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":619,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":322,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":522,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":23,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":676,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":174,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":597,"com.google.gson.functional.ObjectTest.testSingletonLists":214,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":186,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":297,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":390,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":506,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":164,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":96,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":429,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":315,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":233,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":109,"com.google.gson.internal.bind.JsonElementReaderTest.testNulls":21,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":560,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":622,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":403,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":3,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":118,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":550,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":344,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":498,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":632,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":201,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":343,"com.google.gson.functional.EnumTest.testEnumCaseMapping":618,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":95,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":388,"com.google.gson.functional.JsonTreeTest.testToJsonTree":69,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":497,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":98,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":64,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":677,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":182,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":274,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":50,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":476,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":290,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":508,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":93,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":671,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":417,"com.google.gson.functional.ObjectTest.testNullDeserialization":245,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":207,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":400,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":228,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":105,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":569,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":514,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":234,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":19,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":672,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":199,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":495,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":242,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":652,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":267,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":317,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":385,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":574,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":573,"com.google.gson.JsonParserTest.testParseString":667,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":314,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":51,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":554,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":5,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":580,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":246,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":472,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":107,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":533,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":336,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":377,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":547,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":2,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":370,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":287,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":77,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":29,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":150,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":356,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":381,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":555,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":548,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":241,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":466,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":102,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":222,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":460,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":134,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":352,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":518,"com.google.gson.metrics.PerformanceTest.testDummy":648,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":187,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":135,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":173,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":148,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":152,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":256,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":303,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":444,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":145,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":289,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":494,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":14,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":210,"com.google.gson.functional.CollectionTest.testSetDeserialization":423,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":323,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":227,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":433,"com.google.gson.functional.EnumTest.testEnumSet":609,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":539,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":44,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":151,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":654,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":279,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":331,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":235,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":172,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":631,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":552,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":147,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":562,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":196,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":262,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":94,"com.google.gson.functional.MapTest.testHashMapDeserialization":326,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":511,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":413,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":301,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":461,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":590,"com.google.gson.MixedStreamTest.testReadNulls":643,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":33,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":587,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":75,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":261,"com.google.gson.functional.MapTest.testSortedMap":347,"com.google.gson.functional.MapTest.testMapSerialization":342,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":589,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":440,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":545,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":479,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":38,"com.google.gson.functional.MapTest.testSerializeMaps":126,"com.google.gson.functional.MapTest.testComplexKeysSerialization":353,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":432,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":86,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":357,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":486,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":209,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":616,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":607,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":373,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":111,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":614,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":24,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":121,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":678,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":42,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":244,"com.google.gson.functional.MapTest.testStringKeyDeserialization":355,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":656,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":483,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":156,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":576,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":359,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":517,"com.google.gson.functional.PrettyPrintingTest.testMap":119,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":448,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":512,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":410,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":259,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":271,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":592,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":52,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":485,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":650,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":393,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":397,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":284,"com.google.gson.functional.MapTest.testMapSerializationEmpty":354,"com.google.gson.functional.CollectionTest.testQueueSerialization":414,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":540,"com.google.gson.functional.MapTest.testMapOfMapSerialization":341,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":292,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":420,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":542,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":165,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":88,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":391,"com.google.gson.functional.FieldNamingTest.testIdentity":438,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":153,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":191,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":247,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":43,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":68,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":114,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":213,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":500,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":633,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":392,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":491,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":361,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":537,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":307,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":636,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":280,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":286,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":324,"com.google.gson.functional.MapTest.testMapSubclassSerialization":328,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":572,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":181,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":375,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":435,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":127,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":450,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":531,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":620,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":270,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":586,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":258,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":171,"com.google.gson.functional.EnumTest.testEnumSubclass":612,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":551,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":231,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":651,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":499,"com.google.gson.internal.bind.JsonElementReaderTest.testArray":20,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":490,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":658,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":556,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":155,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":35,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":502,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":363,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":535,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":362,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":0,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":475,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":635,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":674,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":226,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":541,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":133,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":534,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":310,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":215,"com.google.gson.MixedStreamTest.testWriteNulls":116,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":325,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":474,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":379,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":468,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":169,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":208,"com.google.gson.CommentsTest.testParseComments":638,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":103,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":160,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":217,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":602,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":456,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":481,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":553,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":439,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":346,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":395,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":189,"com.google.gson.MixedStreamTest.testReadInvalidState":640,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":319,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":179,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":312,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":571,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":441,"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":22,"com.google.gson.JsonParserTest.testParseMixedArray":15,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":510,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":59,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":487,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":655,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":453,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":31,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":53,"com.google.gson.JsonArrayTest.testRemove":13,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":294,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":566,"com.google.gson.functional.MapTest.testMapDeserialization":334,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":471,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":288,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":124,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":6,"com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers":26,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":596,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":661,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":140,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":333,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":601,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":598,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":36,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":665,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":67,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":613,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":269,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":232,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":248,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":365,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":451,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":62,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":275,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":178,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":25,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":360,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":372,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":120,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":345,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":83,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":316,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":496,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":162,"com.google.gson.functional.PrimitiveTest.testShortSerialization":570,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":604,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":559,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":87,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":203,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":532,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":558,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":117,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":509,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":37,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":611,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":673,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":409,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":374,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":670,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":329,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":526,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":430,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":578,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":378,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":304,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":608,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":89,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":647,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":584,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":579,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":47,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":132,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":154,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":249,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":264,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":621,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":564,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":157,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":536,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":253,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":221,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":617,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":367,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":434,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":276,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":418,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":446,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":158,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":595,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":603,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":516,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":106,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":605,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":299,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":1,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":411,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":503,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":565,"com.google.gson.JsonArrayTest.testSet":11,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":538,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":582,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":457,"com.google.gson.JsonPrimitiveTest.testEquals":101,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":600,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":610,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":594,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":442,"com.google.gson.functional.MapTest.testGeneralMapField":71,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":219,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbers":27,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":465,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":583,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":447,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":480,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":492,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":306,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":348,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":265,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":384,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":507,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":561,"com.google.gson.MixedStreamTest.testReadMixedStreamed":646,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":668,"com.google.gson.JsonObjectTest.testDeepCopy":32,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":277,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":337,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":527,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":425,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":489,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":634,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":185,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":543,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":202,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":146,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":293,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":338,"com.google.gson.JsonArrayTest.testDeepCopy":12,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":406,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":327,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":57,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":161,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":205,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":625,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":528,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":90,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":291,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":380,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":100,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":192,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":263,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":419,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":606,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":167,"com.google.gson.functional.ObjectTest.testNestedDeserialization":254,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":188,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":239,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":591,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":61,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":200,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":581,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":455,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":16,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":130,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":339,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":394,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":170,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":568,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":366,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":9,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":80,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":428,"com.google.gson.functional.ObjectTest.testNullSerialization":110,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":368,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":405,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":330,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":349,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":501,"com.google.gson.functional.MapTest.testInterfaceTypeMap":70,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":477,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":662,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":449,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":137,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":504,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":46,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":615,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":371,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":452,"com.google.gson.MixedStreamTest.testReadClosed":641,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":266,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":198,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":520,"com.google.gson.MixedStreamTest.testWriteClosed":645,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":416,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":593,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":138,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":318,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":175,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":136,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":74,"com.google.gson.stream.JsonWriterTest.testLongs":108,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":251,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":454,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":313,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":141,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":223,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":415,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":626,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":657,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":546,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":628,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":369,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":421,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":18,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":28,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":300,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":193,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":585,"com.google.gson.stream.JsonWriterTest.testNumbers":663,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":525,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":272,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":211,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":462,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":73,"com.google.gson.functional.CollectionTest.testQueueDeserialization":431,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":530,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":544,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":399,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":588,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":311,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":627,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":243,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":335,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":283,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":252,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":386,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":408,"com.google.gson.functional.MapTest.testRawMapSerialization":351,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":639,"com.google.gson.JsonParserTest.testParseReader":666,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":426,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":298,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":48,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":237,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":364,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":445,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":115,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":82,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":84,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":257,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":467,"com.google.gson.functional.PrimitiveTest.testByteSerialization":567,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":39,"com.google.gson.ObjectTypeAdapterTest.testSerialize":664,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":382,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":515,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":660,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":78,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":478,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":436,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":176,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":396,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":630,"com.google.gson.functional.MapTest.testMapWithQuotes":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":97,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":523,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":398,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":149,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":488,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":166,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":659,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":575,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":4,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":321,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":599,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":168,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":250,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":125,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":56,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":281,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":225,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":484,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":308,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":273,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":282,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":624,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":563,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":112,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":422,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":470,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":309,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":463,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":34,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":194,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":629,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":376,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":260,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":180,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":505,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":60,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":45,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":163,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":236,"com.google.gson.functional.ObjectTest.testNestedSerialization":238,"com.google.gson.JsonObjectTest.testAddingStringProperties":679,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":458,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":383,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":402,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":519,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":204,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":350,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":443,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":142,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":644,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":653,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":190,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":229,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":577,"com.google.gson.JsonPrimitiveTest.testBoolean":99,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":63,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":184,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":285,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":521,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":637,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":649,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":268,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":623,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":49,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":401,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":473,"com.google.gson.functional.CollectionTest.testSetSerialization":427,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":493,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":122,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":159,"com.google.gson.functional.StringTest.testStringValueSerialization":404,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":212,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":131,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":412,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":464,"com.google.gson.MixedStreamTest.testWriteInvalidState":642,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":224,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":524,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":482,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":529,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":459,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":278,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":437,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":669,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":206,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":675,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":195,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":30,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":197,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":177,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":302,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":40,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":332,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":128,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":144,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":469},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"db905b8f-3e52-11e6-97c9-4151e89de5cd","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:86","type":"CtMethodImpl","sourcecode":"private com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField createBoundField(final com.google.gson.Gson context, final java.lang.reflect.Field field, final java.lang.String name, final com.google.gson.reflect.TypeToken<?> fieldType, boolean serialize, boolean deserialize) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = com.google.gson.internal.Primitives.isPrimitive(fieldType.getRawType());\n            return new com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\n                final com.google.gson.TypeAdapter<?> typeAdapter = getFieldAdapter(context, field, fieldType);\n\n                @java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n                @java.lang.Override\n                void write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    java.lang.Object java.lang.Object = field.get(value);\n                    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n                    t.write(writer, fieldValue);\n                }\n\n                @java.lang.Override\n                void read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n                    if ((fieldValue != null) || (!isPrimitive)) {\n                        field.set(value, fieldValue);\n                    } \n                }\n\n                public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"db90d0c0-3e52-11e6-97c9-8f71954a98f6","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonObject) {\n        {\n            if (element instanceof com.google.gson.JsonArray) {\n                {\n                    if (element == null) {\n                        element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n                    } \n                    java.util.List<com.google.gson.JsonElement>.add(element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.FieldNamingPolicy:143","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLetter(firstCharacter)"},"failures":[33,34,35,36,37,38],"tindex":"db90f7d1-3e52-11e6-97c9-9b872405e4c1","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Character.isLetter(firstCharacter)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstCharacter":"firstCharacter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[39,40],"tindex":"db90f7d2-3e52-11e6-97c9-012fa4a83291","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"db90f7d3-3e52-11e6-97c9-4f704e8c65b7","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:314","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[59,60],"tindex":"db911ee4-3e52-11e6-97c9-d7b4875f2d14","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:311","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node, com.google.gson.internal.LinkedHashTreeMap.Node<K, V> replacement) {\n    if (replacement != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n                    if (replacement != null) {\n                        replacement.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = parent;\n                    } \n                    if (parent != null) {\n                        if ((parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == node) {\n                            parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = replacement;\n                        } else {\n                            assert (parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == node;\n                            parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = replacement;\n                        }\n                    } else {\n                        int int = (node.int) & ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[].int) - 1);\n                        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][index] = replacement;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[61,0,62,1,63,64,65,3,66,67,68,69,70,71,72,73,74,75,76,77,10,78,79,80,81,82,83,84,85,86,29,30,87,88,31,89,90,91,92],"tindex":"db9145f5-3e52-11e6-97c9-75e1cb53ef69","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if (value.isJsonNull()) {\n        {\n            if ((java.lang.String) != null) {\n                if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n                    com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n                    object.add(java.lang.String, value);\n                } \n                java.lang.String = null;\n            } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n                com.google.gson.JsonElement = value;\n            } else {\n                com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n                if (element instanceof com.google.gson.JsonArray) {\n                    ((com.google.gson.JsonArray)(element)).add(value);\n                } else {\n                    throw new java.lang.IllegalStateException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"db9145f6-3e52-11e6-97c9-cf9b1af334d2","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[],"tindex":"db9145f7-3e52-11e6-97c9-172d27c13b5c","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                {\n                    if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                        throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                    } \n                    put(new com.google.gson.JsonPrimitive(value));\n                    return com.google.gson.internal.bind.JsonTreeWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.Class<?>"},"failures":[],"tindex":"db916d08-3e52-11e6-97c9-fda1cde0f088","method":{"position":"com.google.gson.internal.$Gson$Types:217","type":"CtMethodImpl","sourcecode":"public static java.lang.String typeToString(java.lang.reflect.Type type) {\n    return type instanceof java.lang.Class ? ((java.lang.Class<?>)(type)).getName() : type.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[],"tindex":"db916d09-3e52-11e6-97c9-a7a005e0ce96","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof com.google.gson.JsonNull) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"db916d0a-3e52-11e6-97c9-017eb7eaf53a","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            if (value == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    put(new com.google.gson.JsonPrimitive(value));\n                    return com.google.gson.internal.bind.JsonTreeWriter.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[93],"tindex":"db916d0b-3e52-11e6-97c9-db9d285e17cd","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src != null) {\n                {\n                    return toJsonTree(src);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[94,95],"tindex":"db91941c-3e52-11e6-97c9-89ac1a0690f7","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[96,97,98,66,67,68,69,99,100,101,102,17,103,104,105],"tindex":"db91941d-3e52-11e6-97c9-075f9fb697dd","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.String) {\n        {\n            if (target instanceof java.lang.String) {\n                {\n                    if (target instanceof java.lang.String) {\n                        {\n                            if (target instanceof java.lang.String) {\n                                return true;\n                            } \n                            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n                            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                                    return true;\n                                } \n                            }\n                            return false;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"target"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[106,107,108,109],"tindex":"db91941e-3e52-11e6-97c9-97e9f787f8fb","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.write(java.lang.Long.toString(value));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"db91941f-3e52-11e6-97c9-6b22c51ee49a","method":{"position":"com.google.gson.internal.ConstructorConstructor:128","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T>com.google.gson.internal.ObjectConstructor<T> newDefaultImplementationConstructor(final java.lang.reflect.Type type, java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.util.Collection.java.util.Collection.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedSet.java.util.SortedSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.EnumSet.java.util.EnumSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        @java.lang.SuppressWarnings(value = \"rawtypes\")\n                        public T construct() {\n                            if (type instanceof java.lang.reflect.ParameterizedType) {\n                                java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0];\n                                if (elementType instanceof java.lang.Class) {\n                                    return ((T)(java.util.EnumSet.noneOf(((java.lang.Class)(elementType)))));\n                                } else {\n                                    throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                                }\n                            } else {\n                                throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                            }\n                        }\n                    };\n                } else if (java.util.Set.java.util.Set.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.Queue.java.util.Queue.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedList<java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.ArrayList<java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            if (java.util.Map.java.util.Map.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedMap.java.util.SortedMap.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else if ((type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.java.lang.String.java.lang.Class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"db91bb30-3e52-11e6-97c9-47f2e22ecdcc","method":{"position":"com.google.gson.internal.$Gson$Types:158","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.reflect.Type a, java.lang.reflect.Type b) {\n    if (a == b) {\n        return true;\n    } else if (a instanceof java.lang.Class) {\n        return a.equals(b);\n    } else if (a instanceof java.lang.reflect.ParameterizedType) {\n        if (!(b instanceof java.lang.reflect.ParameterizedType)) {\n            return false;\n        } \n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(a));\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(b));\n        return ((com.google.gson.internal.$Gson$Types.equal(pa.getOwnerType(), pb.getOwnerType())) && (pa.getRawType().equals(pb.getRawType()))) && (java.util.Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments()));\n    } else if (a instanceof java.lang.reflect.GenericArrayType) {\n        if (!(b instanceof java.lang.reflect.GenericArrayType)) {\n            return false;\n        } \n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(a));\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(b));\n        return com.google.gson.internal.$Gson$Types.equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n    } else if (a instanceof java.lang.reflect.WildcardType) {\n        if (!(b instanceof java.lang.reflect.WildcardType)) {\n            return false;\n        } \n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(a));\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(b));\n        return (java.util.Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())) && (java.util.Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds()));\n    } else if (a instanceof java.lang.reflect.TypeVariable) {\n        if (!(b instanceof java.lang.reflect.TypeVariable)) {\n            return false;\n        } \n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(a));\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(b));\n        return ((va.getGenericDeclaration()) == (vb.getGenericDeclaration())) && (va.getName().equals(vb.getName()));\n    } else {\n        return false;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtBinaryOperatorImpl","sourcecode":"root == null"},"failures":[59],"tindex":"db91e241-3e52-11e6-97c9-3fb2124ffd1a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root == null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[],"tindex":"db91e242-3e52-11e6-97c9-83a2bc1286b5","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonNull) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[],"tindex":"db920953-3e52-11e6-97c9-7b285d9fee7f","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.String) {\n        {\n            if (target instanceof java.lang.String) {\n                {\n                    if (target instanceof java.lang.String) {\n                        {\n                            if (target instanceof java.lang.String) {\n                                return true;\n                            } \n                            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n                            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                                    return true;\n                                } \n                            }\n                            return false;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[],"tindex":"db920954-3e52-11e6-97c9-77eb6286b6fa","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    if (src != null) {\n                        {\n                            if (src != null) {\n                                toJson(src, src.getClass(), writer);\n                            } else {\n                                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n                            }\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new com.google.gson.JsonIOException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[110,111,112,113,114,115,116],"tindex":"db920955-3e52-11e6-97c9-8367b7865181","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((value == null) || (value.isJsonNull())) {\n                out.nullValue();\n            } else if (value.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    out.value(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    out.value(primitive.getAsBoolean());\n                } else {\n                    out.value(primitive.getAsString());\n                }\n            } else if (value.isJsonArray()) {\n                out.beginArray();\n                for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n                    write(out, e);\n                }\n                out.endArray();\n            } else if (value.isJsonObject()) {\n                out.beginObject();\n                for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n                    out.name(e.getKey());\n                    write(out, e.getValue());\n                }\n                out.endObject();\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[117],"tindex":"db920956-3e52-11e6-97c9-c1f22a3b0c45","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n                    out.value(dateFormatAsString);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db920957-3e52-11e6-97c9-ab7325d922d3","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                {\n                    if (json == null) {\n                        return null;\n                    } \n                    java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n                    T T = ((T)(fromJson(reader, typeOfT)));\n                    return target;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[3,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"db923068-3e52-11e6-97c9-0307e7021f7d","method":{"position":"com.google.gson.stream.JsonWriter:212","type":"CtMethodImpl","sourcecode":"public final void setIndent(java.lang.String indent) {\n    if (indent == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (indent == null) {\n                {\n                    if ((indent.length()) == 0) {\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n                    } else {\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[],"tindex":"db923069-3e52-11e6-97c9-c3f3e38d1399","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.String) {\n        {\n            if (target instanceof java.lang.String) {\n                {\n                    if (target instanceof java.lang.String) {\n                        {\n                            if (target instanceof java.lang.String) {\n                                return true;\n                            } \n                            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n                            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                                    return true;\n                                } \n                            }\n                            return false;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[],"tindex":"db92306a-3e52-11e6-97c9-255652431d97","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src != null) {\n                {\n                    return toJsonTree(src);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[41,130,42,131,132,133,43,134,61,0,62,135,136,137,1,63,138,139,140,141,64,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,65,170,171,172,173,44,174,175,176,177,178,179,180,181,182,183,184,185,186,187,3,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,39,40,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,110,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,96,111,259,260,261,112,262,263,264,265,266,267,268,269,4,270,271,97,272,273,5,274,275,276,277,278,279,117,280,281,106,282,283,284,285,286,287,288,289,290,291,292,293,294,295,107,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,113,98,317,318,66,67,68,69,319,320,321,322,323,118,119,120,121,122,123,124,125,324,6,325,326,327,328,126,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,70,348,349,71,350,351,352,353,354,355,356,357,358,359,72,360,361,362,363,33,364,365,366,367,34,368,35,369,370,371,372,373,36,374,375,376,7,377,8,378,9,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,37,436,437,38,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,73,74,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,75,488,489,76,77,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,53,527,528,529,530,531,532,54,533,534,55,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,56,553,554,555,556,557,558,559,560,561,562,94,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,57,583,584,585,586,10,78,114,79,80,587,588,81,589,590,591,592,593,594,595,596,597,598,599,93,600,601,602,603,604,605,115,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,127,116,642,58,643,644,645,646,647,648,95,649,102,650,109,651,652,105,653],"tindex":"db92577b-3e52-11e6-97c9-afe6bfbb77ff","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                {\n                    if (serializeSpecialFloatingPointValues) {\n                        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n                    } \n                    return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                        @java.lang.Override\n                        public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                            if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                                in.nextNull();\n                                return null;\n                            } \n                            return ((float)(in.nextDouble()));\n                        }\n\n                        @java.lang.Override\n                        public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                            if (value == null) {\n                                out.nullValue();\n                                return ;\n                            } \n                            float float = value.floatValue();\n                            checkValidFloatingPoint(floatValue);\n                            out.value(value);\n                        }\n                    };\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[263,279,311],"tindex":"db92577c-3e52-11e6-97c9-9b90cdaa0816","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json == null) {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"db927e8d-3e52-11e6-97c9-7522dd6add28","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:311","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node, com.google.gson.internal.LinkedHashTreeMap.Node<K, V> replacement) {\n    if (replacement != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n                    if (replacement != null) {\n                        replacement.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = parent;\n                    } \n                    if (parent != null) {\n                        if ((parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == node) {\n                            parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = replacement;\n                        } else {\n                            assert (parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == node;\n                            parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = replacement;\n                        }\n                    } else {\n                        int int = (node.int) & ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[].int) - 1);\n                        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][index] = replacement;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"replacement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db927e8e-3e52-11e6-97c9-5da9912cfc4a","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[654,655,656],"tindex":"db927e8f-3e52-11e6-97c9-d5fff407f02c","method":{"position":"com.google.gson.reflect.TypeToken:238","type":"CtMethodImpl","sourcecode":"private static boolean typeEquals(java.lang.reflect.ParameterizedType from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (from.getRawType().equals(to.getRawType())) {\n        {\n            if (from.getRawType().equals(to.getRawType())) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = from.getActualTypeArguments();\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = to.getActualTypeArguments();\n                for (int int = 0 ; i < (fromArgs.int) ; i++) {\n                    if (!(com.google.gson.reflect.TypeToken.matches(fromArgs[i], toArgs[i], typeVarMap))) {\n                        return false;\n                    } \n                }\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","to":"to"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"db92a5a0-3e52-11e6-97c9-29284a6476db","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (separator == null) {\n        {\n            if (separator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    for (int int = 0 ; i < (name.length()) ; i++) {\n                        char char = name.charAt(i);\n                        if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                            translation.append(separator);\n                        } \n                        translation.append(character);\n                    }\n                    return translation.toString();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"separator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db92a5a1-3e52-11e6-97c9-856be0420c0b","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"db92a5a2-3e52-11e6-97c9-515018a816d5","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (separator == null) {\n        {\n            if (separator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    for (int int = 0 ; i < (name.length()) ; i++) {\n                        char char = name.charAt(i);\n                        if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                            translation.append(separator);\n                        } \n                        translation.append(character);\n                    }\n                    return translation.toString();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"separator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"db92a5a3-3e52-11e6-97c9-05c815639555","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db92a5a4-3e52-11e6-97c9-8fcbf487aa63","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    java.lang.Object java.lang.Object = field.get(value);\n                    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n                    t.write(writer, fieldValue);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.IllegalAccessException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:497","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)"},"failures":[41,130,42,131,132,133,43,134,144,145,146,147,148,174,178,180,46,47,657,196,197,200,203,206,208,255,294,300,304,312,325,448,658,650,109,651],"tindex":"db92ccb5-3e52-11e6-97c9-0b9f35e7d06f","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                {\n                    com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n                    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                        java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n                    } \n                    if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                        com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n                    } \n                    if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n                    } \n                    return com.google.gson.GsonBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[],"tindex":"db92ccb6-3e52-11e6-97c9-bb95afad9a23","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                {\n                    if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                        throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                    } \n                    put(new com.google.gson.JsonPrimitive(value));\n                    return com.google.gson.internal.bind.JsonTreeWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"db92ccb7-3e52-11e6-97c9-f31f7474e909","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"db92f3c8-3e52-11e6-97c9-cf29e8fa2c52","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[0,1,63,64,65,69,73,74,491,10,78,114,79,80,81],"tindex":"db931ad9-3e52-11e6-97c9-c99eb399bfe0","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == null) {\n        {\n            if (src == null) {\n                return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            return toJsonTree(src, src.getClass());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db931ada-3e52-11e6-97c9-bb1fbb78c053","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n                    out.value(dateFormatAsString);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"db931adb-3e52-11e6-97c9-718f9cf02ca3","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof com.google.gson.JsonObject) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.FieldNamingPolicy:155","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.Character.isUpperCase(firstCharacter))"},"failures":[],"tindex":"db931adc-3e52-11e6-97c9-f35d822b67e0","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Character.isLetter(firstCharacter)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstCharacter":"firstCharacter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"db9341ed-3e52-11e6-97c9-47945cd285a1","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[174,178,179,182],"tindex":"db9341ee-3e52-11e6-97c9-b1ea463db4b1","method":{"position":"com.google.gson.internal.Primitives:79","type":"CtMethodImpl","sourcecode":"public static boolean isWrapperType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(com.google.gson.internal.$Gson$Preconditions.checkNotNull(type));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[61,0,62,1,63,64,65,3,66,67,69,70,71,72,73,77,10,78,79,80,81,82,31],"tindex":"db9341ef-3e52-11e6-97c9-b1fff10652cd","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"db9341f0-3e52-11e6-97c9-d75815c60475","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"db9341f1-3e52-11e6-97c9-63f342253ac0","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src, typeOfSrc);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[41,42,43,136,140,142,156,157,159,163,165,166,168,65,170,171,172,173,44,175,176,177,179,182,45,46,47,48,49,50,51,52,186,3,191,192,659,205,212,213,217,227,229,235,237,238,246,248,251,96,262,4,97,278,293,313,67,319,320,321,322,323,118,119,120,121,122,123,124,125,6,126,342,71,351,359,360,363,364,368,372,375,376,382,385,386,407,409,410,415,418,424,427,428,37,436,437,38,438,455,456,463,469,474,478,480,486,75,76,77,499,519,534,537,538,542,551,56,554,555,558,561,94,566,567,568,569,570,571,576,578,582,57,584,587,589,592,621,624,625,628,633,639,127,58,660,661,649,662,663,102,664,29,30,89],"tindex":"db936902-3e52-11e6-97c9-c52303d1dd3d","method":{"position":"com.google.gson.stream.JsonWriter:490","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            java.lang.String java.lang.String = value.toString();\n            if ((!(boolean)) && (((string.equals(\"-Infinity\")) || (string.equals(\"Infinity\"))) || (string.equals(\"NaN\")))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            beforeValue(false);\n            java.io.Writer.append(string);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db936903-3e52-11e6-97c9-99a84d30ad6c","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:164","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"db939014-3e52-11e6-97c9-9fac8661b499","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (to == null) {\n        {\n            if (from instanceof java.lang.reflect.GenericArrayType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:167","type":"CtUnaryOperatorImpl","sourcecode":"!create"},"failures":[61,0,62,1,63,64,152,153,180,665,3,193,659,267,68,327,329,330,334,338,343,352,355,375,376,378,441,442,443,73,74,77,10,78,79,80,81,82,666,667,668,669,670,671,672,673,674,103,675,676,677,678,104,32,679],"tindex":"db939015-3e52-11e6-97c9-9f6f7a4571c3","method":{"position":"com.google.gson.internal.LinkedTreeMap:121","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> find(K key, boolean create) {\n    if (!create) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.this.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(nearest , key , header , header.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n            } else {\n                created = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(nearest , key , header , header.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            (int)++;\n            (int)++;\n            return created;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[33,34,35,36,37,38],"tindex":"db93b726-3e52-11e6-97c9-59df77763b70","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"db93b727-3e52-11e6-97c9-db9567aebcc0","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    if (src != null) {\n                        {\n                            if (src != null) {\n                                toJson(src, src.getClass(), writer);\n                            } else {\n                                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n                            }\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new com.google.gson.JsonIOException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"db93b728-3e52-11e6-97c9-2fb092b4c83a","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    if (src != null) {\n                        {\n                            if (src != null) {\n                                toJson(src, src.getClass(), writer);\n                            } else {\n                                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n                            }\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new com.google.gson.JsonIOException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db93b729-3e52-11e6-97c9-df074f2a2fe5","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            if (!(isLenient())) {\n                double double = value.doubleValue();\n                if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) {\n                    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                } \n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[61,0,62,1,63,64,65,3,66,67,68,69,72,73,74,491,10,78,114,79,80,81,82,83,84],"tindex":"db93de3a-3e52-11e6-97c9-379f40d28cb3","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"db93de3b-3e52-11e6-97c9-5d131b940e1c","method":{"position":"com.google.gson.stream.JsonWriter:212","type":"CtMethodImpl","sourcecode":"public final void setIndent(java.lang.String indent) {\n    if (indent == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (indent == null) {\n                {\n                    if ((indent.length()) == 0) {\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n                    } else {\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n                        com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"indent"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db93de3c-3e52-11e6-97c9-d14691a8dc0d","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db93de3d-3e52-11e6-97c9-ad3f7cf7810b","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"db93de3e-3e52-11e6-97c9-afa3b1ec2488","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (to == null) {\n        {\n            if (from instanceof java.lang.reflect.GenericArrayType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"db94054f-3e52-11e6-97c9-81895c10eb6c","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"db940550-3e52-11e6-97c9-db2f3f5e47b8","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof com.google.gson.JsonNull) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Preconditions:41","type":"CtUnaryOperatorImpl","sourcecode":"!condition"},"failures":[],"tindex":"db940551-3e52-11e6-97c9-8d2153330306","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"condition":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[],"tindex":"db940552-3e52-11e6-97c9-8f88ac76764d","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src != null) {\n        {\n            if (src != null) {\n                {\n                    try {\n                        com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                        toJson(src, typeOfSrc, jsonWriter);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonIOException(e);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1413","type":"CtVariableReadImpl","sourcecode":"throwOnEof"},"failures":[],"tindex":"db940553-3e52-11e6-97c9-5534a4e1b232","method":{"position":"com.google.gson.stream.JsonReader:1331","type":"CtMethodImpl","sourcecode":"private int nextNonWhitespace(boolean throwOnEof) throws java.io.IOException {\n    if (throwOnEof) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int int = int;\n            int int = int;\n            while (true) {\n                if (p == l) {\n                    int = p;\n                    if (!(fillBuffer(1))) {\n                        break;\n                    } \n                    p = int;\n                    l = int;\n                } \n                int int = buffer[(p++)];\n                if (c == '\\n') {\n                    (int)++;\n                    int = p;\n                    continue;\n                } else if (((c == ' ') || (c == '\\r')) || (c == '\\t')) {\n                    continue;\n                } \n                if (c == '/') {\n                    int = p;\n                    if (p == l) {\n                        (int)--;\n                        boolean boolean = fillBuffer(2);\n                        (int)++;\n                        if (!charsLoaded) {\n                            return c;\n                        } \n                    } \n                    checkLenient();\n                    char char = buffer[int];\n                    switch (peek) {\n                        case '*' :\n                            (int)++;\n                            if (!(skipTo(\"*/\"))) {\n                                throw syntaxError(\"Unterminated comment\");\n                            } \n                            p = (int) + 2;\n                            l = int;\n                            continue;\n                        case '/' :\n                            (int)++;\n                            skipToEndOfLine();\n                            p = int;\n                            l = int;\n                            continue;\n                        default :\n                            return c;\n                    }\n                } else if (c == '#') {\n                    int = p;\n                    checkLenient();\n                    skipToEndOfLine();\n                    p = int;\n                    l = int;\n                } else {\n                    int = p;\n                    return c;\n                }\n            }\n            if (throwOnEof) {\n                throw new java.io.EOFException(((((\"End of input\" + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())));\n            } else {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwOnEof":"throwOnEof"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db942c64-3e52-11e6-97c9-25ed1113f126","method":{"position":"com.google.gson.internal.bind.TypeAdapters:297","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db942c65-3e52-11e6-97c9-abadefa92aa0","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                {\n                    if (json == null) {\n                        return null;\n                    } \n                    java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n                    T T = ((T)(fromJson(reader, typeOfT)));\n                    return target;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:250","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[],"tindex":"db942c66-3e52-11e6-97c9-17d497779449","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                {\n                    if (serializeSpecialFloatingPointValues) {\n                        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n                    } \n                    return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                        @java.lang.Override\n                        public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                            if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                                in.nextNull();\n                                return null;\n                            } \n                            return ((float)(in.nextDouble()));\n                        }\n\n                        @java.lang.Override\n                        public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                            if (value == null) {\n                                out.nullValue();\n                                return ;\n                            } \n                            float float = value.floatValue();\n                            checkValidFloatingPoint(floatValue);\n                            out.value(value);\n                        }\n                    };\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"db945377-3e52-11e6-97c9-7d792134b781","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"db945378-3e52-11e6-97c9-9f1eee756931","method":{"position":"com.google.gson.internal.Primitives:79","type":"CtMethodImpl","sourcecode":"public static boolean isWrapperType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(com.google.gson.internal.$Gson$Preconditions.checkNotNull(type));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"db945379-3e52-11e6-97c9-cd6948bf9f4c","method":{"position":"com.google.gson.JsonArray:81","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement set(int index, com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"db94537a-3e52-11e6-97c9-25a5524ff228","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof com.google.gson.JsonObject) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db94537b-3e52-11e6-97c9-5596c07a4401","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                return null;\n            } \n            return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"db947a8c-3e52-11e6-97c9-a38be6dd7485","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            if (value == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    put(new com.google.gson.JsonPrimitive(value));\n                    return com.google.gson.internal.bind.JsonTreeWriter.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db947a8d-3e52-11e6-97c9-abe50349baf4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    java.lang.Object java.lang.Object = field.get(value);\n                    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n                    t.write(writer, fieldValue);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.IllegalAccessException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:452","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.InstanceCreator<?>"},"failures":[],"tindex":"db947a8e-3e52-11e6-97c9-79ef19fdc83d","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                {\n                    com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n                    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                        java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n                    } \n                    if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                        com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n                    } \n                    if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n                    } \n                    return com.google.gson.GsonBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[],"tindex":"db94c8af-3e52-11e6-97c9-79e27e1123b8","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src != null) {\n        {\n            if (src != null) {\n                {\n                    try {\n                        com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                        toJson(src, typeOfSrc, jsonWriter);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonIOException(e);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"db94c8b0-3e52-11e6-97c9-750724c339b3","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:512","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:99","type":"CtVariableReadImpl","sourcecode":"serialization"},"failures":[],"tindex":"db94c8b1-3e52-11e6-97c9-7f43f0da3ecd","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialization":"serialization"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"db94efc2-3e52-11e6-97c9-49ff072eb88c","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if (primitive.isNumber()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n                java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n                return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"db94efc3-3e52-11e6-97c9-3f61f4089960","method":{"position":"com.google.gson.internal.Excluder:149","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field field, boolean serialize) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((int) & (field.getModifiers())) != 0) {\n                return true;\n            } \n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(field.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), field.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if (field.isSynthetic()) {\n                return true;\n            } \n            if (boolean) {\n                com.google.gson.annotations.Expose com.google.gson.annotations.Expose = field.getAnnotation(com.google.gson.annotations.Expose.com.google.gson.annotations.Expose.java.lang.Class);\n                if ((annotation == null) || (serialize ? !(annotation.serialize()) : !(annotation.deserialize()))) {\n                    return true;\n                } \n            } \n            if ((!(boolean)) && (isInnerClass(field.getType()))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(field.getType())) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            if (!(list.isEmpty())) {\n                com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(field);\n                for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                    if (exclusionStrategy.shouldSkipField(fieldAttributes)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db94efc4-3e52-11e6-97c9-897a1827b7b3","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"db94efc5-3e52-11e6-97c9-9365090fc723","method":{"position":"com.google.gson.internal.bind.TypeAdapters:297","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof java.util.Iterator"},"failures":[],"tindex":"db94efc6-3e52-11e6-97c9-f7b4baa2e914","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    if (o instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"db94efc7-3e52-11e6-97c9-21560dbe409a","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonObject) {\n        {\n            if (element instanceof com.google.gson.JsonArray) {\n                {\n                    if (element == null) {\n                        element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n                    } \n                    java.util.List<com.google.gson.JsonElement>.add(element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"db9516d8-3e52-11e6-97c9-031a25542a34","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"db9516d9-3e52-11e6-97c9-55d74e217322","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242177390/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.write(java.lang.Long.toString(value));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":91,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}