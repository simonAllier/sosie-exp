{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":63,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":405,"com.google.gson.functional.StringTest.testStringValueDeserialization":403,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":60,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":194,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":313,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":75,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":295,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":421,"com.google.gson.MixedStreamTest.testWriteLenient":589,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":203,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":398,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":534,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":259,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":551,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":361,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":504,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":515,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":154,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":322,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":453,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":485,"com.google.gson.functional.ObjectTest.testSingletonLists":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":195,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":518,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":306,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":406,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":605,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":248,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":222,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":556,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":213,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":274,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":602,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":364,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":507,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":419,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":569,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":353,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":443,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":42,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":298,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":597,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":472,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":41,"com.google.gson.functional.EnumTest.testEnumCaseMapping":503,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":11,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":404,"com.google.gson.functional.JsonTreeTest.testToJsonTree":101,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":297,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":448,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":216,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":170,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":493,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":129,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":187,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":308,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":456,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":544,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":228,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":416,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":270,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":374,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":314,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":275,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":470,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":576,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":283,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":217,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":379,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":532,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":378,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":212,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":358,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":337,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":169,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":385,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":125,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":193,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":335,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":34,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":350,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":422,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":184,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":397,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":234,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":56,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":359,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":428,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":351,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":119,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":282,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":265,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":567,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":580,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":52,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":82,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":318,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":519,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":105,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":483,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":528,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":236,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":58,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":219,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":18,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":201,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":186,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":525,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":575,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":231,"com.google.gson.functional.CollectionTest.testSetDeserialization":550,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":155,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":72,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":269,"com.google.gson.functional.EnumTest.testEnumSet":494,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":342,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":484,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":235,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":2,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":29,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":175,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":276,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":482,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":596,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":355,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":527,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":366,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":226,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":467,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":367,"com.google.gson.functional.MapTest.testHashMapDeserialization":23,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":311,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":540,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":199,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":65,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":568,"com.google.gson.MixedStreamTest.testReadNulls":590,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":61,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":83,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":225,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":393,"com.google.gson.functional.MapTest.testSortedMap":45,"com.google.gson.functional.MapTest.testMapSerialization":40,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":64,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":14,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":348,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":132,"com.google.gson.functional.MapTest.testSerializeMaps":26,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":144,"com.google.gson.functional.MapTest.testComplexKeysSerialization":53,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":71,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":57,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":139,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":230,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":501,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":465,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":95,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":499,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":446,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":77,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":285,"com.google.gson.functional.MapTest.testStringKeyDeserialization":55,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":7,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":136,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":240,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":381,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":59,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":317,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":312,"com.google.gson.functional.PrettyPrintingTest.testMap":444,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":561,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":537,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":67,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":165,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":223,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":138,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":601,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":409,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":413,"com.google.gson.functional.MapTest.testMapSerializationEmpty":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":181,"com.google.gson.functional.CollectionTest.testQueueSerialization":541,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":343,"com.google.gson.functional.MapTest.testMapOfMapSerialization":39,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":334,"com.google.gson.JavaSerializationTest.testMapIsSerializable":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":189,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":547,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":150,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":345,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":249,"com.google.gson.functional.FieldNamingTest.testIdentity":145,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":407,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":237,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":432,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":287,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":81,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":100,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":256,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":400,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":300,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":598,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":408,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":572,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":253,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":205,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":176,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":215,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":20,"com.google.gson.functional.MapTest.testMapSubclassSerialization":25,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":377,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":492,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":578,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":74,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":332,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":505,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":563,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":587,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":164,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":392,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":423,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":221,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":481,"com.google.gson.functional.EnumTest.testEnumSubclass":497,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":354,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":272,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":603,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":299,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":10,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":571,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":360,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":239,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":90,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":302,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":255,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":338,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":254,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":103,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":8,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":128,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":268,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":344,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":80,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":208,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":258,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":22,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":127,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":426,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":121,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":229,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":478,"com.google.gson.CommentsTest.testParseComments":600,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":244,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":260,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":459,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":134,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":357,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":440,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":13,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":44,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":411,"com.google.gson.MixedStreamTest.testReadInvalidState":586,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":151,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":490,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":210,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":376,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":15,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":310,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":606,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":140,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":6,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":437,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":327,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":191,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":371,"com.google.gson.functional.MapTest.testMapDeserialization":32,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":185,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":449,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":21,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":452,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":31,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":112,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":458,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":454,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":96,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":99,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":498,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":162,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":273,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":288,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":85,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":564,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":171,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":489,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":94,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":252,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":43,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":445,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":582,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":214,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":296,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":246,"com.google.gson.functional.PrimitiveTest.testShortSerialization":375,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":461,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":363,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":474,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":333,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":362,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":1,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":309,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":141,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":496,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":536,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":577,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":27,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":326,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":383,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":557,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":424,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":202,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":466,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":594,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":390,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":384,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":79,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":111,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":238,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":157,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":506,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":369,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":430,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":241,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":339,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":293,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":264,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":502,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":73,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":172,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":545,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":559,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":242,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":451,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":192,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":460,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":316,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":178,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":396,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":462,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":197,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":108,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":538,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":303,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":370,"com.google.gson.JsonArrayTest.testSet":0,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":341,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":387,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":522,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":457,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":495,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":69,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":16,"com.google.gson.functional.MapTest.testGeneralMapField":49,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":262,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":118,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":389,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":133,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":560,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":573,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":204,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":47,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":158,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":307,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":531,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":365,"com.google.gson.MixedStreamTest.testReadMixedStreamed":593,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":35,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":173,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":328,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":395,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":552,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":599,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":517,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":346,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":473,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":3,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":526,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":190,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":36,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":476,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":24,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":245,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":388,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":521,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":510,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":329,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":188,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":427,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":433,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":156,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":546,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":464,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":251,"com.google.gson.functional.ObjectTest.testNestedDeserialization":294,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":280,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":570,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":66,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":102,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":471,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":386,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":439,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":37,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":76,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":410,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":480,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":373,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":86,"com.google.gson.JavaSerializationTest.testListIsSerializable":5,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":402,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":425,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":555,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":89,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":475,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":28,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":48,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":301,"com.google.gson.functional.MapTest.testInterfaceTypeMap":46,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":130,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":562,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":107,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":304,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":500,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":93,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":565,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":159,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":469,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":320,"com.google.gson.MixedStreamTest.testWriteClosed":592,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":68,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":543,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":218,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":263,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":486,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":106,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":442,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":291,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":438,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":211,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":113,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":266,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":542,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":511,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":349,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":513,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":91,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":548,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":198,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":434,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":146,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":391,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":325,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":167,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":115,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":232,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":441,"com.google.gson.functional.CollectionTest.testQueueDeserialization":558,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":331,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":347,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":415,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":62,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":209,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":512,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":33,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":284,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":180,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":292,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":533,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":535,"com.google.gson.functional.MapTest.testRawMapSerialization":51,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":585,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":553,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":196,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":84,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":278,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":19,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":463,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":581,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":120,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":220,"com.google.gson.functional.PrimitiveTest.testByteSerialization":372,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":583,"com.google.gson.ObjectTypeAdapterTest.testSerialize":604,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":529,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":315,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":399,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":131,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":142,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":412,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":487,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":595,"com.google.gson.functional.MapTest.testMapWithQuotes":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":166,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":323,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":414,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":233,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":394,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":250,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":97,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":380,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":163,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":153,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":455,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":477,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":290,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":450,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":177,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":356,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":137,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":267,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":206,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":168,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":179,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":401,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":509,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":368,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":549,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":123,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":207,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":479,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":88,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":435,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":514,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":579,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":224,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":305,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":491,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":247,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":277,"com.google.gson.functional.ObjectTest.testNestedSerialization":279,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":523,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":319,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":418,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":530,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":520,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":50,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":17,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":429,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":584,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":591,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":271,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":431,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":382,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":109,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":516,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":182,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":12,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":321,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":161,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":281,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":508,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":417,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":126,"com.google.gson.functional.CollectionTest.testSetSerialization":554,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":574,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":243,"com.google.gson.functional.StringTest.testStringValueSerialization":420,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":447,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":70,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":78,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":147,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":539,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":117,"com.google.gson.MixedStreamTest.testWriteInvalidState":588,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":324,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":135,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":330,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":566,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":174,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":143,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":227,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":436,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":468,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":488,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":200,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":30,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":122,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":524},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"a99a28cb-3e7f-11e6-a3f9-3521ccfb59eb","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"a99a9dfc-3e7f-11e6-a3f9-c53f375b1b81","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:164","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"a99a9dfd-3e7f-11e6-a3f9-8f5851df7f52","method":{"position":"com.google.gson.reflect.TypeToken:160","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.GenericArrayType to) {\n    if (from instanceof java.lang.reflect.GenericArrayType) {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = to.getGenericComponentType();\n            if (toGenericComponentType instanceof java.lang.reflect.ParameterizedType) {\n                java.lang.reflect.Type java.lang.reflect.Type = from;\n                if (from instanceof java.lang.reflect.GenericArrayType) {\n                    t = ((java.lang.reflect.GenericArrayType)(from)).getGenericComponentType();\n                } else if (from instanceof java.lang.Class<?>) {\n                    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(from));\n                    while (classType.isArray()) {\n                        classType = classType.getComponentType();\n                    }\n                    t = classType;\n                } \n                return com.google.gson.reflect.TypeToken.isAssignableFrom(t, ((java.lang.reflect.ParameterizedType)(toGenericComponentType)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a99a9dfe-3e7f-11e6-a3f9-3daa575c4bc1","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"a99ac50f-3e7f-11e6-a3f9-a5ea7987262b","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a99ac510-3e7f-11e6-a3f9-79e1d0d256fc","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"a99ac511-3e7f-11e6-a3f9-613c35f4e5d0","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (json == null) {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[0],"tindex":"a99aec22-3e7f-11e6-a3f9-cf35ab1d02f6","method":{"position":"com.google.gson.JsonArray:81","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement set(int index, com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1],"tindex":"a99b1333-3e7f-11e6-a3f9-a96bbf7e4193","method":{"position":"com.google.gson.internal.bind.TypeAdapters:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"a99b1334-3e7f-11e6-a3f9-a3d133eabbbd","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.ParameterizedType"},"failures":[2],"tindex":"a99b3a45-3e7f-11e6-a3f9-4bd4320fed77","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (from instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[3,4,5,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,1,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605],"tindex":"a99b3a46-3e7f-11e6-a3f9-6d53646d12da","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:384","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[606],"tindex":"a99b6157-3e7f-11e6-a3f9-6bd53cc2fcac","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:338","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (insert) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"insert"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:716","type":"CtBinaryOperatorImpl","sourcecode":"(c < '0') || (c > '9')"},"failures":[],"tindex":"a99b8868-3e7f-11e6-a3f9-57045610d846","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if ((c < '0') || (c > '9')) {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:154","type":"CtUnaryOperatorImpl","sourcecode":"!create"},"failures":[],"tindex":"a99baf79-3e7f-11e6-a3f9-574b0a94bc75","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if (!create) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"create"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[],"tindex":"a99c24aa-3e7f-11e6-a3f9-79882ec1ef42","method":{"position":"com.google.gson.internal.Excluder:232","type":"CtMethodImpl","sourcecode":"private boolean isValidSince(com.google.gson.annotations.Since annotation) {\n    if (annotation != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion > (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"a99c24ab-3e7f-11e6-a3f9-5d15ca589c0c","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262550459/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":17,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}