{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":537,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":319,"com.google.gson.functional.StringTest.testStringValueDeserialization":317,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":282,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":200,"com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder":5,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":450,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":10,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":150,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":304,"com.google.gson.MixedStreamTest.testWriteLenient":596,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":209,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":530,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":337,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":110,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":354,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":498,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":74,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":570,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":232,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":459,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":65,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":546,"com.google.gson.functional.ObjectTest.testSingletonLists":108,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":77,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":201,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":320,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":443,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":53,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":154,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":359,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":219,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":128,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":607,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":501,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":573,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":333,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":79,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":234,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":490,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":264,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":435,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":583,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":93,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":263,"com.google.gson.functional.EnumTest.testEnumCaseMapping":569,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":318,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":603,"com.google.gson.functional.JsonTreeTest.testToJsonTree":228,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":434,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":239,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":222,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":30,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":175,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":410,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":193,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":445,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":549,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":347,"com.google.gson.functional.ObjectTest.testNullDeserialization":140,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":99,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":330,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":122,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":511,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":610,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":451,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":129,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":91,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":432,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":137,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":609,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":223,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":315,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":516,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":515,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":218,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":495,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":474,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":174,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":522,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":141,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":406,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":199,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":472,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":256,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":305,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":487,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":190,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":426,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":39,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":278,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":311,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":496,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":488,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":136,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":400,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":116,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":394,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":605,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":4,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":17,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":274,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":455,"com.google.gson.metrics.PerformanceTest.testDummy":602,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":78,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":21,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":63,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":37,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":41,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":151,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":280,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":207,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":376,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":34,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":192,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":431,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":102,"com.google.gson.functional.CollectionTest.testSetDeserialization":353,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":233,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":121,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":363,"com.google.gson.functional.EnumTest.testEnumSet":560,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":479,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":64,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":180,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":251,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":130,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":62,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":582,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":492,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":36,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":503,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":88,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":160,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":504,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":7,"com.google.gson.functional.MapTest.testHashMapDeserialization":245,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":448,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":205,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":395,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":539,"com.google.gson.MixedStreamTest.testReadNulls":597,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":287,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":535,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":158,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":422,"com.google.gson.functional.MapTest.testSortedMap":267,"com.google.gson.functional.MapTest.testMapSerialization":262,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":538,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":372,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":485,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":413,"com.google.gson.functional.MapTest.testSerializeMaps":248,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":369,"com.google.gson.functional.MapTest.testComplexKeysSerialization":275,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":362,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":279,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":420,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":101,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":567,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":558,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":299,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":155,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":565,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":237,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":12,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":139,"com.google.gson.functional.MapTest.testStringKeyDeserialization":277,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":417,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":45,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":518,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":281,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":454,"com.google.gson.functional.PrettyPrintingTest.testMap":235,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":380,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":449,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":340,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":170,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":541,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":419,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":606,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":323,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":187,"com.google.gson.functional.MapTest.testMapSerializationEmpty":276,"com.google.gson.functional.CollectionTest.testQueueSerialization":344,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":480,"com.google.gson.functional.MapTest.testMapOfMapSerialization":261,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":471,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":195,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":350,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":482,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":54,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":321,"com.google.gson.functional.FieldNamingTest.testIdentity":370,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":42,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":83,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":142,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":16,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":107,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":227,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":532,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":437,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":584,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":322,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":428,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":284,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":211,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":587,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":182,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":189,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":221,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":242,"com.google.gson.functional.MapTest.testMapSubclassSerialization":247,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":514,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":72,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":302,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":365,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":382,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":469,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":571,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":593,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":169,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":306,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":529,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":153,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":61,"com.google.gson.functional.EnumTest.testEnumSubclass":563,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":491,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":126,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":608,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":436,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":427,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":497,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":44,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":294,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":439,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":286,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":475,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":285,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":19,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":409,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":586,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":120,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":481,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":15,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":214,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":109,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":244,"com.google.gson.MixedStreamTest.testWriteNulls":594,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":408,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":309,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":402,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":58,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":100,"com.google.gson.CommentsTest.testParseComments":589,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":49,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":111,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":552,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":388,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":415,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":494,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":371,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":266,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":325,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":81,"com.google.gson.MixedStreamTest.testReadInvalidState":591,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":229,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":216,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":513,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":373,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":447,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":0,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":421,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":385,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":464,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":197,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":508,"com.google.gson.functional.MapTest.testMapDeserialization":254,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":405,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":191,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":240,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":243,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":545,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":28,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":253,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":551,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":547,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":300,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":226,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":564,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":167,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":127,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":143,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":289,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":383,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":176,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":69,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":283,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":298,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":236,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":265,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":220,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":433,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":51,"com.google.gson.functional.PrimitiveTest.testShortSerialization":512,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":554,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":500,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":95,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":470,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":499,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":181,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":446,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":366,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":562,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":339,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":301,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":249,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":463,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":360,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":520,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":307,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":208,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":559,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":601,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":527,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":521,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":14,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":27,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":43,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":162,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":572,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":506,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":32,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":46,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":476,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":148,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":115,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":568,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":291,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":364,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":177,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":348,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":378,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":47,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":544,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":198,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":553,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":453,"com.google.gson.internal.LinkedHashTreeMapTest.testClear":2,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":184,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":425,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":555,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":203,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":24,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":341,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":440,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":507,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":478,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":524,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":391,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":550,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":561,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":543,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":374,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":113,"com.google.gson.functional.MapTest.testGeneralMapField":271,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":399,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":526,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":379,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":414,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":429,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":210,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":269,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":163,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":314,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":444,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":502,"com.google.gson.MixedStreamTest.testReadMixedStreamed":600,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":178,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":257,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":465,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":355,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":424,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":585,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":76,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":483,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":94,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":35,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":196,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":258,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":336,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":246,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":50,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":525,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":97,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":576,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":466,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":194,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":310,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":84,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":161,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":349,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":557,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":56,"com.google.gson.functional.ObjectTest.testNestedDeserialization":149,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":80,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":134,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":540,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":18,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":92,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":523,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":387,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":11,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":259,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":324,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":60,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":510,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":290,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":308,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":534,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":358,"com.google.gson.functional.ObjectTest.testNullSerialization":123,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":293,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":335,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":250,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":270,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":438,"com.google.gson.functional.MapTest.testInterfaceTypeMap":268,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":411,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":381,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":23,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":441,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":566,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":297,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":384,"com.google.gson.MixedStreamTest.testReadClosed":592,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":164,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":90,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":457,"com.google.gson.MixedStreamTest.testWriteClosed":599,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":346,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":542,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":26,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":224,"com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails":6,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":66,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":22,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":390,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":146,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":386,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":217,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":29,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":117,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":345,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":577,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":486,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":579,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":295,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":204,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":85,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":528,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":462,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":225,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":172,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":103,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":396,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":1,"com.google.gson.functional.CollectionTest.testQueueDeserialization":361,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":389,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":468,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":484,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":329,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":536,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":215,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":578,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":138,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":255,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":186,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":147,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":316,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":338,"com.google.gson.functional.MapTest.testRawMapSerialization":273,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":590,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":356,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":202,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":132,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":288,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":377,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":556,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":152,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":401,"com.google.gson.functional.PrimitiveTest.testByteSerialization":509,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":105,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":312,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":452,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":531,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":412,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":367,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":67,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":326,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":581,"com.google.gson.functional.MapTest.testMapWithQuotes":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":171,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":460,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":328,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":38,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":423,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":55,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":517,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":168,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":231,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":548,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":57,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":145,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":241,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":125,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":183,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":493,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":119,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":418,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":185,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":533,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":575,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":505,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":159,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":352,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":404,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":213,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":397,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":292,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":86,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":3,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":580,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":303,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":157,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":71,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":442,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":9,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":52,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":131,"com.google.gson.functional.ObjectTest.testNestedSerialization":133,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":392,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":313,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":332,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":456,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":96,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":272,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":375,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":31,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":598,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":611,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":82,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":124,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":519,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":25,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":75,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":188,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":458,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":588,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":604,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":166,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":574,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":331,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":407,"com.google.gson.functional.CollectionTest.testSetSerialization":357,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":430,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":48,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":238,"com.google.gson.functional.StringTest.testStringValueSerialization":334,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":104,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":13,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":342,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":398,"com.google.gson.MixedStreamTest.testWriteInvalidState":595,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":118,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":461,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":416,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":467,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":393,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":179,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":368,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":98,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":87,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":89,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":206,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":106,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":252,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":33,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":403},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:167","type":"CtUnaryOperatorImpl","sourcecode":"!create"},"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"90d0d4c5-3e66-11e6-9623-ad76d636a897","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if (!create) {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"90d149f6-3e66-11e6-9623-b3bc3ace863e","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:250","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],"tindex":"90d17107-3e66-11e6-9623-05e1506b7a00","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.TypeVariable)"},"failures":[],"tindex":"90d19818-3e66-11e6-9623-ed2e2d90a285","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (!(b instanceof java.lang.reflect.TypeVariable)) {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[91,94],"tindex":"90d19819-3e66-11e6-9623-5d01ecd8e901","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"90d1bf2a-3e66-11e6-9623-aba338665622","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"90d20d4b-3e66-11e6-9623-a5604a55baff","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"90d2827c-3e66-11e6-9623-ff8313c663e8","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"90d2827d-3e66-11e6-9623-5b57519ee7e2","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[],"tindex":"90d2827e-3e66-11e6-9623-afb05a80cdbd","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"90d2d09f-3e66-11e6-9623-81f28b19e79c","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (property == null) {\n        {\n            if (value == null) {\n                value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"90d2d0a0-3e66-11e6-9623-7bc1be9d6d38","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"90d2d0a1-3e66-11e6-9623-739b9099fa99","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json == null) {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251849480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":13,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}