{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":112,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":121,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":89,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":100,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":189,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":111,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":169,"com.google.gson.stream.JsonWriterTest.testRepeatedName":186,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":0,"com.google.gson.MixedStreamTest.testWriteLenient":17,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":138,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":133,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":134,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":122,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":136,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":86,"com.google.gson.functional.ObjectTest.testSingletonLists":60,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":44,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":194,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":74,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":195,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":6,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":72,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":43,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":173,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":197,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":27,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":45,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":117,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":135,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":145,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":79,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":168,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":201,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":157,"com.google.gson.stream.JsonWriterTest.testNullStringValue":184,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":170,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":42,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":9,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":151,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":166,"com.google.gson.functional.MapTest.testGeneralMapField":105,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":52,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":155,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":103,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":199,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":161,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":198,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":126,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":78,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":14,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":16,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":70,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":50,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":175,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":185,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":77,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":120,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":47,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":158,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":31,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":109,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":149,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":69,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":154,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":192,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":18,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":34,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":19,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":37,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":80,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":104,"com.google.gson.functional.MapTest.testInterfaceTypeMap":102,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":160,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":21,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":87,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":5,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":172,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":64,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":3,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":94,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":66,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":36,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":177,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":75,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":62,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":200,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":38,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":20,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":73,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":148,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":114,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":162,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":82,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":23,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":63,"com.google.gson.functional.MapTest.testMapSerialization":99,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":163,"com.google.gson.functional.MapTest.testSerializeMaps":93,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":141,"com.google.gson.functional.MapTest.testComplexKeysSerialization":108,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":176,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":128,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":54,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":171,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":55,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":90,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":1,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":96,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":190,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":26,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":127,"com.google.gson.functional.MapTest.testRawMapSerialization":107,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":180,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":110,"com.google.gson.functional.PrettyPrintingTest.testMap":88,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":7,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":67,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":115,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":164,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":11,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":191,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":57,"com.google.gson.functional.MapTest.testMapOfMapSerialization":98,"com.google.gson.ObjectTypeAdapterTest.testSerialize":193,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":13,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":125,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":183,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":132,"com.google.gson.functional.FieldNamingTest.testIdentity":142,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":139,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":39,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":46,"com.google.gson.functional.MapTest.testMapWithQuotes":97,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":2,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":59,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":49,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":202,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":85,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":179,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":131,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":32,"com.google.gson.functional.MapTest.testMapSubclassSerialization":92,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":91,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":15,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":123,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":146,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":81,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":35,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":159,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":174,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":25,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":33,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":118,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":48,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":113,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":124,"com.google.gson.stream.JsonWriterTest.testTwoNames":182,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":4,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":30,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":178,"com.google.gson.functional.ObjectTest.testNestedSerialization":68,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":152,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":106,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":187,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":144,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":24,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":65,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":53,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":29,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":61,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":150,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":101,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":8,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":84,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":41,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":143,"com.google.gson.functional.CollectionTest.testSetSerialization":137,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":28,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":56,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":129,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":147,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":12,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":130,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":153,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":76,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":140,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":51,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":22,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":95,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":167,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":83,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":40,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":71,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":58,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":116,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":188},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"fb6a4c17-3e4d-11e6-b93f-a993fcfd02fb","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[],"tindex":"fb6ac148-3e4d-11e6-b93f-bff63eb8fe80","method":{"position":"com.google.gson.reflect.TypeToken:160","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.GenericArrayType to) {\n    if (from.getRawType().equals(from.getRawType())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = to.getGenericComponentType();\n            if (toGenericComponentType instanceof java.lang.reflect.ParameterizedType) {\n                java.lang.reflect.Type java.lang.reflect.Type = from;\n                if (from instanceof java.lang.reflect.GenericArrayType) {\n                    t = ((java.lang.reflect.GenericArrayType)(from)).getGenericComponentType();\n                } else if (from instanceof java.lang.Class<?>) {\n                    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(from));\n                    while (classType.isArray()) {\n                        classType = classType.getComponentType();\n                    }\n                    t = classType;\n                } \n                return com.google.gson.reflect.TypeToken.isAssignableFrom(t, ((java.lang.reflect.ParameterizedType)(toGenericComponentType)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","to":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fb6ac149-3e4d-11e6-b93f-2be90474daac","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[0,1,2,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,3,38,39,40,41,42,5,6,7,9,10,11,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"fb6ae85a-3e4d-11e6-b93f-7f5739367b8e","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if (name == null) {\n                throw new java.lang.NullPointerException(\"name == null\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException();\n            } \n            if ((int) == 0) {\n                throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n            } \n            java.lang.String = name;\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"fb6ae85b-3e4d-11e6-b93f-6f695ae6f55d","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"fb6b0f6c-3e4d-11e6-b93f-fde242291b26","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(src, typeOfSrc, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[200,201],"tindex":"fb6b0f6d-3e4d-11e6-b93f-a9b44b9d6b39","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[33,202],"tindex":"fb6babae-3e4d-11e6-b93f-17c896f71a9d","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fb6babaf-3e4d-11e6-b93f-b765d85ef898","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1439","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\r'"},"failures":[],"tindex":"fb6babb0-3e4d-11e6-b93f-6770604c4326","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if (c == '\\r') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fb6bd2c1-3e4d-11e6-b93f-5993b0649ace","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[],"tindex":"fb6bd2c2-3e4d-11e6-b93f-fb72e4184dba","method":{"position":"com.google.gson.internal.Excluder:232","type":"CtMethodImpl","sourcecode":"private boolean isValidSince(com.google.gson.annotations.Since annotation) {\n    if (annotation != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion > (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"fb6bd2c3-3e4d-11e6-b93f-b730ac6927ba","method":{"position":"com.google.gson.internal.Primitives:79","type":"CtMethodImpl","sourcecode":"public static boolean isWrapperType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(com.google.gson.internal.$Gson$Preconditions.checkNotNull(type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:250","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[],"tindex":"fb6bd2c4-3e4d-11e6-b93f-31f0776f050b","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1422","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"fb6bf9d5-3e4d-11e6-b93f-3187a15670b3","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (!lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"fb6bf9d6-3e4d-11e6-b93f-0d10b3e5247f","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n        {\n            if (json == null) {\n                return null;\n            } \n            return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[],"tindex":"fb6bf9d7-3e4d-11e6-b93f-e12d75786602","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"fb6bf9d8-3e4d-11e6-b93f-d7266085ff6b","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array == null) {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fb6c20e9-3e4d-11e6-b93f-9952b7a6b171","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241198851/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":19,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}