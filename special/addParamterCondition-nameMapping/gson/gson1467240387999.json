{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":263,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":347,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":50,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":75,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":165,"com.google.gson.MixedStreamTest.testWriteLenient":19,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":214,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":320,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":62,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":227,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":133,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":231,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":182,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":462,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":104,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":271,"com.google.gson.functional.ObjectTest.testSingletonLists":131,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":114,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":384,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":37,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":167,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":146,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":412,"com.google.gson.internal.bind.JsonElementReaderTest.testNulls":460,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":282,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":116,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":326,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":188,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":72,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":47,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":339,"com.google.gson.functional.EnumTest.testEnumCaseMapping":405,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":408,"com.google.gson.functional.JsonTreeTest.testToJsonTree":179,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":329,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":324,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":94,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":111,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":312,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":419,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":376,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":385,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":68,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":124,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":143,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":437,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":458,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":46,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":260,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":154,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":325,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":220,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":14,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":420,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":393,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":449,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":157,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":315,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":215,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":336,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":448,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":206,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":255,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":443,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":23,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":341,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":15,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":344,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":153,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":366,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":139,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":248,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":297,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":5,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":82,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":115,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":86,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":103,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":25,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":306,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":318,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":95,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":259,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":453,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":127,"com.google.gson.functional.CollectionTest.testSetDeserialization":230,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":183,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":142,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":1,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":24,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":147,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":71,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":102,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":97,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":43,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":168,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":434,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":317,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":197,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":262,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":252,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":308,"com.google.gson.functional.MapTest.testMapSerialization":424,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":264,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":53,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":378,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":236,"com.google.gson.functional.MapTest.testSerializeMaps":334,"com.google.gson.functional.MapTest.testComplexKeysSerialization":192,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":470,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":382,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":126,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":280,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":277,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":209,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":185,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":463,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":77,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":156,"com.google.gson.functional.MapTest.testStringKeyDeserialization":340,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":379,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":29,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":17,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":426,"com.google.gson.functional.PrettyPrintingTest.testMap":327,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":360,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":354,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":266,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":381,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":411,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":421,"com.google.gson.functional.MapTest.testMapOfMapSerialization":338,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":392,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":13,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":226,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":38,"com.google.gson.functional.FieldNamingTest.testIdentity":237,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":348,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":26,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":117,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":158,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":64,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":81,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":130,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":178,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":73,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":61,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":194,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":430,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":290,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":225,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":6,"com.google.gson.functional.MapTest.testMapSubclassSerialization":333,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":110,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":212,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":238,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":292,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":216,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":166,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":101,"com.google.gson.functional.EnumTest.testEnumSubclass":403,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":432,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":145,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":413,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":428,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":256,"com.google.gson.internal.bind.JsonElementReaderTest.testArray":459,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":28,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":204,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":196,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":195,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":84,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":289,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":375,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":80,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":429,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":132,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":331,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":374,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":342,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":368,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":99,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":125,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":33,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":134,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":274,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":242,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":250,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":52,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":349,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":180,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":323,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":397,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":54,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":410,"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":461,"com.google.gson.JsonParserTest.testParseMixedArray":454,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":386,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":383,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":239,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":468,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":388,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":224,"com.google.gson.JsonArrayTest.testRemove":452,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":314,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":435,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":371,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":330,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":49,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":270,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":440,"com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers":465,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":92,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":335,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":273,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":401,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":210,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":2,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":170,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":159,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":199,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":361,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":85,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":108,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":464,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":193,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":208,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":184,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":407,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":48,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":35,"com.google.gson.functional.PrimitiveTest.testShortSerialization":299,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":69,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":304,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":395,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":172,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":233,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":402,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":228,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":211,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":51,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":399,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":217,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":319,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":296,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":445,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":438,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":416,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":79,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":7,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":27,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":91,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":281,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":472,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":261,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":21,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":30,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":163,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":138,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":404,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":201,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":171,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":229,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":359,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":31,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":269,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":275,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":254,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":276,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":88,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":396,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":431,"com.google.gson.JsonArrayTest.testSet":450,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":18,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":245,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":272,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":268,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":55,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":136,"com.google.gson.functional.MapTest.testGeneralMapField":191,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":365,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbers":466,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":59,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":249,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":321,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":309,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":346,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":433,"com.google.gson.MixedStreamTest.testReadMixedStreamed":295,"com.google.gson.JsonObjectTest.testDeepCopy":469,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":313,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":389,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":456,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":74,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":253,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":113,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":303,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":174,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":337,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":352,"com.google.gson.JsonArrayTest.testDeepCopy":451,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":332,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":34,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":400,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":122,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":285,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":471,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":343,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":118,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":39,"com.google.gson.functional.ObjectTest.testNestedDeserialization":164,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":151,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":301,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":265,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":83,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":302,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":241,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":76,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":455,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":100,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":16,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":200,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":66,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":218,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":427,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":203,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":351,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":4,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":190,"com.google.gson.functional.MapTest.testInterfaceTypeMap":189,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":377,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":441,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":60,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":87,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":279,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":415,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":207,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":45,"com.google.gson.MixedStreamTest.testWriteClosed":294,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":267,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":356,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":90,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":137,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":105,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":0,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":244,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":161,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":176,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":93,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":140,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":355,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":286,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":288,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":205,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":357,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":457,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":467,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":316,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":42,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":222,"com.google.gson.stream.JsonWriterTest.testNumbers":442,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":177,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":128,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":362,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":243,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":11,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":287,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":155,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":10,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":162,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":221,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":353,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":291,"com.google.gson.functional.MapTest.testRawMapSerialization":425,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":417,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":149,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":198,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":58,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":406,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":307,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":367,"com.google.gson.functional.PrimitiveTest.testByteSerialization":436,"com.google.gson.ObjectTypeAdapterTest.testSerialize":298,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":446,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":219,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":439,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":63,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":3,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":234,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":70,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":106,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":310,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":22,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":300,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":422,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":181,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":67,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":98,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":160,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":186,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":8,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":394,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":141,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":380,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":311,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":9,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":65,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":284,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":358,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":370,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":322,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":363,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":202,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":119,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":213,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":41,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":36,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":414,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":148,"com.google.gson.functional.ObjectTest.testNestedSerialization":150,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":246,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":345,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":387,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":305,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":56,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":20,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":144,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":398,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":89,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":173,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":409,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":169,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":283,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":418,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":373,"com.google.gson.functional.CollectionTest.testSetSerialization":232,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":258,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":32,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":328,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":129,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":78,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":223,"com.google.gson.MixedStreamTest.testWriteInvalidState":293,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":364,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":251,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":390,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":247,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":423,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":235,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":123,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":12,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":120,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":44,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":444,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":107,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":447,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":369},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6],"tindex":"50c89270-3e4b-11e6-896f-0bca018329be","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"50c9a3e1-3e4b-11e6-896f-51d8763ae357","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                {\n                    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new com.google.gson.JsonSyntaxException();\n                    } else {\n                        {\n                            if (json == null) {\n                                return null;\n                            } \n                            return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"50c9caf2-3e4b-11e6-896f-8bd0088ab49b","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (json == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.io.IOException();\n                    } else {\n                        {\n                            return fromJson(new java.io.StringReader(json));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[],"tindex":"50c9caf3-3e4b-11e6-896f-a12b580cd62a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value instanceof java.lang.Number) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.IllegalAccessException();\n            } else {\n                {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[7,8,9,10,11],"tindex":"50c9caf4-3e4b-11e6-896f-9d0b03cffa7b","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            java.lang.String java.lang.String = java.text.DateFormat.format(value);\n            out.value(dateFormatAsString);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"50c9f205-3e4b-11e6-896f-8bdf276c1c3e","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[12],"tindex":"50c9f206-3e4b-11e6-896f-33a874353079","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[13,14,15,16,17,18,19],"tindex":"50c9f207-3e4b-11e6-896f-a7d61bbbb786","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"50ca1918-3e4b-11e6-896f-890d544fa97b","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (json == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.io.IOException();\n                    } else {\n                        {\n                            return fromJson(new java.io.StringReader(json));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[],"tindex":"50ca1919-3e4b-11e6-896f-2d77f1a88d9c","method":{"position":"com.google.gson.reflect.TypeToken:238","type":"CtMethodImpl","sourcecode":"private static boolean typeEquals(java.lang.reflect.ParameterizedType from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (to.getRawType().equals(to.getRawType())) {\n        {\n            if (from.getRawType().equals(to.getRawType())) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = from.getActualTypeArguments();\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = to.getActualTypeArguments();\n                for (int int = 0 ; i < (fromArgs.int) ; i++) {\n                    if (!(com.google.gson.reflect.TypeToken.matches(fromArgs[i], toArgs[i], typeVarMap))) {\n                        return false;\n                    } \n                }\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"to","to":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"50ca402a-3e4b-11e6-896f-f93b38ae3d4a","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                {\n                    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new com.google.gson.JsonSyntaxException();\n                    } else {\n                        {\n                            if (json == null) {\n                                return null;\n                            } \n                            return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:133","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"50ca673b-3e4b-11e6-896f-df7be43c576c","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof java.util.Iterator"},"failures":[],"tindex":"50ca673c-3e4b-11e6-896f-7159fd05899f","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Iterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return containsKey(o);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"50ca8e4d-3e4b-11e6-896f-3f4cfc06bc5e","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"50ca8e4e-3e4b-11e6-896f-adbc473e42a6","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (json == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.io.IOException();\n                    } else {\n                        {\n                            return fromJson(new java.io.StringReader(json));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:459","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.TypeAdapter<?>"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"50ca8e4f-3e4b-11e6-896f-d76da7c3ddb8","method":{"position":"com.google.gson.TreeTypeAdapter:92","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                {\n                    boolean boolean = (exactType.getType()) == (exactType.getRawType());\n                    return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , matchRawType , null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:127","type":"CtInvocationImpl","sourcecode":"raw.isInterface()"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,91,92,93,94,20,21,95,96,97,23,27,28,30,32,98,99,100,101,102,103,1,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,7,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,2,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,50,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,53,54,55,56,58,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,62,63,65,66,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,71,289,290,291,292,293,294,295,296,297,298],"tindex":"50cab560-3e4b-11e6-896f-fb9ef72bde4c","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:125","type":"CtMethodImpl","sourcecode":"private java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField> getBoundFields(com.google.gson.Gson context, com.google.gson.reflect.TypeToken<?> type, java.lang.Class<?> raw) {\n    if (raw.isInterface()) {\n        {\n            java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField> java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField> = new java.util.LinkedHashMap<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>();\n            if (raw.isInterface()) {\n                return result;\n            } \n            java.lang.reflect.Type java.lang.reflect.Type = type.getType();\n            while (raw != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n                java.lang.reflect.Field[] java.lang.reflect.Field[] = raw.getDeclaredFields();\n                for (java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                    boolean boolean = excludeField(field, true);\n                    boolean boolean = excludeField(field, false);\n                    if ((!serialize) && (!deserialize)) {\n                        continue;\n                    } \n                    field.setAccessible(true);\n                    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(type.getType(), raw, field.getGenericType());\n                    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField = createBoundField(context, field, getFieldName(field), com.google.gson.reflect.TypeToken.get(fieldType), serialize, deserialize);\n                    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField = result.put(boundField.java.lang.String, boundField);\n                    if (previous != null) {\n                        throw new java.lang.IllegalArgumentException(((declaredType + \" declares multiple JSON fields named \") + (previous.java.lang.String)));\n                    } \n                }\n                type = com.google.gson.reflect.TypeToken.get(com.google.gson.internal.$Gson$Types.resolve(type.getType(), raw, raw.getGenericSuperclass()));\n                raw = type.getRawType();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"raw"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[299],"tindex":"50cb51a1-3e4b-11e6-896f-139a14787ecd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"50cb51a2-3e4b-11e6-896f-db9f6e751232","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Preconditions:41","type":"CtUnaryOperatorImpl","sourcecode":"!condition"},"failures":[],"tindex":"50cb78b3-3e4b-11e6-896f-f394cf1cb542","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"condition":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[81,83,84,85,86,87,88,89,91,92,93,94,20,21,95,96,97,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,300,39,98,40,100,101,102,1,105,106,107,41,110,116,301,117,42,119,120,121,43,44,45,46,302,47,303,304,305,122,123,124,125,126,128,129,130,131,132,133,134,135,136,140,144,145,146,147,149,150,154,157,158,160,164,306,307,167,308,309,310,311,312,313,172,314,315,316,317,318,319,320,321,322,11,323,48,324,2,180,325,181,182,183,326,327,184,185,328,329,330,186,49,331,332,333,334,335,187,336,337,338,339,188,189,190,191,192,340,341,50,193,194,195,196,198,207,208,211,212,213,214,342,343,344,219,345,346,220,221,347,348,349,350,222,223,224,225,226,351,352,227,353,228,354,355,356,229,357,358,231,232,51,233,234,235,236,237,52,53,54,55,56,57,58,359,59,360,60,361,239,241,242,243,244,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,3,378,249,250,251,379,380,381,382,383,252,253,254,255,256,61,257,258,259,260,4,384,385,386,5,387,388,389,390,391,392,393,13,394,14,15,395,396,16,397,6,17,398,399,18,400,62,63,64,65,66,263,269,271,401,67,68,272,273,69,277,402,403,279,280,404,405,281,282,283,285,288,70,71,72,73,74,406,407,291,292,295,296,408,409,297,410,298,411,412,413],"tindex":"50cb78b4-3e4b-11e6-896f-f1bae9c6fd32","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        {\n            return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:452","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.InstanceCreator<?>"},"failures":[],"tindex":"50cb78b5-3e4b-11e6-896f-458d8270834c","method":{"position":"com.google.gson.TreeTypeAdapter:92","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                {\n                    boolean boolean = (exactType.getType()) == (exactType.getRawType());\n                    return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , matchRawType , null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[75,77,81,0,92,20,29,30,32,36,38,300,98,40,100,101,102,103,1,105,106,107,109,111,414,415,416,417,418,419,420,421,114,116,117,118,121,122,129,130,134,142,144,147,149,150,157,159,161,167,168,422,310,423,174,176,2,180,325,181,182,183,326,327,184,185,328,329,330,186,49,334,424,191,425,426,193,196,198,203,208,212,213,219,220,221,227,228,354,355,229,231,232,427,233,234,235,236,237,241,242,363,369,374,3,249,382,252,254,255,428,387,429,430,431,13,432,394,14,15,395,433,434,435,436,16,437,299,397,17,399,18,400,438,262,264,266,281,284,285,288,73,291,292,19,439,440,409,441,442,297,298,443,444,445],"tindex":"50cb9fc6-3e4b-11e6-896f-d3403ae51470","method":{"position":"com.google.gson.stream.JsonWriter:490","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            java.lang.String java.lang.String = value.toString();\n            if ((!(boolean)) && (((string.equals(\"-Infinity\")) || (string.equals(\"Infinity\"))) || (string.equals(\"NaN\")))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            beforeValue(false);\n            java.io.Writer.append(string);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"50cb9fc7-3e4b-11e6-896f-1f7e52500174","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[446,447],"tindex":"50cb9fc8-3e4b-11e6-896f-917c19f0a146","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[84,88,89,94,40,179,243,244,61,62,63,64,65,66,263],"tindex":"50cb9fc9-3e4b-11e6-896f-63328a4fac49","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            return toJsonTree(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"50cbc6da-3e4b-11e6-896f-6b10fe512e69","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[84,88,448,116,422,449,49,214,216,218,62,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,443,444,468,469],"tindex":"50cbc6db-3e4b-11e6-896f-b920cf5efcd3","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonArray) {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"50cbc6dc-3e4b-11e6-896f-b10103cf88d2","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"50cbc6dd-3e4b-11e6-896f-356df37faf97","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[83,84,85,88,89,94,116,177,2,178,179,50,243,244,252,254,255,62,63,65,66,263,406,470,445,471,472],"tindex":"50cbc6de-3e4b-11e6-896f-f58a429ba3ad","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[],"tindex":"50cbedef-3e4b-11e6-896f-81655986b688","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value.isJsonNull()) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonPrimitive"},"failures":[],"tindex":"50cbedf0-3e4b-11e6-896f-d11524c2e68f","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonPrimitive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[],"tindex":"50cbedf1-3e4b-11e6-896f-eff05de46d83","method":{"position":"com.google.gson.reflect.TypeToken:160","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.GenericArrayType to) {\n    if (from.getRawType().equals(from.getRawType())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = to.getGenericComponentType();\n            if (toGenericComponentType instanceof java.lang.reflect.ParameterizedType) {\n                java.lang.reflect.Type java.lang.reflect.Type = from;\n                if (from instanceof java.lang.reflect.GenericArrayType) {\n                    t = ((java.lang.reflect.GenericArrayType)(from)).getGenericComponentType();\n                } else if (from instanceof java.lang.Class<?>) {\n                    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(from));\n                    while (classType.isArray()) {\n                        classType = classType.getComponentType();\n                    }\n                    t = classType;\n                } \n                return com.google.gson.reflect.TypeToken.isAssignableFrom(t, ((java.lang.reflect.ParameterizedType)(toGenericComponentType)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","to":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:313","type":"CtBinaryOperatorImpl","sourcecode":"(value) == null"},"failures":[],"tindex":"50cbedf2-3e4b-11e6-896f-53ce677c30c4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value instanceof java.lang.Number) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.IllegalAccessException();\n            } else {\n                {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[83,84,85,88,89,94,40,116,177,2,179,189,191,50,243,255,62,63,65,66,263,406,468],"tindex":"50cc1503-3e4b-11e6-896f-edd1d008f9ac","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1413","type":"CtVariableReadImpl","sourcecode":"throwOnEof"},"failures":[],"tindex":"50cc1504-3e4b-11e6-896f-61ef263730fb","method":{"position":"com.google.gson.stream.JsonReader:1331","type":"CtMethodImpl","sourcecode":"private int nextNonWhitespace(boolean throwOnEof) throws java.io.IOException {\n    if (throwOnEof) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int int = int;\n            int int = int;\n            while (true) {\n                if (p == l) {\n                    int = p;\n                    if (!(fillBuffer(1))) {\n                        break;\n                    } \n                    p = int;\n                    l = int;\n                } \n                int int = buffer[(p++)];\n                if (c == '\\n') {\n                    (int)++;\n                    int = p;\n                    continue;\n                } else if (((c == ' ') || (c == '\\r')) || (c == '\\t')) {\n                    continue;\n                } \n                if (c == '/') {\n                    int = p;\n                    if (p == l) {\n                        (int)--;\n                        boolean boolean = fillBuffer(2);\n                        (int)++;\n                        if (!charsLoaded) {\n                            return c;\n                        } \n                    } \n                    checkLenient();\n                    char char = buffer[int];\n                    switch (peek) {\n                        case '*' :\n                            (int)++;\n                            if (!(skipTo(\"*/\"))) {\n                                throw syntaxError(\"Unterminated comment\");\n                            } \n                            p = (int) + 2;\n                            l = int;\n                            continue;\n                        case '/' :\n                            (int)++;\n                            skipToEndOfLine();\n                            p = int;\n                            l = int;\n                            continue;\n                        default :\n                            return c;\n                    }\n                } else if (c == '#') {\n                    int = p;\n                    checkLenient();\n                    skipToEndOfLine();\n                    p = int;\n                    l = int;\n                } else {\n                    int = p;\n                    return c;\n                }\n            }\n            if (throwOnEof) {\n                throw new java.io.EOFException(((((\"End of input\" + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())));\n            } else {\n                return -1;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwOnEof":"throwOnEof"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[],"tindex":"50cc1505-3e4b-11e6-896f-3f6a3f25e1ab","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src != null) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"50cc1506-3e4b-11e6-896f-e769aa9bbd8f","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                {\n                    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new com.google.gson.JsonSyntaxException();\n                    } else {\n                        {\n                            if (json == null) {\n                                return null;\n                            } \n                            return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[],"tindex":"50cc3c17-3e4b-11e6-896f-5b2ebed3d400","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[],"tindex":"50cc3c18-3e4b-11e6-896f-c562747eaf09","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (type instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                type = value.getClass();\n            } \n            return type;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"50cc3c19-3e4b-11e6-896f-fbe4333d8432","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Iterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return containsKey(o);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"50cc3c1a-3e4b-11e6-896f-7bda302be926","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"50cc632b-3e4b-11e6-896f-f77a3c27b0d6","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element instanceof com.google.gson.JsonObject) {\n        {\n            if (element instanceof com.google.gson.JsonObject) {\n                {\n                    com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"50cc632c-3e4b-11e6-896f-179cdd7aebe1","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:99","type":"CtVariableReadImpl","sourcecode":"serialization"},"failures":[],"tindex":"50cc632d-3e4b-11e6-896f-17479c707723","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialization":"serialization"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"50cc632e-3e4b-11e6-896f-0fd66ca6a94a","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"50cc632f-3e4b-11e6-896f-cfed75bab0c8","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element instanceof com.google.gson.JsonObject) {\n        {\n            if (element instanceof com.google.gson.JsonObject) {\n                {\n                    com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"50cc8a40-3e4b-11e6-896f-8ba72b839804","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"50cc8a41-3e4b-11e6-896f-bbdd84ceffce","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239596514/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":50,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}