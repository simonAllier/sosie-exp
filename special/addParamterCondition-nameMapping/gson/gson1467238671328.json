{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":79,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":116,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":18,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":139,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":25,"com.google.gson.MixedStreamTest.testWriteLenient":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":73,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":145,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":172,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":179,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":150,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":152,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":181,"com.google.gson.functional.ObjectTest.testSingletonLists":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":70,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":153,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":117,"com.google.gson.stream.JsonWriterTest.testStrings":199,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":82,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":165,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":54,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":171,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":190,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":148,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":24,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":30,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":177,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":182,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":137,"com.google.gson.functional.EnumTest.testEnumCaseMapping":149,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":2,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":115,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":60,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":168,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":213,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":156,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":144,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":176,"com.google.gson.functional.MapTest.testGeneralMapField":14,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":85,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":47,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":55,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":107,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":160,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":135,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":180,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":205,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":207,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":80,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":161,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":138,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":169,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":209,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":140,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":44,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":93,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":104,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":112,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":155,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":32,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":126,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":114,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":94,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":191,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":17,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":136,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":210,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":189,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":194,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":211,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":35,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":72,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":13,"com.google.gson.functional.MapTest.testInterfaceTypeMap":12,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":68,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":185,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":37,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":147,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":164,"com.google.gson.functional.EnumTest.testEnumSet":143,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":142,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":90,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":56,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":7,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":134,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":102,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":204,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":83,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":132,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":175,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":99,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":111,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":36,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":106,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":128,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":19,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":28,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":39,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":100,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":20,"com.google.gson.functional.MapTest.testSerializeMaps":6,"com.google.gson.functional.MapTest.testComplexKeysSerialization":16,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":71,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":49,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":87,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":109,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":40,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":77,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":129,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":26,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":64,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":162,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":173,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":212,"com.google.gson.functional.MapTest.testRawMapSerialization":15,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":201,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":184,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":57,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":170,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":206,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":65,"com.google.gson.functional.CollectionTest.testQueueSerialization":174,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":197,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":42,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":81,"com.google.gson.functional.MapTest.testMapOfMapSerialization":11,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":22,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":158,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":53,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":208,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":118,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":46,"com.google.gson.functional.MapTest.testMapWithQuotes":10,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":125,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":58,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":27,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":89,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":33,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":119,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":1,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":66,"com.google.gson.functional.MapTest.testMapSubclassSerialization":5,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":130,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":62,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":110,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":192,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":48,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":186,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":202,"com.google.gson.functional.EnumTest.testEnumSubclass":146,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":63,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":151,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":91,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":41,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":75,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":141,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":31,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":96,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":193,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":163,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":0,"com.google.gson.functional.ObjectTest.testNestedSerialization":103,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":157,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":159,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":154,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":76,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":124,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":196,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":203,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":200,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":43,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":101,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":86,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":92,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":98,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":120,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":167,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":78,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":45,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":3,"com.google.gson.functional.StringTest.testStringValueSerialization":123,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":21,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":50,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":108,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":127,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":51,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":69,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":188,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":67,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":84,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":195,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":8,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":38,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":131,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":34,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":133,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":23,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":29,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":61},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"51910f0e-3e47-11e6-9e67-e3f8e0d6774a","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467238572219/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"51915d2f-3e47-11e6-9e67-fbb33580f9e4","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (json == null) {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467238572219/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[208,209,210,211,212,213,214],"tindex":"51918440-3e47-11e6-9e67-41e58a391e4b","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467238572219/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:459","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.TypeAdapter<?>"},"failures":[],"tindex":"5191ab51-3e47-11e6-9e67-256c9293c2bb","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467238572219/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":4,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}