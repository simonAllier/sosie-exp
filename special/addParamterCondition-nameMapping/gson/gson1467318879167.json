{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":377,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":386,"com.google.gson.functional.StringTest.testStringValueDeserialization":384,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":150,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":280,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":539,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":241,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":58,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":374,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":454,"com.google.gson.MixedStreamTest.testWriteLenient":600,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":548,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":182,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":416,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":334,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":433,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":289,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":32,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":53,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":567,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":250,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":195,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":476,"com.google.gson.functional.ObjectTest.testSingletonLists":332,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":35,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":540,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":234,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":387,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":590,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":409,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":438,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":558,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":352,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":16,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":292,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":466,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":400,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":151,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":208,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":281,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":132,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":21,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":226,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":103,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":131,"com.google.gson.functional.EnumTest.testEnumCaseMapping":52,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":13,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":385,"com.google.gson.functional.JsonTreeTest.testToJsonTree":109,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":225,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":561,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":168,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":203,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":514,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":80,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":2,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":236,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":532,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":479,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":426,"com.google.gson.functional.ObjectTest.testNullDeserialization":364,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":442,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":397,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":346,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":31,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":302,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":242,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":353,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":101,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":574,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":361,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":30,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":565,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":504,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":562,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":180,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":307,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":557,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":286,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":265,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":313,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":513,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":76,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":365,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":538,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":124,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":278,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":455,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":529,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":494,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":576,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":146,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":287,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":461,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":279,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":70,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":360,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":29,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":38,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":340,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":65,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":142,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":246,"com.google.gson.metrics.PerformanceTest.testDummy":25,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":36,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":159,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":193,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":499,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":578,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":148,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":406,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":326,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":546,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":496,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":531,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":573,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":445,"com.google.gson.functional.CollectionTest.testSetDeserialization":432,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":568,"com.google.gson.functional.EnumTest.testEnumSet":43,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":345,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":403,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":270,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":194,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":577,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":519,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":354,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":20,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":192,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":283,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":498,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":294,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":98,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":415,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":295,"com.google.gson.functional.MapTest.testHashMapDeserialization":113,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":239,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":422,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":544,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":39,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":379,"com.google.gson.MixedStreamTest.testReadNulls":601,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":169,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":375,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":413,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":490,"com.google.gson.functional.MapTest.testSortedMap":135,"com.google.gson.functional.MapTest.testMapSerialization":130,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":378,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":276,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":322,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":83,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":12,"com.google.gson.functional.MapTest.testSerializeMaps":116,"com.google.gson.functional.MapTest.testComplexKeysSerialization":143,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":402,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":147,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":90,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":50,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":444,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":488,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":9,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":410,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":48,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":3,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":211,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":60,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":363,"com.google.gson.functional.MapTest.testStringKeyDeserialization":145,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":87,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":582,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":309,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":149,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":245,"com.google.gson.functional.PrettyPrintingTest.testMap":209,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":240,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":449,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":419,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":381,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":411,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":509,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":15,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":89,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":390,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":394,"com.google.gson.functional.MapTest.testMapSerializationEmpty":144,"com.google.gson.functional.CollectionTest.testQueueSerialization":423,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":526,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":271,"com.google.gson.functional.MapTest.testMapOfMapSerialization":129,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":534,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":429,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":273,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":591,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":388,"com.google.gson.functional.FieldNamingTest.testIdentity":463,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":579,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":93,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":366,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":64,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":108,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":184,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":331,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":228,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":22,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":389,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":570,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":55,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":550,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":521,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":528,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":560,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":110,"com.google.gson.functional.MapTest.testMapSubclassSerialization":115,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":305,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":41,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":202,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":405,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":260,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":451,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":464,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":597,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":320,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":456,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":508,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":408,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":191,"com.google.gson.functional.EnumTest.testEnumSubclass":46,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":282,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":17,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":350,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":227,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":569,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":288,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":581,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":7,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":230,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":57,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":266,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":56,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":157,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":26,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":79,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":272,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":344,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":63,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":553,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":333,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":112,"com.google.gson.MixedStreamTest.testWriteNulls":598,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":78,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":459,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":72,"com.google.gson.CommentsTest.testParseComments":18,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":188,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":443,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":335,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":482,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":586,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":85,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":219,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":285,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":321,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":134,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":392,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":153,"com.google.gson.MixedStreamTest.testReadInvalidState":595,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":564,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":200,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":304,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":555,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":323,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":238,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":1,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":91,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":216,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":255,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":299,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":536,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":75,"com.google.gson.functional.MapTest.testMapDeserialization":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":530,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":214,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":111,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":475,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":121,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":166,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":481,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":477,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":176,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":47,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":506,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":351,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":367,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":4,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":452,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":515,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":199,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":54,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":175,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":133,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":210,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":559,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":224,"com.google.gson.functional.PrimitiveTest.testShortSerialization":303,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":588,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":484,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":291,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":105,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":261,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":290,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":237,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":520,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":462,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":45,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":418,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":40,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":117,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":254,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":311,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":439,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":457,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":547,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":605,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":318,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":312,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":62,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":165,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":368,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":580,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":465,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":501,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":297,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":205,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":267,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":583,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":372,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":339,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":51,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":5,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":404,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":427,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":516,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":447,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":584,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":474,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":483,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":537,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":244,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":493,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":523,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":485,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":542,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":162,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":420,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":231,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":298,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":269,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":315,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":154,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":44,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":480,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":383,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":324,"com.google.gson.functional.MapTest.testGeneralMapField":139,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":337,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":69,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":317,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":84,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":448,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":571,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":549,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":137,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":179,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":502,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":293,"com.google.gson.MixedStreamTest.testReadMixedStreamed":604,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":125,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":517,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":23,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":434,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":492,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":34,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":274,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":104,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":497,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":535,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":126,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":207,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":114,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":316,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":587,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":223,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":469,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":533,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":460,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":94,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":428,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":500,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":487,"com.google.gson.functional.ObjectTest.testNestedDeserialization":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":593,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":152,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":358,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":380,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":156,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":102,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":314,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":218,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":59,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":127,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":391,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":190,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":301,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":171,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":186,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":458,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":437,"com.google.gson.functional.ObjectTest.testNullSerialization":347,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":172,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":206,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":118,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":138,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":229,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":81,"com.google.gson.functional.MapTest.testInterfaceTypeMap":136,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":450,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":161,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":232,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":49,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":174,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":453,"com.google.gson.MixedStreamTest.testReadClosed":596,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":503,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":100,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":248,"com.google.gson.MixedStreamTest.testWriteClosed":603,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":382,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":425,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":164,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":563,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":196,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":160,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":221,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":217,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":370,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":556,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":167,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":341,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":424,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":470,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":277,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":472,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":8,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":543,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":95,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":319,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":253,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":106,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":511,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":66,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":446,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":220,"com.google.gson.functional.CollectionTest.testQueueDeserialization":440,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":259,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":275,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":396,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":376,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":471,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":554,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":123,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":362,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":525,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":181,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":371,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":417,"com.google.gson.functional.MapTest.testRawMapSerialization":141,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":594,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":435,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":541,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":170,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":356,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":327,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":486,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":71,"com.google.gson.functional.PrimitiveTest.testByteSerialization":300,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":407,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":329,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":177,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":243,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":183,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":82,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":10,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":19,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":197,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":393,"com.google.gson.functional.MapTest.testMapWithQuotes":128,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":251,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":510,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":395,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":575,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":491,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":592,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":308,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":507,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":566,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":478,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":187,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":369,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":0,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":215,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":284,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":522,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":88,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":551,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":512,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":185,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":468,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":524,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":296,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":414,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":431,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":74,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":67,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":189,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":552,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":6,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":96,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":473,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":42,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":412,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":201,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":233,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":589,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":355,"com.google.gson.functional.ObjectTest.testNestedSerialization":357,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":155,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":178,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":247,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":399,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":222,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":140,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":325,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":204,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":24,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":602,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":92,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":348,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":310,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":163,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":527,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":14,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":28,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":249,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":359,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":505,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":467,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":398,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":77,"com.google.gson.functional.CollectionTest.testSetSerialization":436,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":572,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":212,"com.google.gson.functional.StringTest.testStringValueSerialization":401,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":585,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":328,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":61,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":421,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":68,"com.google.gson.MixedStreamTest.testWriteInvalidState":599,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":342,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":252,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":86,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":258,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":518,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":11,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":441,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":97,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":99,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":545,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":330,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":120,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":73,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":495},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"112c025c-3f02-11e6-938f-cd83bd7dc56b","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3],"tindex":"112c507d-3f02-11e6-938f-f5d8513e840a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"112cc5ae-3f02-11e6-938f-8d9d7cc2ebac","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[4,5,6,7,8,9,10,11,12],"tindex":"112cc5af-3f02-11e6-938f-8167a2d9db24","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (name == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (name.length()) ; i++) {\n                char char = name.charAt(i);\n                if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                    translation.append(separator);\n                } \n                translation.append(character);\n            }\n            return translation.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,4,171,5,6,172,7,8,173,174,175,9,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,10,11,12,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605],"tindex":"112cecc0-3f02-11e6-938f-151c5ffa27a7","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1413","type":"CtVariableReadImpl"},"failures":[],"tindex":"112d3ae1-3f02-11e6-938f-a33e7765419c","method":{"position":"com.google.gson.stream.JsonReader:1331","type":"CtMethodImpl","sourcecode":"private int nextNonWhitespace(boolean throwOnEof) throws java.io.IOException {\n    if (throwOnEof) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int int = int;\n            int int = int;\n            while (true) {\n                if (p == l) {\n                    int = p;\n                    if (!(fillBuffer(1))) {\n                        break;\n                    } \n                    p = int;\n                    l = int;\n                } \n                int int = buffer[(p++)];\n                if (c == '\\n') {\n                    (int)++;\n                    int = p;\n                    continue;\n                } else if (((c == ' ') || (c == '\\r')) || (c == '\\t')) {\n                    continue;\n                } \n                if (c == '/') {\n                    int = p;\n                    if (p == l) {\n                        (int)--;\n                        boolean boolean = fillBuffer(2);\n                        (int)++;\n                        if (!charsLoaded) {\n                            return c;\n                        } \n                    } \n                    checkLenient();\n                    char char = buffer[int];\n                    switch (peek) {\n                        case '*' :\n                            (int)++;\n                            if (!(skipTo(\"*/\"))) {\n                                throw syntaxError(\"Unterminated comment\");\n                            } \n                            p = (int) + 2;\n                            l = int;\n                            continue;\n                        case '/' :\n                            (int)++;\n                            skipToEndOfLine();\n                            p = int;\n                            l = int;\n                            continue;\n                        default :\n                            return c;\n                    }\n                } else if (c == '#') {\n                    int = p;\n                    checkLenient();\n                    skipToEndOfLine();\n                    p = int;\n                    l = int;\n                } else {\n                    int = p;\n                    return c;\n                }\n            }\n            if (throwOnEof) {\n                throw new java.io.EOFException(((((\"End of input\" + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())));\n            } else {\n                return -1;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwOnEof":"throwOnEof"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"112d61f2-3f02-11e6-938f-df994cad3d34","method":{"position":"com.google.gson.JsonObject:78","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.String value) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"112d8903-3f02-11e6-938f-777902824d23","method":{"position":"com.google.gson.internal.bind.TypeAdapters:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"112d8904-3f02-11e6-938f-9de23adad8cb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467318648323/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":9,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}