{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":70,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":412,"com.google.gson.functional.StringTest.testStringValueDeserialization":410,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":67,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":359,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":201,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":320,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":82,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":302,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":428,"com.google.gson.MixedStreamTest.testWriteLenient":586,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":210,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":405,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":533,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":266,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":549,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":368,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":509,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":514,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":161,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":329,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":460,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":491,"com.google.gson.functional.ObjectTest.testSingletonLists":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":202,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":517,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":313,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":413,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":255,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":229,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":554,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":220,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":281,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":598,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":371,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":8,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":426,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":566,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":360,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":450,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":49,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":305,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":593,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":478,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":48,"com.google.gson.functional.EnumTest.testEnumCaseMapping":508,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":19,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":411,"com.google.gson.functional.JsonTreeTest.testToJsonTree":108,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":304,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":455,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":223,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":177,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":498,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":136,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":194,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":315,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":1,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":543,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":235,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":423,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":277,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":381,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":321,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":282,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":476,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":573,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":290,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":224,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":386,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":531,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":385,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":219,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":365,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":344,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":176,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":392,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":132,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":293,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":200,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":342,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":41,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":357,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":429,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":99,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":191,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":404,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":241,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":63,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":366,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":435,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":358,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":126,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":289,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":272,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":564,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":577,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":59,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":89,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":325,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":518,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":112,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":489,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":527,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":243,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":65,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":226,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":26,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":208,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":193,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":524,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":572,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":238,"com.google.gson.functional.CollectionTest.testSetDeserialization":548,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":162,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":79,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":276,"com.google.gson.functional.EnumTest.testEnumSet":499,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":349,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":490,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":242,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":182,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":283,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":488,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":592,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":362,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":526,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":373,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":233,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":473,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":374,"com.google.gson.functional.MapTest.testHashMapDeserialization":30,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":318,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":539,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":206,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":72,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":565,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":68,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":90,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":232,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":400,"com.google.gson.functional.MapTest.testSortedMap":52,"com.google.gson.functional.MapTest.testMapSerialization":47,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":71,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":22,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":355,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":139,"com.google.gson.functional.MapTest.testSerializeMaps":33,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":151,"com.google.gson.functional.MapTest.testComplexKeysSerialization":60,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":78,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":64,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":146,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":237,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":506,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":471,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":102,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":504,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":5,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":453,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":84,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":292,"com.google.gson.functional.MapTest.testStringKeyDeserialization":62,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":247,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":388,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":66,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":324,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":319,"com.google.gson.functional.PrettyPrintingTest.testMap":451,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":558,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":536,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":172,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":230,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":145,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":597,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":416,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":420,"com.google.gson.functional.MapTest.testMapSerializationEmpty":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":188,"com.google.gson.functional.CollectionTest.testQueueSerialization":540,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":350,"com.google.gson.functional.MapTest.testMapOfMapSerialization":46,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":341,"com.google.gson.JavaSerializationTest.testMapIsSerializable":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":196,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":545,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":157,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":352,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":256,"com.google.gson.functional.FieldNamingTest.testIdentity":152,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":414,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":244,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":439,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":294,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":88,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":107,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":263,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":407,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":307,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":594,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":415,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":569,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":260,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":347,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":212,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":183,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":190,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":222,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":28,"com.google.gson.functional.MapTest.testMapSubclassSerialization":32,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":384,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":497,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":575,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":81,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":339,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":510,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":560,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":584,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":171,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":399,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":430,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":228,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":487,"com.google.gson.functional.EnumTest.testEnumSubclass":502,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":361,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":279,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":599,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":306,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":18,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":568,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":367,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":246,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":97,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":309,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":262,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":345,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":261,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":110,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":16,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":135,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":275,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":351,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":87,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":215,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":265,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":29,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":134,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":433,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":128,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":236,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":484,"com.google.gson.CommentsTest.testParseComments":596,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":251,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":267,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":465,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":141,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":364,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":447,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":21,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":51,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":418,"com.google.gson.MixedStreamTest.testReadInvalidState":583,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":158,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":496,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":217,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":383,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":23,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":317,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":3,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":147,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":444,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":334,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":155,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":198,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":378,"com.google.gson.functional.MapTest.testMapDeserialization":39,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":131,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":192,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":456,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":459,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":38,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":119,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":464,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":461,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":103,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":106,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":503,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":169,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":280,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":295,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":92,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":561,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":111,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":178,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":495,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":101,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":259,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":50,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":452,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":579,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":221,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":303,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":253,"com.google.gson.functional.PrimitiveTest.testShortSerialization":382,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":467,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":370,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":480,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":340,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":369,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":0,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":316,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":148,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":501,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":535,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":574,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":34,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":333,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":390,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":431,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":209,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":472,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":590,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":397,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":391,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":86,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":118,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":245,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":296,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":164,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":376,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":437,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":248,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":346,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":300,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":271,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":507,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":80,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":179,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":544,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":556,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":249,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":458,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":199,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":466,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":323,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":185,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":403,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":468,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":204,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":115,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":537,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":310,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":377,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":348,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":394,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":521,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":463,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":500,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":76,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":24,"com.google.gson.functional.MapTest.testGeneralMapField":56,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":269,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":125,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":396,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":140,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":557,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":570,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":211,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":165,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":314,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":530,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":372,"com.google.gson.MixedStreamTest.testReadMixedStreamed":589,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":180,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":335,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":402,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":550,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":595,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":516,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":353,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":479,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":13,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":525,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":197,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":43,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":482,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":31,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":252,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":395,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":520,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":10,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":195,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":434,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":440,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":163,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":470,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":258,"com.google.gson.functional.ObjectTest.testNestedDeserialization":301,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":287,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":567,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":73,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":109,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":477,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":393,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":446,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":44,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":83,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":417,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":486,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":380,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":93,"com.google.gson.JavaSerializationTest.testListIsSerializable":15,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":409,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":432,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":553,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":96,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":481,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":35,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":55,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":308,"com.google.gson.functional.MapTest.testInterfaceTypeMap":53,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":137,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":559,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":114,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":311,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":505,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":100,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":562,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":166,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":475,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":327,"com.google.gson.MixedStreamTest.testWriteClosed":588,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":75,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":542,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":225,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":270,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":492,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":113,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":449,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":298,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":218,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":120,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":273,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":541,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":11,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":356,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":12,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":98,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":546,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":205,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":441,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":153,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":398,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":332,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":174,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":122,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":239,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":448,"com.google.gson.functional.CollectionTest.testQueueDeserialization":555,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":338,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":354,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":422,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":216,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":512,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":40,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":187,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":299,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":532,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":534,"com.google.gson.functional.MapTest.testRawMapSerialization":58,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":582,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":551,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":203,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":91,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":285,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":27,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":469,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":578,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":127,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":227,"com.google.gson.functional.PrimitiveTest.testByteSerialization":379,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":580,"com.google.gson.ObjectTypeAdapterTest.testSerialize":600,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":528,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":322,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":406,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":138,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":149,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":419,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":493,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":591,"com.google.gson.functional.MapTest.testMapWithQuotes":45,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":173,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":330,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":421,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":240,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":401,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":257,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":104,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":387,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":170,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":160,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":462,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":483,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":297,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":2,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":457,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":184,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":363,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":144,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":274,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":186,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":408,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":511,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":375,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":547,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":130,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":214,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":485,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":95,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":442,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":513,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":576,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":231,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":312,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":254,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":284,"com.google.gson.functional.ObjectTest.testNestedSerialization":286,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":522,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":326,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":425,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":529,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":519,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":57,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":25,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":436,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":581,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":587,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":278,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":438,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":389,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":116,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":515,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":189,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":20,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":328,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":168,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":288,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":9,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":424,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":133,"com.google.gson.functional.CollectionTest.testSetSerialization":552,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":571,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":250,"com.google.gson.functional.StringTest.testStringValueSerialization":427,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":454,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":77,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":85,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":154,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":538,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":124,"com.google.gson.MixedStreamTest.testWriteInvalidState":585,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":331,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":142,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":337,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":563,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":181,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":150,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":234,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":6,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":443,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":474,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":494,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":207,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":37,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":129,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":523},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"9133a2a0-3e68-11e6-abde-6f0431b0093f","method":{"position":"com.google.gson.internal.$Gson$Types:217","type":"CtMethodImpl","sourcecode":"public static java.lang.String typeToString(java.lang.reflect.Type type) {\n    return type instanceof java.lang.Class ? ((java.lang.Class<?>)(type)).getName() : type.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0],"tindex":"913417d1-3e68-11e6-abde-ff77e4490384","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[],"tindex":"913417d2-3e68-11e6-abde-8d2dd5a28137","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[1],"tindex":"91343ee3-3e68-11e6-abde-591bb49d9f8e","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"91343ee4-3e68-11e6-abde-2d8520206e8a","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[2,3,4,5],"tindex":"913465f5-3e68-11e6-abde-bd515ccc755c","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[6],"tindex":"91348d06-3e68-11e6-abde-abbf2a1cf3f5","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[7,8,9,10,11,12],"tindex":"91348d07-3e68-11e6-abde-5350020010f7","method":{"position":"com.google.gson.internal.Excluder:242","type":"CtMethodImpl","sourcecode":"private boolean isValidUntil(com.google.gson.annotations.Until annotation) {\n    if (annotation != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion <= (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.Class<?>"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,1,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,7,8,9,511,10,11,512,12,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600],"tindex":"9134db28-3e68-11e6-abde-a9318a67e109","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1413","type":"CtVariableReadImpl","sourcecode":"throwOnEof"},"failures":[],"tindex":"91352949-3e68-11e6-abde-ef33524c6f5f","method":{"position":"com.google.gson.stream.JsonReader:1331","type":"CtMethodImpl","sourcecode":"private int nextNonWhitespace(boolean throwOnEof) throws java.io.IOException {\n    if (throwOnEof) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int int = int;\n            int int = int;\n            while (true) {\n                if (p == l) {\n                    int = p;\n                    if (!(fillBuffer(1))) {\n                        break;\n                    } \n                    p = int;\n                    l = int;\n                } \n                int int = buffer[(p++)];\n                if (c == '\\n') {\n                    (int)++;\n                    int = p;\n                    continue;\n                } else if (((c == ' ') || (c == '\\r')) || (c == '\\t')) {\n                    continue;\n                } \n                if (c == '/') {\n                    int = p;\n                    if (p == l) {\n                        (int)--;\n                        boolean boolean = fillBuffer(2);\n                        (int)++;\n                        if (!charsLoaded) {\n                            return c;\n                        } \n                    } \n                    checkLenient();\n                    char char = buffer[int];\n                    switch (peek) {\n                        case '*' :\n                            (int)++;\n                            if (!(skipTo(\"*/\"))) {\n                                throw syntaxError(\"Unterminated comment\");\n                            } \n                            p = (int) + 2;\n                            l = int;\n                            continue;\n                        case '/' :\n                            (int)++;\n                            skipToEndOfLine();\n                            p = int;\n                            l = int;\n                            continue;\n                        default :\n                            return c;\n                    }\n                } else if (c == '#') {\n                    int = p;\n                    checkLenient();\n                    skipToEndOfLine();\n                    p = int;\n                    l = int;\n                } else {\n                    int = p;\n                    return c;\n                }\n            }\n            if (throwOnEof) {\n                throw new java.io.EOFException(((((\"End of input\" + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())));\n            } else {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwOnEof":"throwOnEof"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtBinaryOperatorImpl","sourcecode":"root == null"},"failures":[],"tindex":"9135505a-3e68-11e6-abde-a9c37458a3cc","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:626","type":"CtMethodImpl","sourcecode":"void reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root ; n != null ; n = n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n                stackTop = n;\n            }\n            com.google.gson.internal.LinkedHashTreeMap.AvlIterator.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[],"tindex":"9135776b-3e68-11e6-abde-49a1dff7ec9f","method":{"position":"com.google.gson.internal.LinkedTreeMap:284","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V> node, com.google.gson.internal.LinkedTreeMap.Node<K, V> replacement) {\n    if (node != null) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n            if (replacement != null) {\n                replacement.com.google.gson.internal.LinkedTreeMap.Node<K, V> = parent;\n            } \n            if (parent != null) {\n                if ((parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node) {\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                } else {\n                    assert (parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node;\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                }\n            } else {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"9135776c-3e68-11e6-abde-31a5a8588a89","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"91359e7d-3e68-11e6-abde-17fd00b69d21","method":{"position":"com.google.gson.internal.bind.TypeAdapters:297","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"91359e7e-3e68-11e6-abde-976b111d765c","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[],"tindex":"91359e7f-3e68-11e6-abde-b5f62b78f395","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonNull) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"91359e80-3e68-11e6-abde-ebe65ea92c6f","method":{"position":"com.google.gson.stream.JsonWriter:490","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            java.lang.String java.lang.String = value.toString();\n            if ((!(boolean)) && (((string.equals(\"-Infinity\")) || (string.equals(\"Infinity\"))) || (string.equals(\"NaN\")))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            beforeValue(false);\n            java.io.Writer.append(string);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9135c591-3e68-11e6-abde-7de4bc67658e","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            float float = value.floatValue();\n            checkValidFloatingPoint(floatValue);\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"9135c592-3e68-11e6-abde-118b9c1dafa8","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"9135c593-3e68-11e6-abde-9b1b6e0101c5","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"9135c594-3e68-11e6-abde-25ff6a6c5ec3","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9135c595-3e68-11e6-abde-ed37e3b04249","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"9135eca6-3e68-11e6-abde-fde24585e21a","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9135eca7-3e68-11e6-abde-dfd1d655a72a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"9135eca8-3e68-11e6-abde-0f2ba399eec8","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"9135eca9-3e68-11e6-abde-b76f311fa3c7","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        {\n            if (src == null) {\n                return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n            } \n            return toJson(src, src.getClass());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252522809/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":26,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}