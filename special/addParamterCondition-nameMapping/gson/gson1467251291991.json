{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":89,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":347,"com.google.gson.functional.StringTest.testStringValueDeserialization":345,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":58,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":505,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":235,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":466,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":0,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":50,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":332,"com.google.gson.MixedStreamTest.testWriteLenient":594,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":242,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":71,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":365,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":147,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":382,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":514,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":121,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":573,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":263,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":475,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":34,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":552,"com.google.gson.functional.ObjectTest.testSingletonLists":145,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":236,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":348,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":459,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":30,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":190,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":387,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":251,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":165,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":86,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":517,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":576,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":361,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":126,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":265,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":506,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":293,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":81,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":451,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":46,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":292,"com.google.gson.functional.EnumTest.testEnumCaseMapping":572,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":346,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":601,"com.google.gson.functional.JsonTreeTest.testToJsonTree":259,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":450,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":270,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":253,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":106,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":211,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":427,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":229,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":461,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":77,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":375,"com.google.gson.functional.ObjectTest.testNullDeserialization":177,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":137,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":358,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":159,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":527,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":605,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":467,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":166,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":44,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":448,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":174,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":604,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":201,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":254,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":343,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":532,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":531,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":250,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":511,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":490,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":210,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":538,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":178,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":423,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":234,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":488,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":285,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":333,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":503,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":324,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":226,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":443,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":611,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":16,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":307,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":339,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":512,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":504,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":173,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":417,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":153,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":411,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":603,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":7,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":303,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":471,"com.google.gson.metrics.PerformanceTest.testDummy":600,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":125,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":97,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":113,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":14,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":18,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":187,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":309,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":241,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":228,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":447,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":139,"com.google.gson.functional.CollectionTest.testSetDeserialization":381,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":264,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":158,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":390,"com.google.gson.functional.EnumTest.testEnumSet":563,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":495,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":114,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":216,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":280,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":167,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":80,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":112,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":508,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":13,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":519,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":41,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":196,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":520,"com.google.gson.functional.MapTest.testHashMapDeserialization":274,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":464,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":371,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":239,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":91,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":412,"com.google.gson.MixedStreamTest.testReadNulls":595,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":88,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":315,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":194,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":439,"com.google.gson.functional.MapTest.testSortedMap":296,"com.google.gson.functional.MapTest.testMapSerialization":291,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":90,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":61,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":501,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":430,"com.google.gson.functional.MapTest.testSerializeMaps":277,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":396,"com.google.gson.functional.MapTest.testComplexKeysSerialization":304,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":389,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":308,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":610,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":437,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":138,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":570,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":561,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":327,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":191,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":568,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":268,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":2,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":176,"com.google.gson.functional.MapTest.testStringKeyDeserialization":306,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":434,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":22,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":534,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":310,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":470,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":68,"com.google.gson.functional.PrettyPrintingTest.testMap":266,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":465,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":368,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":192,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":206,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":548,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":85,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":436,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":351,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":355,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":223,"com.google.gson.functional.MapTest.testMapSerializationEmpty":305,"com.google.gson.functional.CollectionTest.testQueueSerialization":372,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":496,"com.google.gson.functional.MapTest.testMapOfMapSerialization":290,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":231,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":378,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":498,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":31,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":349,"com.google.gson.functional.FieldNamingTest.testIdentity":397,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":19,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":130,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":179,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":6,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":73,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":144,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":258,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":453,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":82,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":70,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":350,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":312,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":493,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":244,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":585,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":225,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":252,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":273,"com.google.gson.functional.MapTest.testMapSubclassSerialization":276,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":530,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":119,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":330,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":392,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":399,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":485,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":574,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":591,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":205,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":334,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":545,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":189,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":111,"com.google.gson.functional.EnumTest.testEnumSubclass":566,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":507,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":87,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":163,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":452,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":84,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":444,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":513,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":21,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":322,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":455,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":314,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":491,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":313,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":95,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":426,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":584,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":157,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":497,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":5,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":247,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":146,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":57,"com.google.gson.MixedStreamTest.testWriteNulls":592,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":425,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":337,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":419,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":49,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":109,"com.google.gson.CommentsTest.testParseComments":587,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":26,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":148,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":556,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":405,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":432,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":510,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":60,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":295,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":353,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":128,"com.google.gson.MixedStreamTest.testReadInvalidState":589,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":260,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":54,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":529,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":62,"com.google.gson.JsonParserTest.testParseMixedArray":609,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":463,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":93,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":438,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":402,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":480,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":51,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":524,"com.google.gson.functional.MapTest.testMapDeserialization":283,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":422,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":227,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":271,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":56,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":551,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":608,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":104,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":282,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":555,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":553,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":328,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":257,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":567,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":203,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":164,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":180,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":317,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":400,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":212,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":35,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":311,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":326,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":267,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":294,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":55,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":449,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":28,"com.google.gson.functional.PrimitiveTest.testShortSerialization":528,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":78,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":516,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":47,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":486,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":515,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":217,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":462,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":393,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":565,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":367,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":329,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":278,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":479,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":59,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":536,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":335,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":615,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":53,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":562,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":599,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":613,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":543,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":537,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":38,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":4,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":20,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":103,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":198,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":575,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":616,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":522,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":9,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":23,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":492,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":185,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":152,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":571,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":319,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":213,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":376,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":398,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":24,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":550,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":233,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":557,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":469,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":220,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":442,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":558,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":238,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":100,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":369,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":456,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":523,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":494,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":540,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":408,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":554,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":564,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":92,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":63,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":150,"com.google.gson.functional.MapTest.testGeneralMapField":300,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":416,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":542,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":67,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":431,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":243,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":199,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":342,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":460,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":518,"com.google.gson.MixedStreamTest.testReadMixedStreamed":598,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":214,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":286,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":481,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":83,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":383,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":441,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":123,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":499,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":134,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":12,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":232,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":287,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":364,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":275,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":27,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":541,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":136,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":579,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":482,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":614,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":230,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":338,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":131,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":197,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":377,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":560,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":32,"com.google.gson.functional.ObjectTest.testNestedDeserialization":186,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":127,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":171,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":547,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":94,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":45,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":539,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":404,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":1,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":288,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":352,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":110,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":526,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":318,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":75,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":336,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":386,"com.google.gson.functional.ObjectTest.testNullSerialization":160,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":321,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":363,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":279,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":299,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":454,"com.google.gson.functional.MapTest.testInterfaceTypeMap":297,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":428,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":69,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":99,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":457,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":37,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":569,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":325,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":401,"com.google.gson.MixedStreamTest.testReadClosed":590,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":200,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":43,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":473,"com.google.gson.MixedStreamTest.testWriteClosed":597,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":374,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":549,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":102,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":255,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":115,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":98,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":407,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":183,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":403,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":249,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":105,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":154,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":373,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":580,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":39,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":502,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":582,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":323,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":379,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":52,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":40,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":544,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":478,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":208,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":140,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":413,"com.google.gson.functional.CollectionTest.testQueueDeserialization":388,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":406,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":484,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":500,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":357,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":546,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":248,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":581,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":175,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":284,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":222,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":184,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":344,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":366,"com.google.gson.functional.MapTest.testRawMapSerialization":302,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":588,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":384,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":237,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":169,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":316,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":66,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":559,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":188,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":418,"com.google.gson.functional.PrimitiveTest.testByteSerialization":525,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":142,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":340,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":468,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":607,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":72,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":429,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":394,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":79,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":116,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":354,"com.google.gson.functional.MapTest.testMapWithQuotes":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":207,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":476,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":356,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":15,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":440,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":107,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":533,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":204,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":262,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":76,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":108,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":182,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":272,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":219,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":509,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":156,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":435,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":245,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":209,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":221,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":578,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":521,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":195,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":380,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":421,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":246,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":414,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":320,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":132,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":583,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":331,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":193,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":36,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":458,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":29,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":168,"com.google.gson.functional.ObjectTest.testNestedSerialization":170,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":409,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":341,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":360,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":472,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":135,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":301,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":64,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":8,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":596,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":606,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":129,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":161,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":535,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":101,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":224,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":474,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":586,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":602,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":172,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":202,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":577,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":359,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":424,"com.google.gson.functional.CollectionTest.testSetSerialization":385,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":446,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":25,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":269,"com.google.gson.functional.StringTest.testStringValueSerialization":362,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":141,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":3,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":370,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":415,"com.google.gson.MixedStreamTest.testWriteInvalidState":593,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":155,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":477,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":433,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":483,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":410,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":215,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":395,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":48,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":133,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":42,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":612,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":240,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":143,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":281,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":10,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":420},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"b4118edf-3e64-11e6-b1bc-27ffcfb542ad","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof java.lang.reflect.GenericArrayType) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n            } \n            if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:103","type":"CtVariableReadImpl","sourcecode":"deserialization"},"failures":[88,89,90,91,92],"tindex":"b411dd00-3e64-11e6-b1bc-731284d23806","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deserialization":"serialization"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"b4120411-3e64-11e6-b1bc-278800a12f90","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtBinaryOperatorImpl","sourcecode":"root == null"},"failures":[93],"tindex":"b4120412-3e64-11e6-b1bc-cf03c1760433","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root == null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"b4122b23-3e64-11e6-b1bc-8dd226c371bf","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[0,1,2,3,4,5,6,7,94,95,96,97,98,99,100,101,102,103,104,105,106,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,107,32,108,109,33,110,111,112,113,114,34,115,116,117,35,118,36,119,120,121,122,123,124,125,126,127,128,129,130,131,40,132,133,41,42,43,44,45,46,134,47,135,136,48,137,49,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,50,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,51,233,234,235,236,237,238,52,239,240,241,53,242,243,244,245,246,247,248,54,249,250,251,55,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,56,57,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,58,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,59,388,389,390,391,392,393,394,395,396,397,60,61,62,63,64,65,66,398,67,68,69,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,70,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,71,72,73,74,75,88,546,89,90,91,547,548,549,92,550,551,552,553,76,77,554,555,556,557,78,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,79,80,81,82,83,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,85,86,87,604,605,606],"tindex":"b4125234-3e64-11e6-b1bc-e388cf41a9a4","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"b4127945-3e64-11e6-b1bc-33409c56adbd","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        {\n            if (src == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[8,15,17,21,22,23,25,26,27,29,31,107,32,33,126,127,41,43,44,46,142,143,155,199,209,211,242,246,55,257,56,58,59,69,439,442,443,71,72,74,75,77,78,565,82,607,608,609,610,611,612,613,614,615,616,604,605],"tindex":"b4127946-3e64-11e6-b1bc-b52548cf74bd","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element == null) {\n        {\n            com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[],"tindex":"b412a057-3e64-11e6-b1bc-cdd99b1a2a67","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value.isJsonNull()) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1413","type":"CtVariableReadImpl","sourcecode":"throwOnEof"},"failures":[],"tindex":"b412a058-3e64-11e6-b1bc-b13e3c80c21e","method":{"position":"com.google.gson.stream.JsonReader:1331","type":"CtMethodImpl","sourcecode":"private int nextNonWhitespace(boolean throwOnEof) throws java.io.IOException {\n    if (throwOnEof) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int int = int;\n            int int = int;\n            while (true) {\n                if (p == l) {\n                    int = p;\n                    if (!(fillBuffer(1))) {\n                        break;\n                    } \n                    p = int;\n                    l = int;\n                } \n                int int = buffer[(p++)];\n                if (c == '\\n') {\n                    (int)++;\n                    int = p;\n                    continue;\n                } else if (((c == ' ') || (c == '\\r')) || (c == '\\t')) {\n                    continue;\n                } \n                if (c == '/') {\n                    int = p;\n                    if (p == l) {\n                        (int)--;\n                        boolean boolean = fillBuffer(2);\n                        (int)++;\n                        if (!charsLoaded) {\n                            return c;\n                        } \n                    } \n                    checkLenient();\n                    char char = buffer[int];\n                    switch (peek) {\n                        case '*' :\n                            (int)++;\n                            if (!(skipTo(\"*/\"))) {\n                                throw syntaxError(\"Unterminated comment\");\n                            } \n                            p = (int) + 2;\n                            l = int;\n                            continue;\n                        case '/' :\n                            (int)++;\n                            skipToEndOfLine();\n                            p = int;\n                            l = int;\n                            continue;\n                        default :\n                            return c;\n                    }\n                } else if (c == '#') {\n                    int = p;\n                    checkLenient();\n                    skipToEndOfLine();\n                    p = int;\n                    l = int;\n                } else {\n                    int = p;\n                    return c;\n                }\n            }\n            if (throwOnEof) {\n                throw new java.io.EOFException(((((\"End of input\" + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())));\n            } else {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwOnEof":"throwOnEof"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[],"tindex":"b413b1c9-3e64-11e6-b1bc-9db1732f001e","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.String) {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"b413b1ca-3e64-11e6-b1bc-417e262f8a4c","method":{"position":"com.google.gson.reflect.TypeToken:160","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.GenericArrayType to) {\n    if (from == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251058820/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = to.getGenericComponentType();\n            if (toGenericComponentType instanceof java.lang.reflect.ParameterizedType) {\n                java.lang.reflect.Type java.lang.reflect.Type = from;\n                if (from instanceof java.lang.reflect.GenericArrayType) {\n                    t = ((java.lang.reflect.GenericArrayType)(from)).getGenericComponentType();\n                } else if (from instanceof java.lang.Class<?>) {\n                    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(from));\n                    while (classType.isArray()) {\n                        classType = classType.getComponentType();\n                    }\n                    t = classType;\n                } \n                return com.google.gson.reflect.TypeToken.isAssignableFrom(t, ((java.lang.reflect.ParameterizedType)(toGenericComponentType)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":12,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}