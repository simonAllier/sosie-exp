{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":4,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":272,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":126,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":260,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":132,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":172,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":286,"org.apache.commons.codec.language.Caverphone1Test.testEncodeEmpty":303,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":284,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":285,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":130,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":287,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":118,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":18,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":268,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":113,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":155,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":261,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":265,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":120,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":162,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":78,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":273,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":30,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":205,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":213,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":138,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":297,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":299,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":64,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":298,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":63,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":90,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":91,"org.apache.commons.codec.language.NysiisTest.testCap":193,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":125,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":142,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":94,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":139,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":92,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":35,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":93,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":66,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":210,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":310,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":242,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":173,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":101,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":70,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":76,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":309,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":176,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":86,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":267,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":253,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":55,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":166,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":259,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":148,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":186,"org.apache.commons.codec.language.SoundexTest.testB650":283,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":129,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":50,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":40,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":211,"org.apache.commons.codec.language.SoundexTest.testNewInstance":291,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":121,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":143,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":124,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":232,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":135,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":227,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":271,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":245,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":150,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved":141,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":218,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":214,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":5,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":209,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":117,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":231,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":187,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":54,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":68,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":39,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":215,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":128,"org.apache.commons.codec.binary.Base64Test.testUUID":11,"org.apache.commons.codec.binary.Base64Test.testSingletons":100,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":38,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":164,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":103,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":243,"org.apache.commons.codec.binary.Base64Test.testPairs":87,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero":156,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":163,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":170,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":114,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":58,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":292,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":60,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":8,"org.apache.commons.codec.language.NysiisTest.testBran":197,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":202,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":72,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":301,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":306,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":48,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":84,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":248,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":65,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":183,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":115,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":222,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":111,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":223,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":270,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":67,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":264,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":206,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":258,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":249,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":293,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":279,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":256,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":178,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":307,"org.apache.commons.codec.language.NysiisTest.testDad":194,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":175,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":237,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":154,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":312,"org.apache.commons.codec.language.NysiisTest.testDan":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":133,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":188,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":240,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":239,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":140,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":180,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":308,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":181,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":255,"org.apache.commons.codec.binary.HexTest.testCustomCharset":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":147,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":79,"org.apache.commons.codec.language.NysiisTest.testSnat":199,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":252,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":169,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":251,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":153,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":23,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":177,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":189,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":22,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":276,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":80,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":241,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":160,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":83,"org.apache.commons.codec.binary.Base64Test.testTriplets":85,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":216,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":311,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":43,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":157,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":41,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":44,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":73,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":27,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":235,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":75,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":182,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":95,"org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks":229,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":105,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":159,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":277,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":25,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":179,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":219,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":254,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":13,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":191,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":296,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":294,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":295,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":174,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":184,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":262,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":29,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":69,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":9,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":221,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":238,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":305,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":3,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":250,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":99,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":225,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":42,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":288,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":146,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":36,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":107,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":278,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":158,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":106,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":230,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":315,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":116,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":136,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":304,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":217,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":82,"org.apache.commons.codec.language.NysiisTest.testTranan":201,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":137,"org.apache.commons.codec.language.NysiisTest.testFal":196,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":34,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":300,"org.apache.commons.codec.language.NysiisTest.testSnad":198,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":71,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":190,"org.apache.commons.codec.language.MetaphoneTest.testTCH":313,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":257,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":203,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":167,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":280,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":314,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":281,"org.apache.commons.codec.binary.HexTest.testDencodeEmpty":6,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":282,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":244,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":17,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":266,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":57,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":212,"org.apache.commons.codec.binary.Base64Test.testBase64":104,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":20,"org.apache.commons.codec.language.Caverphone1Test.testEncodeNull":302,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":96,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":108,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":208,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":161,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":123,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":207,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":226,"org.apache.commons.codec.binary.Base64Test.testCodec112":98,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":149,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":228,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":269,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":10,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":200,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":144,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":246,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":274,"org.apache.commons.codec.binary.Base64Test.testCodec68":224,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":289,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":263,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":236,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":168,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":185,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":109,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":122,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":49,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":204,"org.apache.commons.codec.language.Caverphone2Test.testEncodeNull":233,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":47,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":165,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":192,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":102,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":275,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":56,"org.apache.commons.codec.language.SoundexTest.testDifference":290,"org.apache.commons.codec.language.Caverphone2Test.testEncodeEmpty":234,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":33,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":247,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":171,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":110,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":127,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":152,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":220,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":59,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":151},"transformations":[{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4],"tindex":"acb6278c-27a3-11e6-b127-dd704008c9b0","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb675ad-27a3-11e6-b127-a3742086b996","series":0,"name":"checkReturn","transplant":{"toString":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.RULES)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.RULES)));\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"ruleType","ruleType":"ruleType"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.ruleType","position":"org.apache.commons.codec.language.bm.PhoneticEngine:508","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[5],"tindex":"acb675ae-27a3-11e6-b127-97174023c323","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[6,7,8,9,10,11,12],"tindex":"acb69cbf-27a3-11e6-b127-9fbe46030bda","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"acb69cc0-27a3-11e6-b127-cb8c1297a5b3","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"concat"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.concat","position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb6c3d1-27a3-11e6-b127-7d0dae1a714d","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","raw":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[26,27],"tindex":"acb6c3d2-27a3-11e6-b127-c366e557d502","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_ascii","ascii":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb6eae3-27a3-11e6-b127-d1f459f396a4","series":0,"name":"checkReturn","transplant":{"toString":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} ","position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb6eae4-27a3-11e6-b127-b970fc08212f","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb711f5-27a3-11e6-b127-41a8948388c0","series":0,"name":"checkReturn","transplant":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb711f6-27a3-11e6-b127-61042a031f1d","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb73907-27a3-11e6-b127-95fb671d5bf0","series":0,"name":"checkReturn","transplant":{"toString":"if (replacedName.contains(dc)) {\n    final java.lang.String singleLetter = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"org.apache.commons.codec.language.Caverphone2.TEN_1","dc":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":0},{"exception":"org.apache.commons.codec.DecoderException","failures":[28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"acb73908-27a3-11e6-b127-176699a563b6","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"special","transplantationPoint":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[41,42,43,44,13,14,16,17,18,45,46,19,20,22,23,25,47,48],"tindex":"acb76019-27a3-11e6-b127-27e4fa73dc20","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"acb7601a-27a3-11e6-b127-bd299312dda9","series":0,"name":"checkReturn","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb7601b-27a3-11e6-b127-d1bd944f409d","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[62,63,64,65,66,67,68,69,70,71],"tindex":"acb7872c-27a3-11e6-b127-e95760cdcf67","series":0,"name":"checkReturn","transplant":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb7872d-27a3-11e6-b127-6dcaefbf0608","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"maxLength","minRating":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"maxLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"maxLength"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Soundex.this.maxLength","position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[72,73,74],"tindex":"acb7ae3e-27a3-11e6-b127-6fb81c02798b","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[41,42,43,44,75,13,14,16,17,18,19,20,22,23,25],"tindex":"acb7ae3f-27a3-11e6-b127-2f6e92e9863a","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[76],"tindex":"acb7ae40-27a3-11e6-b127-09fb197836e0","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,77,2,3,4],"tindex":"acb7d551-27a3-11e6-b127-a32d7893f7a1","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb7d552-27a3-11e6-b127-d124ebf596b1","series":0,"name":"checkReturn","transplant":{"toString":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb7d553-27a3-11e6-b127-75634b1392fd","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"binaryData"},"type":"special","transplantationPoint":{"toString":"return binaryData","position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[78,79,80,81,82,83,84,85,86,87,11,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,12,105,106,107,108,109,110,111],"tindex":"acb7d554-27a3-11e6-b127-137e30ecc75e","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"acb7fc65-27a3-11e6-b127-09faa5fe16d9","series":0,"name":"checkReturn","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"replacedName"},"type":"special","transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[62,63,64,65,66,67,68,69,70,155,71],"tindex":"acb7fc66-27a3-11e6-b127-db27e46de12e","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"length","y":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[62,63,64,65,66,67,68,69,70,155,71],"tindex":"acb7fc67-27a3-11e6-b127-07f5d362fbaa","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb82378-27a3-11e6-b127-23fed2e781d7","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3],"tindex":"acb82379-27a3-11e6-b127-23e6e0ee470c","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb8237a-27a3-11e6-b127-2d516b3f5d1c","series":0,"name":"checkReturn","transplant":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"str","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"str","text":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[41,42,43,44,75,156,13,14,157,15,16,17,18,45,46,19,20,21,158,22,23,24,25,159,160,161,47,48],"tindex":"acb8237b-27a3-11e6-b127-bdebda753ac0","series":0,"name":"checkReturn","transplant":{"toString":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"name","es2":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[162,163,164,165,10,88,94,166,102,167,168,106],"tindex":"acb84a8c-27a3-11e6-b127-092cb00f2044","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"acb84a8d-27a3-11e6-b127-7df6e9ca4cca","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"concat"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.concat","position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb84a8e-27a3-11e6-b127-a3dc15a4e70c","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"org.apache.commons.codec.DecoderException","failures":[28,169,29,30,31,170,171,32,33,34,35,36,37,38,39,172,40],"tindex":"acb8719f-27a3-11e6-b127-a1a51646b4ef","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"i"},"type":"special","transplantationPoint":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"acb871a0-27a3-11e6-b127-f3500ff2743b","series":0,"name":"checkReturn","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb871a1-27a3-11e6-b127-f92cdca5c74e","series":0,"name":"checkReturn","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"charset","leftCharacter":"charset","rightCharacter":"charset","location":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[193,194,195,196,197,198,199,200,201,202,203],"tindex":"acb898b2-27a3-11e6-b127-d9889153e3d3","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[204,205,78,79,206,80,207,208,209,210,81,82,83,84,85,211,86,87,11,88,89,90,91,92,93,212,94,95,96,97,98,100,101,102,103,104,213,12,214,105,106,215,216,107,108,217,218,109,110,111],"tindex":"acb898b3-27a3-11e6-b127-69f245862f10","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[162,163,164,165,10,219,87,11,88,89,90,91,92,93,94,95,96,220,221,222,223,100,224,102,167,104,225,214,226,168,106,227,109,110,228],"tindex":"acb898b4-27a3-11e6-b127-cbdc5fb08747","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb898b5-27a3-11e6-b127-599acf431254","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb8bfc6-27a3-11e6-b127-d18f5020f2b6","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"acb8bfc7-27a3-11e6-b127-d513f9aa846d","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb8bfc8-27a3-11e6-b127-6182eb6e4105","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","raw":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[72,73,74],"tindex":"acb8bfc9-27a3-11e6-b127-47aece8cbe79","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[41,42,44,229,14,16,19,20,22,23,47,48],"tindex":"acb8e6da-27a3-11e6-b127-27c443fc9095","series":0,"name":"checkReturn","transplant":{"toString":"if ((key.length()) > 1) {\n    char lastChar = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char last2Char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} ","position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb8e6db-27a3-11e6-b127-615408fb7712","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb8e6dc-27a3-11e6-b127-c36120b330d7","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone1.SIX_1","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb8e6dd-27a3-11e6-b127-fd1890904227","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[130,151,152],"tindex":"acb90dee-27a3-11e6-b127-c7808d7ef36e","series":0,"name":"checkReturn","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb90def-27a3-11e6-b127-a10496cabf21","series":0,"name":"checkReturn","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[0,1,77,2,3,4],"tindex":"acb90df0-27a3-11e6-b127-a3ae79f603b6","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb93501-27a3-11e6-b127-95e0592daeb7","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[230,0,1,231,232,2,3,4],"tindex":"acb93502-27a3-11e6-b127-e79554615d79","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[233,234],"tindex":"acb93503-27a3-11e6-b127-ed02aaa79437","series":0,"name":"checkReturn","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[204,205,78,79,206,80,207,208,209,210,81,162,163,164,165,82,235,236,237,83,238,239,240,241,242,243,244,245,246,84,85,10,211,86,219,87,11,88,89,90,91,92,93,212,94,95,96,220,97,221,98,222,223,100,101,224,102,167,103,104,225,213,12,214,226,168,105,106,227,247,248,215,216,249,250,107,251,252,253,108,217,254,255,256,257,258,259,260,261,262,218,109,110,228,111],"tindex":"acb93504-27a3-11e6-b127-bd0fbf85adc1","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[26,27],"tindex":"acb95c15-27a3-11e6-b127-cfcdb8ba1b74","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"acb95c16-27a3-11e6-b127-f9fc94e31450","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18,19,20,21,158,22,23,24,25],"tindex":"acb95c17-27a3-11e6-b127-7bf91a001f42","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"maxPhonemes","y":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb95c18-27a3-11e6-b127-1387b91e04e8","series":0,"name":"checkReturn","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"cachedString","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb98329-27a3-11e6-b127-af76238222a4","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[41,42,44,14,16,19,47],"tindex":"acb9832a-27a3-11e6-b127-1586a4d760b6","series":0,"name":"checkReturn","transplant":{"toString":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9832b-27a3-11e6-b127-15593b544a4d","series":0,"name":"checkReturn","transplant":{"toString":"if (c1 == c2) {\n    continue;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"java.lang.Character.MIN_VALUE","c2":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9832c-27a3-11e6-b127-ab5d8a437106","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[204,205,78,79,206,80,207,208,209,210,81,162,163,164,165,82,235,236,237,83,238,239,240,241,242,243,244,245,246,84,85,10,211,86,219,87,11,88,89,90,91,92,93,212,94,95,96,220,97,221,98,222,223,100,101,224,102,167,103,104,225,213,12,214,226,168,105,106,227,215,216,249,107,108,217,254,255,256,257,258,259,260,261,262,218,109,110,228,111],"tindex":"acb9832d-27a3-11e6-b127-576b343ff55c","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"len","name2Size":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"acb9aa3e-27a3-11e6-b127-c3822cea328a","series":0,"name":"checkReturn","transplant":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[78,79,80,81,82,83,84,85,86,87,11,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,12,105,106,107,108,109,110,111],"tindex":"acb9aa3f-27a3-11e6-b127-8162938bf55e","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.io.IOException","failures":[235,236,237,83,238,239,240,241,242,245,246,84,217,254,255,257,258,259,261,262,218],"tindex":"acb9aa40-27a3-11e6-b127-f3224e5adb72","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9aa41-27a3-11e6-b127-e555c97b3f4a","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"cachedString","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[0,1,77,232,2,3,4],"tindex":"acb9d152-27a3-11e6-b127-6bc4919b1806","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[230,301,277],"tindex":"acb9d153-27a3-11e6-b127-33e1a956142c","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"compareCode","name2Size":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9d154-27a3-11e6-b127-9d3f9e453fc3","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"c","to":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":0},{"exception":"java.lang.RuntimeException","failures":[130,151,152],"tindex":"acb9d155-27a3-11e6-b127-23cce0b8b7aa","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[41,42,43,44,13,14,16,17,18,19,20,22,23,25,48],"tindex":"acb9d156-27a3-11e6-b127-61b07df2d0db","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9f867-27a3-11e6-b127-cf351abdf239","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"compareCode","to":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9f868-27a3-11e6-b127-cd56baf2cf02","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"a","to":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9f869-27a3-11e6-b127-575a5ed7c5f4","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"charset","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acb9f86a-27a3-11e6-b127-f14922219b97","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[302,303],"tindex":"acb9f86b-27a3-11e6-b127-5f91d4def9dc","series":0,"name":"checkReturn","transplant":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[26,27],"tindex":"acba1f7c-27a3-11e6-b127-23a1a6c3b7f9","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba1f7d-27a3-11e6-b127-e9691037046e","series":0,"name":"checkReturn","transplant":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba1f7e-27a3-11e6-b127-eb06e0cc22a2","series":0,"name":"checkReturn","transplant":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba1f7f-27a3-11e6-b127-a9d98c739abd","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"a","to":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba1f80-27a3-11e6-b127-b982fe5a2e0e","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"el","minRating":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"el","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"el"},"type":"special","transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[30,170,304,305,306],"tindex":"acba4691-27a3-11e6-b127-b92e9f0e1583","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"b"},"type":"special","transplantationPoint":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba4692-27a3-11e6-b127-6bb5eae15d39","series":0,"name":"checkReturn","transplant":{"toString":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":0},{"exception":"java.lang.RuntimeException","failures":[26,27],"tindex":"acba4693-27a3-11e6-b127-313fa2b97605","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba4694-27a3-11e6-b127-c7fcced9c491","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba6da5-27a3-11e6-b127-516f44eab597","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"binaryData"},"type":"special","transplantationPoint":{"toString":"return binaryData","position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":-2},{"exception":"java.io.IOException","failures":[],"tindex":"acba6da6-27a3-11e6-b127-5973907e4fe7","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"readLen","len":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acba6da7-27a3-11e6-b127-6f22a3b7ae40","series":0,"name":"checkReturn","transplant":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"str","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"str","text":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"acba6da8-27a3-11e6-b127-b759a50a3b5c","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[112,113,114,115,116,117,118,119,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,307,144,145,146,147,148,149,150,151,152,153,154],"tindex":"acba6da9-27a3-11e6-b127-29204cc02919","series":0,"name":"checkReturn","transplant":{"toString":"if (input == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[41,42,43,44,13,14,16,17,18,45,46,19,20,22,23,25,47,48],"tindex":"acba94ba-27a3-11e6-b127-25a2b363fa38","series":0,"name":"checkReturn","transplant":{"toString":"if ((str.length()) == 0) {\n    return str;\n} ","position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[76,73,5],"tindex":"acba94bb-27a3-11e6-b127-19c5c9047036","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[308,309,310,311],"tindex":"acba94bc-27a3-11e6-b127-312b509d9c13","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"el"},"type":"special","transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[41,42,43,44,13,14,16,17,18,45,46,19,20,22,23,25,47,48],"tindex":"acba94bd-27a3-11e6-b127-9569b1221201","series":0,"name":"checkReturn","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"str","leftCharacter":"str","rightCharacter":"str","location":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"acbabbce-27a3-11e6-b127-4d9e6ed92982","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[263,312,313,314,269,271,315],"tindex":"acbabbcf-27a3-11e6-b127-13ff413619c8","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}