{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":11,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":284,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":91,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":214,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":169,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":97,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":260,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":258,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":259,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":215,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully":220,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":95,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":261,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":83,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":35,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":280,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":78,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":191,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":12,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":170,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":277,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":85,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully":223,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":249,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":285,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":122,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":149,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":103,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":270,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":272,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":184,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":271,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":183,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":57,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":58,"org.apache.commons.codec.language.NysiisTest.testCap":193,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":107,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":21,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":229,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":182,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":104,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":59,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":60,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":227,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":127,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":186,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":178,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":135,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":67,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":177,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":190,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":53,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":279,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":161,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing":240,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":210,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":168,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":113,"org.apache.commons.codec.language.SoundexTest.testB650":257,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":94,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":205,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully":225,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":140,"org.apache.commons.codec.language.SoundexTest.testNewInstance":264,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":108,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":89,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":100,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":152,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":283,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":138,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":115,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":217,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved":106,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":172,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":228,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":150,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":126,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":82,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":110,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":188,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":209,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":289,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":155,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":93,"org.apache.commons.codec.binary.Base64Test.testUUID":55,"org.apache.commons.codec.binary.Base64Test.testSingletons":66,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":17,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":68,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":136,"org.apache.commons.codec.binary.Base64Test.testPairs":54,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":79,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":265,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":292,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":213,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":294,"org.apache.commons.codec.language.NysiisTest.testBran":197,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":202,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":235,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":247,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":221,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":84,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":51,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":154,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":185,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":233,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":80,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":145,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":250,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":76,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":146,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":282,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":187,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":276,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":123,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":167,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":157,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":266,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":253,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":175,"org.apache.commons.codec.language.NysiisTest.testDad":194,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":130,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":56,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":230,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":219,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":119,"org.apache.commons.codec.language.NysiisTest.testDan":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":98,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":132,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":99,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":105,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":13,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":176,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":164,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":96,"org.apache.commons.codec.binary.HexTest.testCustomCharset":293,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":112,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":46,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":160,"org.apache.commons.codec.language.NysiisTest.testSnat":199,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":159,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":208,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":118,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":174,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":207,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":41,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":40,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":288,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":47,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":232,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":134,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":218,"org.apache.commons.codec.binary.Base64Test.testTriplets":52,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":156,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":179,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":29,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":27,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":30,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":236,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":128,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":181,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeNull":242,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":248,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":274,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":180,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":42,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":141,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":163,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":31,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":269,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":267,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":14,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":268,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLocaleIndependence":244,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":171,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":189,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":144,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":295,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":131,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":234,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":10,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":158,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":65,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":148,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":28,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":262,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":206,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":111,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":231,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":72,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":252,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":290,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":291,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":0,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":222,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":101,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":245,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":162,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":49,"org.apache.commons.codec.language.NysiisTest.testTranan":201,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":102,"org.apache.commons.codec.language.NysiisTest.testFal":196,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":226,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":273,"org.apache.commons.codec.language.NysiisTest.testSnad":198,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":192,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":166,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":203,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing":241,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":254,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":255,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":256,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":137,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":34,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":70,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":278,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing":239,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":142,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":212,"org.apache.commons.codec.binary.Base64Test.testBase64":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":39,"org.apache.commons.codec.language.Caverphone1Test.testEncodeNull":120,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":62,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":73,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":125,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty":243,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":88,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":124,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":151,"org.apache.commons.codec.binary.Base64Test.testCodec112":64,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":237,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":114,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":173,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":281,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":19,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":200,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":109,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":139,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":286,"org.apache.commons.codec.binary.Base64Test.testCodec68":147,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":263,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":275,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":251,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":7,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":129,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":25,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing":238,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":87,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":204,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":121,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":43,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":18,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":287,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":211,"org.apache.commons.codec.language.SoundexTest.testDifference":246,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":6,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":153,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":75,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":33,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":224,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":117,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":143,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":216,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":116},"transformations":[{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"5731cd96-27be-11e6-bfbb-77fec267d3ca","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"5731f4a7-27be-11e6-bfbb-7306c7e95929","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"57321bb8-27be-11e6-bfbb-edbe79453479","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"57321bb9-27be-11e6-bfbb-358e5399a9d6","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"lines"},"type":"special","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[45,46,47,48,49,50,51,52,53,54,55,20,56,57,58,59,60,21,61,62,63,64,65,66,67,23,68,69,70,71,26,72,73,74,75,76],"tindex":"57321bba-27be-11e6-bfbb-1936a135feb7","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"573242cb-27be-11e6-bfbb-09640b2bbeff","series":0,"name":"checkReturn","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"replacedName"},"type":"special","transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[27,28,29,30,31,32,33,34,35,38,39,40,41,42,44],"tindex":"573242cc-27be-11e6-bfbb-6949de691952","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[120],"tindex":"573269dd-27be-11e6-bfbb-ed97dc27d568","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"org.apache.commons.codec.language.Caverphone1.SIX_1","org.apache.commons.codec.language.Caverphone1.SIX_1":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[121,122,45,46,123,47,124,125,126,127,48,15,16,17,18,49,128,129,130,50,131,132,133,134,135,136,137,138,139,51,52,19,140,53,141,54,55,20,56,57,58,59,60,142,21,61,62,143,63,144,64,145,146,66,67,147,23,24,68,69,148,149,70,150,151,25,71,26,152,153,154,155,156,157,158,72,159,160,161,73,162,163,164,165,166,167,168,169,170,171,172,74,75,173,76],"tindex":"573290ee-27be-11e6-bfbb-eff27852425e","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"573290ef-27be-11e6-bfbb-2d23f73587d0","series":0,"name":"checkReturn","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"upperName","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[174],"tindex":"5732b800-27be-11e6-bfbb-03ae14d3b38e","series":0,"name":"checkReturn","transplant":{"toString":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"str","es2":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,175,109,110,111,112,113,114,115,116,117,118,119],"tindex":"5732b801-27be-11e6-bfbb-63e70b28234b","series":0,"name":"checkReturn","transplant":{"toString":"if (input == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[176,177,178,179],"tindex":"5732df12-27be-11e6-bfbb-8d02a4d8d56c","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"el"},"type":"special","transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5732df13-27be-11e6-bfbb-7f81e627c2fc","series":0,"name":"checkReturn","transplant":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[180,181],"tindex":"5732df14-27be-11e6-bfbb-7fefbf6c8cde","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57330625-27be-11e6-bfbb-1dac0a9031fb","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"compareCode","len":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[176,177,178,179],"tindex":"57330626-27be-11e6-bfbb-df65b61824ae","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[182,183,184,185,186,187,188,189,190,191,192],"tindex":"57332d37-27be-11e6-bfbb-19bb7ea5c83c","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"length","y":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[193,194,195,196,197,198,199,200,201,202,203],"tindex":"57332d38-27be-11e6-bfbb-eb94d9b7c69d","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44],"tindex":"57332d39-27be-11e6-bfbb-c935d69484eb","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:181","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} "},"variableMap":{"finalRules":"rules"},"type":"special","transplantationPoint":{"toString":"return rules","position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[204,205,206,207,208,209,210,211,212,213,214],"tindex":"5733544a-27be-11e6-bfbb-bff0cee0fac3","series":0,"name":"checkReturn","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5733544b-27be-11e6-bfbb-73cfff4ee187","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5733544c-27be-11e6-bfbb-b5286dc9d0d4","series":0,"name":"checkReturn","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.Caverphone1.SIX_1","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[27,28,29,30,31,32,33,34,35,38,39,40,41,42,44],"tindex":"57337b5d-27be-11e6-bfbb-33a4636caa34","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,5,6,9,10,11],"tindex":"57337b5e-27be-11e6-bfbb-d16354d9dc6e","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,9,10,11],"tindex":"5733a26f-27be-11e6-bfbb-572a36c5f15c","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,9,10,11],"tindex":"5733a270-27be-11e6-bfbb-03eff18ffc84","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[15,16,17,18,54,20,21,143,66,147,24,148,151],"tindex":"5733c981-27be-11e6-bfbb-87190788a4ce","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"5733c982-27be-11e6-bfbb-355a589bea8c","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5733c983-27be-11e6-bfbb-d11f005433a4","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"diff","to":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5733f094-27be-11e6-bfbb-091f90c8e96e","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[77,215,216,78,217,79,80,81,82,83,84,86,87,218,90,91,92,93,219,94,96,97,220,221,98,99,222,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,223,224,225,118,119],"tindex":"5733f095-27be-11e6-bfbb-a5fee3ade5ed","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"minRating","y":"minRating"},"type":"special","transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[226,227,228,229,230,231,232,233,234],"tindex":"5733f096-27be-11e6-bfbb-8db0be19b35a","series":0,"name":"checkReturn","transplant":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"573417a7-27be-11e6-bfbb-0b96f05b362a","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"digit","minRating":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"digit","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"digit"},"type":"special","transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"573417a8-27be-11e6-bfbb-6d564ec35f74","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"a","to":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"573417a9-27be-11e6-bfbb-a73afe14cbce","series":0,"name":"checkReturn","transplant":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[193,194,195,196,197,198,199,200,201,202,203],"tindex":"573417aa-27be-11e6-bfbb-3b17ce7e3515","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57343ebb-27be-11e6-bfbb-57c270fa383c","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"pArray","ascii":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[45,46,47,48,49,50,51,52,53,54,55,20,56,57,58,59,60,21,61,62,63,64,65,66,67,23,68,69,70,71,26,72,73,74,75,76],"tindex":"57343ebc-27be-11e6-bfbb-3f18948949fc","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57343ebd-27be-11e6-bfbb-dd0411a02393","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57343ebe-27be-11e6-bfbb-d981ac806b3f","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"i","len":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[1,2,9,10],"tindex":"573465cf-27be-11e6-bfbb-771d142ff298","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[180,181],"tindex":"573465d0-27be-11e6-bfbb-9da45315b795","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_ascii","ascii":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,9,10],"tindex":"573465d1-27be-11e6-bfbb-cf003b755fd4","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"573465d2-27be-11e6-bfbb-19dbe1977551","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[27,28,30,32,33,38,43],"tindex":"573465d3-27be-11e6-bfbb-335577f3c160","series":0,"name":"checkReturn","transplant":{"toString":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-1},{"exception":"java.io.IOException","failures":[128,129,130,50,131,132,133,134,135,136,137,138,139,51,162,163,164,165,166,167,168,169,170,171,172],"tindex":"57348ce4-27be-11e6-bfbb-d36447ac44f6","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"readLen","name2Size":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.io.IOException","failures":[128,129,130,50,131,132,133,134,135,136,137,138,139,51,162,163,164,165,166,167,168,169,170,171,172],"tindex":"57348ce5-27be-11e6-bfbb-071cbe9b3734","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57348ce6-27be-11e6-bfbb-ed8e297add54","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":0},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"5734b3f7-27be-11e6-bfbb-03d77024c484","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"maxCodeLen","name2Size":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[235,236,237],"tindex":"5734b3f8-27be-11e6-bfbb-25ffd4b031d8","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[180,181],"tindex":"5734b3f9-27be-11e6-bfbb-31ba50369f45","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[238,239,240,241,242,243,244],"tindex":"5734b3fa-27be-11e6-bfbb-21959aaf0b27","series":0,"name":"checkReturn","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"5734db0b-27be-11e6-bfbb-ff2d0fbba20f","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[48,49,50,51,20,21,22,23,70,71,26,72,73],"tindex":"5734db0c-27be-11e6-bfbb-db70c703f458","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"binaryData"},"type":"special","transplantationPoint":{"toString":"return binaryData","position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5734db0d-27be-11e6-bfbb-cff3e8fe21ec","series":0,"name":"checkReturn","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"org.apache.commons.codec.language.Caverphone2.TEN_1","leftCharacter":"org.apache.commons.codec.language.Caverphone2.TEN_1","rightCharacter":"org.apache.commons.codec.language.Caverphone2.TEN_1","location":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[245,246],"tindex":"5734db0e-27be-11e6-bfbb-21b35124cb13","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5734db0f-27be-11e6-bfbb-2db05f390ff6","series":0,"name":"checkReturn","transplant":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"variableMap":{"c1":"java.lang.Character.MIN_VALUE","c2":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[0,247,248],"tindex":"57350220-27be-11e6-bfbb-3ba248fb8b9b","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[174],"tindex":"57350221-27be-11e6-bfbb-3523cb316a77","series":0,"name":"checkReturn","transplant":{"toString":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"str","es2":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,5,9,10,11],"tindex":"57350222-27be-11e6-bfbb-331cbc79041d","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57350223-27be-11e6-bfbb-353ae5805f79","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57350224-27be-11e6-bfbb-c118926b5886","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57352935-27be-11e6-bfbb-d9bb64a61ef2","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[1,2,5,8,9,10,11],"tindex":"57352936-27be-11e6-bfbb-0744ddee3373","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57352937-27be-11e6-bfbb-8d92e6a10666","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57355048-27be-11e6-bfbb-47c1f6e78b73","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57355049-27be-11e6-bfbb-69dcf36d57f3","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"maxLength","len":"maxLength"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Soundex.this.maxLength","position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"5735504a-27be-11e6-bfbb-7d27fc784a9c","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[15,16,17,18,19,141,54,55,20,56,57,58,59,60,21,61,62,143,144,145,146,66,147,23,24,69,148,150,151,25,26,152,74,75,173],"tindex":"5735775b-27be-11e6-bfbb-0304413243ae","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[245,249,174,250,246,251],"tindex":"5735775c-27be-11e6-bfbb-d5f4478015eb","series":0,"name":"checkReturn","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735775d-27be-11e6-bfbb-4dc8f820c99d","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"replacedName"},"type":"special","transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735775e-27be-11e6-bfbb-210ccad4bb26","series":0,"name":"checkReturn","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[1,2,9,10],"tindex":"5735775f-27be-11e6-bfbb-c96bed33884c","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57359e70-27be-11e6-bfbb-57fea4e96951","series":0,"name":"checkReturn","transplant":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"57359e71-27be-11e6-bfbb-aff18094d821","series":0,"name":"checkReturn","transplant":{"toString":"if (string == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"replacedName"},"type":"special","transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[27,28,29,30,31,32,33,34,35,38,39,40,41,42,44],"tindex":"57359e72-27be-11e6-bfbb-8bea07aae4b8","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"i","name2Size":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,5,6,9,10,11],"tindex":"57359e73-27be-11e6-bfbb-0bc48d911b9a","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[248,252,253,254,255,256,257,258,259,260,261,262,263,246,264,265,266,267,268,269,270,271,272,273],"tindex":"57359e74-27be-11e6-bfbb-97b99dc89264","series":0,"name":"checkReturn","transplant":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735c585-27be-11e6-bfbb-0bacadc01324","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":0},{"exception":"java.lang.RuntimeException","failures":[274],"tindex":"5735c586-27be-11e6-bfbb-bd27e0783303","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735c587-27be-11e6-bfbb-bfc2e16e5c4b","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"el","to":"el"},"type":"special","transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735c588-27be-11e6-bfbb-8b1864b09d10","series":0,"name":"checkReturn","transplant":{"toString":"if ((str.length()) == 0) {\n    return str;\n} ","position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735c589-27be-11e6-bfbb-591845444604","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[245,249],"tindex":"5735ec9a-27be-11e6-bfbb-29aca63a319d","series":0,"name":"checkReturn","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"5735ec9b-27be-11e6-bfbb-8b80afe07d29","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288],"tindex":"5735ec9c-27be-11e6-bfbb-d31a3be7d8a7","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[235,236,237],"tindex":"5735ec9d-27be-11e6-bfbb-d1a3bd6c2513","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[246,251],"tindex":"5735ec9e-27be-11e6-bfbb-f33b891f625d","series":0,"name":"checkReturn","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5735ec9f-27be-11e6-bfbb-67aec3e83049","series":0,"name":"checkReturn","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"573613b0-27be-11e6-bfbb-bf55838a81d6","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"573613b1-27be-11e6-bfbb-d724b7b9d69f","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[238,239,240,241,242,243,244],"tindex":"573613b2-27be-11e6-bfbb-df8b629c6e7d","series":0,"name":"checkReturn","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","l":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[31,32,289,33,34,35,38,39,290,291,40,41,292,42],"tindex":"573613b3-27be-11e6-bfbb-f3ea22c3d1aa","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,5,9,10,11],"tindex":"57363ac4-27be-11e6-bfbb-212a267588c7","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[293,294,295,19,55,70],"tindex":"57363ac5-27be-11e6-bfbb-c9b50c73ebe8","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"digit"},"type":"special","transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[121,122,45,46,123,47,124,125,126,127,48,15,16,17,18,49,128,129,130,50,131,132,133,134,135,136,137,138,139,51,52,19,140,53,141,54,55,20,56,57,58,59,60,142,21,61,62,143,63,144,64,145,146,66,67,147,23,24,68,69,148,149,70,150,151,25,71,26,152,153,154,155,156,157,158,72,159,160,161,73,162,163,164,165,166,167,168,169,170,171,172,74,75,173,76],"tindex":"57363ac6-27be-11e6-bfbb-6f4553f32eb3","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","name2Size":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57363ac7-27be-11e6-bfbb-15e8c964d218","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","org.apache.commons.codec.language.Caverphone1.SIX_1":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"57363ac8-27be-11e6-bfbb-1b4fe12e0ede","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"573661d9-27be-11e6-bfbb-f12287d8f6ab","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"maxCodeLen","name2Size":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}