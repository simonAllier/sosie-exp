{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":7,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":215,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":191,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":221,"org.apache.commons.codec.language.Caverphone1Test.testEncodeEmpty":118,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":219,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":209,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":106,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":204,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":256,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":79,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":12,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":186,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":211,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":48,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":150,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":20,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":167,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":173,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":227,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":246,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":245,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":30,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":31,"org.apache.commons.codec.language.NysiisTest.testCap":132,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":214,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":230,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":34,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":244,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":228,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":32,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":33,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":199,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":185,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":248,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":261,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":70,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":82,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":41,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":4,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":252,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":260,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":85,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":14,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":183,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":237,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":95,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":218,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":157,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":212,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":231,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":198,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":5,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":171,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":224,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":239,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":81,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":168,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":62,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":184,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":208,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":197,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":234,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":128,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":250,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":155,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":217,"org.apache.commons.codec.binary.Base64Test.testUUID":27,"org.apache.commons.codec.binary.Base64Test.testSingletons":40,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":188,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":177,"org.apache.commons.codec.binary.Base64Test.testPairs":26,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":187,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":205,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":200,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":131,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":126,"org.apache.commons.codec.language.NysiisTest.testBran":136,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":141,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":194,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":210,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":122,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":52,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":154,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":247,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":206,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":162,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":151,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":17,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":59,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":163,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":11,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":249,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":174,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":77,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":179,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":190,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":232,"org.apache.commons.codec.language.NysiisTest.testDad":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":65,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":84,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":243,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":145,"org.apache.commons.codec.language.NysiisTest.testDan":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":222,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":97,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":68,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":67,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":223,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":229,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":143,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":257,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":75,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":90,"org.apache.commons.codec.binary.HexTest.testCustomCharset":125,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":220,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":236,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":49,"org.apache.commons.codec.language.NysiisTest.testSnat":138,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":182,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":181,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":149,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":242,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":86,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":110,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":109,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":50,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":69,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":51,"org.apache.commons.codec.binary.Base64Test.testTriplets":24,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":156,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":144,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":114,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":112,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":115,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":61,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":63,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":91,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":116,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":35,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":46,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":195,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":196,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":2,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":88,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":111,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":158,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":102,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":100,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":258,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":201,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":83,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":93,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":80,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":251,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":127,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":161,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":66,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":6,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":180,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":39,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":166,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":113,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":235,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":130,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":47,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":148,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":193,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":207,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":202,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":203,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":225,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":73,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":56,"org.apache.commons.codec.language.NysiisTest.testTranan":140,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":226,"org.apache.commons.codec.language.NysiisTest.testFal":135,"org.apache.commons.codec.language.NysiisTest.testSnad":137,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":99,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":253,"org.apache.commons.codec.language.MetaphoneTest.testTCH":146,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":76,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":142,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":165,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":147,"org.apache.commons.codec.binary.HexTest.testDencodeEmpty":124,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":178,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":13,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":105,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":159,"org.apache.commons.codec.binary.Base64Test.testBase64":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":108,"org.apache.commons.codec.language.Caverphone1Test.testEncodeNull":117,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":9,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":36,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":54,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":176,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":259,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":120,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":119,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":169,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":175,"org.apache.commons.codec.binary.Base64Test.testCodec112":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":103,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":238,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":16,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":192,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":123,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":139,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":233,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":72,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":21,"org.apache.commons.codec.binary.Base64Test.testCodec68":164,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":10,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":152,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":64,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":255,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":170,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":94,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":213,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":172,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":121,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":189,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":101,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":42,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":22,"org.apache.commons.codec.language.SoundexTest.testDifference":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":254,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":153,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":104,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":216,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":160,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":241,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":240},"transformations":[{"exception":"java.lang.RuntimeException","failures":[0,1],"tindex":"12cbc628-279a-11e6-a60d-f7c0c79915e7","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cc1449-279a-11e6-a60d-7dd88f464e35","series":0,"name":"checkReturn","transplant":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"variableMap":{"c1":"mappedChar","c2":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-2},{"exception":"java.io.IOException","failures":[],"tindex":"12cc144a-279a-11e6-a60d-875d929e81c2","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"org.apache.commons.codec.binary.BaseNCodec.EOF","minRating":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[2,3],"tindex":"12cc626b-279a-11e6-a60d-c53160a14065","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cc626c-279a-11e6-a60d-49e50a1f0d7c","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[4],"tindex":"12cc897d-279a-11e6-a60d-1d83154ec2f5","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1],"tindex":"12cc897e-279a-11e6-a60d-2129c2186530","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ccb08f-279a-11e6-a60d-05e7323948cb","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ccb090-279a-11e6-a60d-2bb3c10df10a","series":0,"name":"checkReturn","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"exception":"java.lang.RuntimeException","failures":[5,6,7,8,9],"tindex":"12ccb091-279a-11e6-a60d-8fc5e3de114d","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ccd7a2-279a-11e6-a60d-c147e7760046","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ccd7a3-279a-11e6-a60d-09c4a65093ad","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ccfeb4-279a-11e6-a60d-110aba269cf2","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"12ccfeb5-279a-11e6-a60d-254137efbb23","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ccfeb6-279a-11e6-a60d-fb1b25443e26","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"a","minRating":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"a","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cd4cd7-279a-11e6-a60d-133cb31aa54f","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"12cd4cd8-279a-11e6-a60d-2f47bccff20e","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[60,5,6,7,8,9],"tindex":"12cd73e9-279a-11e6-a60d-bd36a84609dd","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[4,61,62],"tindex":"12cd73ea-279a-11e6-a60d-db3b5307f1f9","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_raw","ascii":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cd73eb-279a-11e6-a60d-edd79118b961","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cd9afc-279a-11e6-a60d-df001826cfa2","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[5,6,7,8,9],"tindex":"12cd9afd-279a-11e6-a60d-81d00c81c8f1","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cdc20e-279a-11e6-a60d-c5568362f4ae","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cdc20f-279a-11e6-a60d-6fa1f0c6cfc4","series":0,"name":"checkReturn","transplant":{"toString":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"java.lang.Character.MIN_VALUE","prev":"java.lang.Character.MIN_VALUE","curr":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cdc210-279a-11e6-a60d-8b220d7c2987","series":0,"name":"checkReturn","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"str","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cde921-279a-11e6-a60d-67e0d16164c2","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"exception":"java.io.IOException","failures":[63,64,65,51,66,67,68,69,70,71,72,52,73,74,75,76,77,78,79,80,81],"tindex":"12cde922-279a-11e6-a60d-6f33815c8d18","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"12ce1033-279a-11e6-a60d-03ebdf932b84","series":0,"name":"checkReturn","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[30,31],"tindex":"12ce1034-279a-11e6-a60d-ef796c75770c","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"resizedBytes"},"type":"special","transplantationPoint":{"toString":"return resizedBytes","position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"12ce3745-279a-11e6-a60d-f1b328909d90","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ce3746-279a-11e6-a60d-f7931c040dee","series":0,"name":"checkReturn","transplant":{"toString":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"variableMap":{"mappedChar":"mappedChar","preHWChar":"mappedChar","firstCode":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[5,6,8,9],"tindex":"12ce3747-279a-11e6-a60d-6dcb3f2addbe","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ce3748-279a-11e6-a60d-7b33145c431d","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[117,118],"tindex":"12ce5e59-279a-11e6-a60d-65bf1fc65eee","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.Caverphone1.SIX_1","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ce5e5a-279a-11e6-a60d-5f5eb8c6d2db","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[60,5,6,7,8,9],"tindex":"12ce5e5b-279a-11e6-a60d-a38ef321db19","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ce856c-279a-11e6-a60d-65fc3098c5d9","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"12ce856d-279a-11e6-a60d-bf66bc3f5c67","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"c","y":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"12ce856e-279a-11e6-a60d-5dbcd5ce7f0e","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,119,120,107,108,109,110,111,121,122,112,113,114,115],"tindex":"12ce856f-279a-11e6-a60d-83a39f747df1","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:181","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} "},"variableMap":{"finalRules":"lines"},"type":"special","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,119,120,107,108,109,110,111,121,122,112,113,114,115],"tindex":"12ce8570-279a-11e6-a60d-83a8b6d14f2d","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"lines"},"type":"special","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[123,27,45,124,125,126,127],"tindex":"12ceac81-279a-11e6-a60d-3bba3c88d103","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[102,103,128,104,105,106,107,108,129,130,109,110,131,111],"tindex":"12ceac82-279a-11e6-a60d-633462bc21be","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"maxPhonemes","y":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ceac83-279a-11e6-a60d-5de4acf528ac","series":0,"name":"checkReturn","transplant":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ceac84-279a-11e6-a60d-4300d5de193c","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[132,133,134,135,136,137,138,139,140,141,142],"tindex":"12ced395-279a-11e6-a60d-5d4dba34ba9f","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ced396-279a-11e6-a60d-f78c02cccd2b","series":0,"name":"checkReturn","transplant":{"toString":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"variableMap":{"prev":"java.lang.Character.MIN_VALUE","curr":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12ced397-279a-11e6-a60d-11531eee4920","series":0,"name":"checkReturn","transplant":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cefaa8-279a-11e6-a60d-c19733bce837","series":0,"name":"checkReturn","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,119,120,107,108,109,110,111,121,122,112,113,114,115],"tindex":"12cefaa9-279a-11e6-a60d-dbea83041418","series":0,"name":"checkReturn","transplant":{"toString":"if (string == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"12cefaaa-279a-11e6-a60d-19590936356e","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[143,144],"tindex":"12cefaab-279a-11e6-a60d-af93849e9209","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[5,6,8,9],"tindex":"12cf21bc-279a-11e6-a60d-4d8039a9516f","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[10,145,146,147,16,18,148],"tindex":"12cf21bd-279a-11e6-a60d-c10473e45cbb","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[149,0,150,151,1,152],"tindex":"12cf21be-279a-11e6-a60d-7f1d5eba3202","series":0,"name":"checkReturn","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[153,154,155,156,24,123,157,25,158,26,27,28,29,30,31,32,33,159,34,35,36,160,37,161,38,162,163,40,41,164,42,165,43,44,166,167,45,168,169,170,46,47,171,172,173,48,49,174,50,175,176,63,64,65,51,66,67,68,69,70,177,178,71,72,52,179,180,53,181,182,183,54,184,185,55,186,187,188,189,56,73,74,75,190,76,77,78,191,79,80,81,57,58,192,59],"tindex":"12cf21bf-279a-11e6-a60d-2bac4df58635","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","y":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[5,6,7,8,9],"tindex":"12cf48d0-279a-11e6-a60d-f5c57b0694b1","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[123,27,45,124,125,126,127],"tindex":"12cf48d1-279a-11e6-a60d-53bb0292b39d","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,119,120,107,108,109,110,111,121,122,112,113,114,115],"tindex":"12cf48d2-279a-11e6-a60d-2d625ea8aff5","series":0,"name":"checkReturn","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[5,6,7,8,9],"tindex":"12cf48d3-279a-11e6-a60d-974a40211a97","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[193,194,195],"tindex":"12cf6fe4-279a-11e6-a60d-231cdce6f512","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"compareCode","name2Size":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cf6fe5-279a-11e6-a60d-9f352d9694e7","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"binaryData"},"type":"special","transplantationPoint":{"toString":"return binaryData","position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[102,103,104,105,106,119,120,107,108,109,110,111,121,122,112,113,114,115],"tindex":"12cf6fe6-279a-11e6-a60d-6d508d99761d","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cf6fe7-279a-11e6-a60d-d37cf8d3f157","series":0,"name":"checkReturn","transplant":{"toString":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"variableMap":{"prev":"java.lang.Character.MIN_VALUE","curr":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cf96f8-279a-11e6-a60d-156c26674f29","series":0,"name":"checkReturn","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"exception":"java.io.IOException","failures":[],"tindex":"12cf96f9-279a-11e6-a60d-f3885b51de0b","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"org.apache.commons.codec.binary.BaseNCodec.EOF","to":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[132,133,134,135,136,137,138,139,140,141,142],"tindex":"12cf96fa-279a-11e6-a60d-39ab32f1af55","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cf96fb-279a-11e6-a60d-7d30ffd1d175","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"replacedName","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"replacedName"},"type":"special","transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cf96fc-279a-11e6-a60d-a1eee6975b5b","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cfbe0d-279a-11e6-a60d-83b5d085a50b","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"value","to":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cfbe0e-279a-11e6-a60d-9f53f8b20341","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","ascii":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"exception":"java.lang.RuntimeException","failures":[196],"tindex":"12cfbe0f-279a-11e6-a60d-03a3a9016c51","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[193,197,198,5,6,7,8,9],"tindex":"12cfbe10-279a-11e6-a60d-5532e787ef40","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[60,5,6,7,8,9],"tindex":"12cfbe11-279a-11e6-a60d-03b35c8c3a70","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[196],"tindex":"12cfe522-279a-11e6-a60d-c713ba6ce436","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cfe523-279a-11e6-a60d-cf75d8ade5e9","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"name","org.apache.commons.codec.language.Caverphone1.SIX_1":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12cfe524-279a-11e6-a60d-65cb5e7ac823","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[60,198,5,6,7,8,9],"tindex":"12cfe525-279a-11e6-a60d-8ddc57c3e90f","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,150],"tindex":"12d00c36-279a-11e6-a60d-5ff99125cf02","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d00c37-279a-11e6-a60d-57e7cb386065","series":0,"name":"checkReturn","transplant":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"12d00c38-279a-11e6-a60d-dd7c2686b0ff","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[193,197,198,5,6,7,8,9],"tindex":"12d00c39-279a-11e6-a60d-1bb0abfda71d","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d00c3a-279a-11e6-a60d-9f73e79bef79","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d0334b-279a-11e6-a60d-d790bbe4dd2d","series":0,"name":"checkReturn","transplant":{"toString":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"variableMap":{"name":"charset","firstLetter":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[1,152],"tindex":"12d0334c-279a-11e6-a60d-8b96eb604752","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"str","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[146,147,199,17,200,201,202],"tindex":"12d0334d-279a-11e6-a60d-01d940ee186f","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"12d0334e-279a-11e6-a60d-41b25903b8e2","series":0,"name":"checkReturn","transplant":{"toString":"if (string == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d0334f-279a-11e6-a60d-69f04f5925fc","series":0,"name":"checkReturn","transplant":{"toString":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.RULES)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.RULES)));\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"ruleType","ruleType":"ruleType"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.ruleType","position":"org.apache.commons.codec.language.bm.PhoneticEngine:508","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[244,245,246,247,248,249,250,251,252,253],"tindex":"12d05a60-279a-11e6-a60d-5b46ee891774","series":0,"name":"checkReturn","transplant":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d05a61-279a-11e6-a60d-f1361f09e14b","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","raw":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[196],"tindex":"12d05a62-279a-11e6-a60d-7b344eb25cdf","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[193,197,60,254,255,198,5,6,7,256,257,258,8,9,259],"tindex":"12d05a63-279a-11e6-a60d-cda35748adef","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[60,5,6,7,8,9],"tindex":"12d05a64-279a-11e6-a60d-e5af6f3ebd70","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d08175-279a-11e6-a60d-df1650d35259","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"maxCodeLen","to":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Metaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[5,6,7,8,9],"tindex":"12d08176-279a-11e6-a60d-6906fcd62419","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d08177-279a-11e6-a60d-510f5ec572b8","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"result","ascii":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[60,198,5,6,7,8,9],"tindex":"12d08178-279a-11e6-a60d-d1c90e07c013","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"12d08179-279a-11e6-a60d-4b3f52e7206f","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[143,260,261,144],"tindex":"12d0a88a-279a-11e6-a60d-9d49c20ef56b","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[26,28,34,160,40,164,165,166,169,186,187,188,189],"tindex":"12d0a88b-279a-11e6-a60d-49f683e83f42","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}