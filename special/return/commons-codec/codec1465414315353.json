{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":3,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":42,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":27,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":31,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":13,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":49,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":12,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":19,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":29,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":39,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":17,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":44,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":41,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":15,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay":50,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":40,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":16,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":21,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":18,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":36,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":11,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":34,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":47,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":48,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":43,"org.apache.commons.codec.language.MetaphoneTest.testWhy":24,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":1,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":46,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":37,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":22,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.language.MetaphoneTest.testTCH":23},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:115","type":"CtBinaryOperatorImpl","sourcecode":"c > 0"},"failures":[0,1,2,3,4,5],"tindex":"a8af344c-2daf-11e6-95ab-d5c7391f80d1","series":0,"name":"checkReturn","variableMap":{"c":"index"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"a8afd08d-2daf-11e6-95ab-35148091ec36","series":0,"name":"checkReturn","variableMap":{"key":"data"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return data","position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)"},"failures":[],"tindex":"a8aff79e-2daf-11e6-95ab-9902568a9245","series":0,"name":"checkReturn","variableMap":{"raw":"pArray"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Lang:143","type":"CtVariableReadImpl","sourcecode":"inExtendedComment"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"a8aff79f-2daf-11e6-95ab-4993250ab29f","series":0,"name":"checkReturn","variableMap":{"inExtendedComment":"found"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:135","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"a8b01eb0-2daf-11e6-95ab-1b09537fd445","series":0,"name":"checkReturn","variableMap":{"len":"maxCodeLen"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.Metaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Rule:505","type":"CtUnaryOperatorImpl","sourcecode":"!boxes"},"failures":[23,27,28,36,38,40,48],"tindex":"a8b01eb1-2daf-11e6-95ab-e5199623782d","series":0,"name":"checkReturn","variableMap":{"boxes":"matches"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Rule$Phoneme$1:93","type":"CtBinaryOperatorImpl","sourcecode":"c != 0"},"failures":[1,2,3,4,5],"tindex":"a8b045c2-2daf-11e6-95ab-3df03ededc7b","series":0,"name":"checkReturn","variableMap":{"c":"index"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Rule$Phoneme$1:93","type":"CtBinaryOperatorImpl","sourcecode":"c != 0"},"failures":[0,1,2,3,4,5],"tindex":"a8b045c3-2daf-11e6-95ab-855a948662ed","series":0,"name":"checkReturn","variableMap":{"c":"index"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","condition":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)"},"failures":[],"tindex":"a8b06cd4-2daf-11e6-95ab-a95a7057f05f","series":0,"name":"checkReturn","variableMap":{"raw":"out"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:261","type":"CtInvocationImpl","sourcecode":"line.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END)"},"failures":[],"tindex":"a8b06cd5-2daf-11e6-95ab-4537a44fa0b7","series":0,"name":"checkReturn","variableMap":{"line":"charset","org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END":"charset"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Languages$SomeLanguages:116","type":"CtBinaryOperatorImpl","sourcecode":"other == (org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES)"},"failures":[],"tindex":"a8b17e46-2daf-11e6-95ab-2d2f2b2a8350","series":0,"name":"checkReturn","variableMap":{"other":"other","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"other"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return other","position":"org.apache.commons.codec.language.bm.Languages:274","type":"CtReturnImpl","sourcecode":"return other"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":11,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}