{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":3,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":143,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":164,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":255,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":261,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":288,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":241,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully":262,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":249,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":124,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":139,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":243,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":90,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":136,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":28,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":109,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully":282,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":184,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":144,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":72,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":108,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":176,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":270,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":11,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":10,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":53,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":54,"org.apache.commons.codec.language.NysiisTest.testCap":185,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":254,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":273,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":22,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":271,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":55,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":56,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":181,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":13,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":79,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":167,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":101,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":215,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":67,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":17,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":166,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":213,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":218,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":48,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":138,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":160,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":279,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":228,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":259,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":155,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully":284,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":47,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":173,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":251,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":274,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":1,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":267,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":142,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":104,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":174,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":281,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":244,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":92,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":74,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":78,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":169,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":248,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":7,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":229,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":276,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":159,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":172,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":257,"org.apache.commons.codec.binary.Base64Test.testUUID":51,"org.apache.commons.codec.binary.Base64Test.testSingletons":66,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":171,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":30,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":69,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":102,"org.apache.commons.codec.binary.Base64Test.testPairs":50,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero":197,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":290,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":245,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":130,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":163,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":238,"org.apache.commons.codec.language.NysiisTest.testBran":189,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":194,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":211,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":263,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":250,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":153,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":106,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":43,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":12,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":225,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":246,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":64,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":196,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":65,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":118,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":141,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":14,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":135,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":111,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":87,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":35,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":85,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":220,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":125,"org.apache.commons.codec.language.NysiisTest.testDad":186,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":95,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":217,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":258,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":286,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":206,"org.apache.commons.codec.language.NysiisTest.testDan":187,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":264,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":230,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":99,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":98,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":222,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":265,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":272,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":165,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":84,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":223,"org.apache.commons.codec.binary.HexTest.testCustomCharset":237,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":260,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":278,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":110,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":39,"org.apache.commons.codec.language.NysiisTest.testSnat":191,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":158,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":289,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":157,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":210,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":285,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":129,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":219,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":231,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":128,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":147,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":112,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":100,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":203,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":253,"org.apache.commons.codec.binary.Base64Test.testTriplets":46,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":45,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":168,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":151,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":198,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":149,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":152,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":214,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":93,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":133,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":170,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":224,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":58,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":202,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":212,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":148,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":132,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":131,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":221,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":83,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":119,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":233,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":216,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":226,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":91,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":16,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":175,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":62,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":239,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":97,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":183,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":36,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":71,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":235,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":150,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":156,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":277,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":182,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":127,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":201,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":6,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":27,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":209,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":247,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":266,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":240,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":268,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":82,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":81,"org.apache.commons.codec.language.NysiisTest.testTranan":193,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":269,"org.apache.commons.codec.language.NysiisTest.testFal":188,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":180,"org.apache.commons.codec.language.NysiisTest.testSnad":190,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":19,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":232,"org.apache.commons.codec.language.MetaphoneTest.testTCH":207,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":86,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":195,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":25,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":208,"org.apache.commons.codec.binary.HexTest.testDencodeEmpty":236,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":103,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":73,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":123,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":137,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":162,"org.apache.commons.codec.binary.Base64Test.testBase64":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":126,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":41,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":59,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":114,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":200,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":199,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":204,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":177,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":75,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":113,"org.apache.commons.codec.binary.Base64Test.testCodec112":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":120,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":280,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":117,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":140,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":20,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":192,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":275,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":105,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":145,"org.apache.commons.codec.binary.Base64Test.testCodec68":68,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":134,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":33,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":94,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":26,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":227,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":115,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":178,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":252,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":154,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":205,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":31,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":234,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":24,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":146,"org.apache.commons.codec.language.SoundexTest.testDifference":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":161,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":179,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":287,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":291,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":122,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":283,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":256,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":242,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":21},"transformations":[{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5],"tindex":"8ee77db4-2c6a-11e6-8e8e-5d971b9f2263","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,1,2,3,4,5],"tindex":"8ee7a4c5-2c6a-11e6-8e8e-f761ed027637","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"8ee7cbd6-2c6a-11e6-8e8e-4545b2945266","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5],"tindex":"8ee7cbd7-2c6a-11e6-8e8e-ede903f4ec90","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,4,5],"tindex":"8ee7f2e8-2c6a-11e6-8e8e-f19fd2b7185f","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"8ee7f2e9-2c6a-11e6-8e8e-f56834dcd64d","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[32,33],"tindex":"8ee92b6a-2c6a-11e6-8e8e-33e7aa32590c","series":0,"name":"checkReturn","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[34,32],"tindex":"8ee92b6b-2c6a-11e6-8e8e-cd1fa10128ab","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8ee92b6c-2c6a-11e6-8e8e-9b0dc08d118f","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"8ee92b6d-2c6a-11e6-8e8e-8f39b13d978f","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8ee9527e-2c6a-11e6-8e8e-33fd4ed23cdf","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"8ee9527f-2c6a-11e6-8e8e-fbed5ef5a27e","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[35,36,37,38,39,40,41,42,43,44,45,46,20,47,48,49,50,51,21,52,53,54,55,56,57,22,58,59,60,61,62,63,64,65,66,67,68,24,25,69,70,71,72,73,74,75,26,76,27,77,78,79,80,28,29,30,31,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"8ee95280-2c6a-11e6-8e8e-d96f0f964ba0","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"8ee97991-2c6a-11e6-8e8e-35dc95a45764","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"concat"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.concat","position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"8ee97992-2c6a-11e6-8e8e-f791b7387642","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.io.IOException","failures":[],"tindex":"8ee97993-2c6a-11e6-8e8e-4bfce708c757","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"org.apache.commons.codec.binary.BaseNCodec.EOF","y":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[132,133],"tindex":"8ee97994-2c6a-11e6-8e8e-1158edc24ee7","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[34,32],"tindex":"8ee9a0a5-2c6a-11e6-8e8e-954d8b02d9a0","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"8ee9a0a6-2c6a-11e6-8e8e-e7a6b09123ba","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[148],"tindex":"8ee9a0a7-2c6a-11e6-8e8e-a1167a5a684e","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"8ee9a0a8-2c6a-11e6-8e8e-852c967c5322","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"i","minRating":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"i"},"type":"special","transplantationPoint":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,119,120,122,123,124,125,126,128,129,131,153],"tindex":"8ee9c7b9-2c6a-11e6-8e8e-6d08b2e165a7","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,4,5],"tindex":"8ee9c7ba-2c6a-11e6-8e8e-7f79261e5989","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,4,5],"tindex":"8ee9c7bb-2c6a-11e6-8e8e-cfd42ad294b9","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[154,155,156,157,158,159,160,161,162,163,164],"tindex":"8ee9eecc-2c6a-11e6-8e8e-1b313eb22cad","series":0,"name":"checkReturn","transplant":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[165,166,167,168],"tindex":"8ee9eecd-2c6a-11e6-8e8e-a3a70ec6dbb4","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"a","y":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[169],"tindex":"8eeb274e-2c6a-11e6-8e8e-31e4777b7c25","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeb274f-2c6a-11e6-8e8e-9906e624ce07","series":0,"name":"checkReturn","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[9,10,11,12,13,14,15,16,17,19],"tindex":"8eeb4e60-2c6a-11e6-8e8e-1f4ad1e6023c","series":0,"name":"checkReturn","transplant":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,170,119,120,122,123,124,125,126,128,129,131],"tindex":"8eeb4e61-2c6a-11e6-8e8e-ffd049c30a93","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"c","name2Size":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"8eeb4e62-2c6a-11e6-8e8e-6bd46a17cf48","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"special","transplantationPoint":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeb4e63-2c6a-11e6-8e8e-bf30a6931bd8","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"exception":"java.lang.RuntimeException","failures":[34,184],"tindex":"8eeb7574-2c6a-11e6-8e8e-491e08296f2f","series":0,"name":"checkReturn","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"str","l":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"8eeb7575-2c6a-11e6-8e8e-f5036abcb45c","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeb7576-2c6a-11e6-8e8e-a3363c440dae","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"charset","org.apache.commons.codec.language.Caverphone1.SIX_1":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[1,2,4,5],"tindex":"8eeb7577-2c6a-11e6-8e8e-a9af996b4b7a","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[32,33],"tindex":"8eeb9c88-2c6a-11e6-8e8e-0fe63b80d63d","series":0,"name":"checkReturn","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5],"tindex":"8eeb9c89-2c6a-11e6-8e8e-1543d54af222","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,1,2,3,4,5],"tindex":"8eeb9c8a-2c6a-11e6-8e8e-29304eaa9ea5","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeb9c8b-2c6a-11e6-8e8e-213c99feea30","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"str","salt":"str","prefix":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,119,120,122,123,124,125,126,128,129,131],"tindex":"8eeb9c8c-2c6a-11e6-8e8e-b137b4d9b24b","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[185,186,187,188,189,190,191,192,193,194,195],"tindex":"8eebc39d-2c6a-11e6-8e8e-4769ef3bcd66","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eebc39e-2c6a-11e6-8e8e-1dbd4bcf51cb","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eebc39f-2c6a-11e6-8e8e-65fac3c64896","series":0,"name":"checkReturn","transplant":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eebc3a0-2c6a-11e6-8e8e-e33f41ad4f52","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[196],"tindex":"8eebeab1-2c6a-11e6-8e8e-f7d536a202a1","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,170,197,119,120,198,121,122,123,124,199,200,125,126,127,201,128,129,130,131,202,203,204,205,153],"tindex":"8eebeab2-2c6a-11e6-8e8e-6d05ea8ec1bf","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,3,4,5],"tindex":"8eebeab3-2c6a-11e6-8e8e-a17d3b36a3da","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"8eebeab4-2c6a-11e6-8e8e-c54ef93d2124","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"out","ascii":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eebeab5-2c6a-11e6-8e8e-138de133c73f","series":0,"name":"checkReturn","transplant":{"toString":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","name2":"str","name1":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[165,166,167,168],"tindex":"8eec11c6-2c6a-11e6-8e8e-8d5dfe91c194","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"value","y":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eec11c7-2c6a-11e6-8e8e-3df0b549c9e7","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eec11c8-2c6a-11e6-8e8e-5b2812091868","series":0,"name":"checkReturn","transplant":{"toString":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} ","position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[1,2,4,5],"tindex":"8eec11c9-2c6a-11e6-8e8e-4d6a65506fb9","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,4,5],"tindex":"8eec38da-2c6a-11e6-8e8e-ffa0596ee243","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5],"tindex":"8eec38db-2c6a-11e6-8e8e-4315f4d2ee8a","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eec38dc-2c6a-11e6-8e8e-99bb1392e986","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eec38dd-2c6a-11e6-8e8e-e1c71921c5aa","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"maxCodeLen","minRating":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"maxCodeLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eec5fee-2c6a-11e6-8e8e-d51a1b3a3a7d","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5],"tindex":"8eec5fef-2c6a-11e6-8e8e-89177f26f0d5","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,119,120,122,123,124,125,126,128,129,131,153],"tindex":"8eed2340-2c6a-11e6-8e8e-873a866e867a","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eed4a51-2c6a-11e6-8e8e-3f941ca4f48e","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"pattern","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"pattern"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.pattern","position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[134,206,207,208,140,142,209],"tindex":"8eed4a52-2c6a-11e6-8e8e-3f3132057ef1","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eed4a53-2c6a-11e6-8e8e-cf0284ec4268","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eedbf84-2c6a-11e6-8e8e-6f1cd6b3bc11","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"maxLength","name2Size":"maxLength"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Soundex.this.maxLength","position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eede695-2c6a-11e6-8e8e-2f8d888976d2","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[185,186,187,188,189,190,191,192,193,194,195],"tindex":"8eede696-2c6a-11e6-8e8e-f9a4d614a69c","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eee82d7-2c6a-11e6-8e8e-4de0c20296b8","series":0,"name":"checkReturn","transplant":{"toString":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} ","position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[210],"tindex":"8eeea9e8-2c6a-11e6-8e8e-8b21d94294a3","series":0,"name":"checkReturn","transplant":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,211,212],"tindex":"8eeea9e9-2c6a-11e6-8e8e-417bf8748930","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"compareCode","name2Size":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeea9ea-2c6a-11e6-8e8e-19f160eb0470","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buf","ascii":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[6],"tindex":"8eeed0fb-2c6a-11e6-8e8e-99dd02651b94","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"compareCode","y":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[1,2,3,4,5],"tindex":"8eeed0fc-2c6a-11e6-8e8e-fdcade0eae8e","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[213,214,169],"tindex":"8eeed0fd-2c6a-11e6-8e8e-35843421aec9","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[132,133],"tindex":"8eeed0fe-2c6a-11e6-8e8e-1b51f7e13ec0","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"8eeed0ff-2c6a-11e6-8e8e-69ccd3a694fc","series":0,"name":"checkReturn","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[53,54],"tindex":"8eeef810-2c6a-11e6-8e8e-cddb0beaf0a7","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"resizedBytes"},"type":"special","transplantationPoint":{"toString":"return resizedBytes","position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeef811-2c6a-11e6-8e8e-4141416d1eed","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"data"},"type":"special","transplantationPoint":{"toString":"return data","position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eeef812-2c6a-11e6-8e8e-29fcb33dbe0e","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:349","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[34,184],"tindex":"8eeef813-2c6a-11e6-8e8e-71c2f3368895","series":0,"name":"checkReturn","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,119,120,122,123,124,125,126,128,129,131,153],"tindex":"8eef1f24-2c6a-11e6-8e8e-e77fae74afec","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[35,36,37,38,39,40,41,42,43,44,45,46,20,47,48,49,50,51,21,52,53,54,55,56,57,22,58,59,60,61,62,63,64,65,66,67,68,24,25,69,70,71,72,73,74,75,26,76,27,77,78,79,80,28,29,30,31,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"8eef1f25-2c6a-11e6-8e8e-2b51f1be81e6","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eef1f26-2c6a-11e6-8e8e-6582cdf233ab","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","raw":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[37,41,44,45,46,47,48,50,51,21,52,53,54,55,56,57,22,58,59,61,63,66,67,24,69,70,72,73,74,76,27,78,79,80,81,82,92,96,106,107,108,109,110,111,112,113,114,115,116,118],"tindex":"8eef4637-2c6a-11e6-8e8e-0523387f24b4","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eef4638-2c6a-11e6-8e8e-6149c561e80f","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"pArray","ascii":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:427","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[1,2,3,4,5],"tindex":"8eef4639-2c6a-11e6-8e8e-ffca900b2823","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eef463a-2c6a-11e6-8e8e-b397b92c6ff3","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eef463b-2c6a-11e6-8e8e-55598a2dfedf","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[37,41,46,48,50,51,21,52,53,54,55,56,22,58,59,61,63,235,66,67,24,69,70,73,76,27,80,81,96,106,109,110,112,115,116,118],"tindex":"8eef6d4c-2c6a-11e6-8e8e-9f15797d0a70","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eef6d4d-2c6a-11e6-8e8e-0180dfe9cbeb","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":0},{"exception":"org.apache.commons.codec.DecoderException","failures":[20,51,73,236,237,238,239],"tindex":"8eef6d4e-2c6a-11e6-8e8e-0bdd5b1623b1","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[20,49,50,51,21,52,53,54,55,56,22,58,59,60,62,64,65,66,68,24,25,70,71,74,75,26,27,77,28,29,30,31,115,116,117],"tindex":"8eef6d4f-2c6a-11e6-8e8e-19b14a7cbbce","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[165,166,167,168],"tindex":"8eef6d50-2c6a-11e6-8e8e-31948a25488e","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"8eef9461-2c6a-11e6-8e8e-fb872a00ebae","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"minRating"},"type":"special","transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,0,287,1,2,3,4,5],"tindex":"8eef9462-2c6a-11e6-8e8e-fdda75358e54","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[171,172,288,173,174,289,175,176,177,290,291,178,179,180,181,182,183],"tindex":"8eef9463-2c6a-11e6-8e8e-4ba1b4963f4a","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"i"},"type":"special","transplantationPoint":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"8eef9464-2c6a-11e6-8e8e-c351ac697ee3","series":0,"name":"checkReturn","transplant":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"replacedName"},"type":"special","transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[213],"tindex":"8eef9465-2c6a-11e6-8e8e-21163cf980fe","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[149,150,151,152,119,120,122,123,124,125,126,128,129,131,205,153],"tindex":"8eefbb76-2c6a-11e6-8e8e-99f43209b7c2","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"rules"},"type":"special","transplantationPoint":{"toString":"return rules","position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[165,166,167,168],"tindex":"8eefbb77-2c6a-11e6-8e8e-9d270a3a53d1","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"el","y":"el"},"type":"special","transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}