{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":67,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":136,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":189,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":232,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully":237,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":121,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":130,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":14,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":104,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":125,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":79,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":100,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":132,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":193,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully":240,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":1,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":113,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":167,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":181,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":211,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":147,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":29,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":30,"org.apache.commons.codec.language.NysiisTest.testCap":216,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":135,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":150,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":148,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":31,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":32,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":99,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":192,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":89,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":40,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":69,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":209,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":24,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":103,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":157,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":139,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully":242,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":171,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":133,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":151,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":164,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":144,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":185,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":61,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":159,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":234,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":81,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":182,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":191,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":210,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":129,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":163,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":154,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":227,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":186,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":138,"org.apache.commons.codec.binary.Base64Test.testUUID":26,"org.apache.commons.codec.binary.Base64Test.testSingletons":39,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE":208,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":195,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":197,"org.apache.commons.codec.binary.Base64Test.testPairs":25,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":194,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":212,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":126,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":230,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":94,"org.apache.commons.codec.language.NysiisTest.testBran":220,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":225,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":200,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":238,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":215,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":131,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":203,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":127,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":176,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":3,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":55,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":106,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":177,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":97,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":98,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":168,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":77,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":190,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":188,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":15,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":152,"org.apache.commons.codec.language.NysiisTest.testDad":217,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":84,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":236,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":161,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":57,"org.apache.commons.codec.language.NysiisTest.testDan":218,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":142,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":143,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":149,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":68,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":231,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":75,"org.apache.commons.codec.binary.HexTest.testCustomCharset":93,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":140,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":156,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":21,"org.apache.commons.codec.language.NysiisTest.testSnat":222,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":160,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":17,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":117,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":235,"org.apache.commons.codec.binary.Base64Test.testTriplets":23,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":187,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":71,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":9,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":201,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":82,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":120,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":204,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":34,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":45,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":162,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":19,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":172,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":10,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":109,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":80,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":95,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":175,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":85,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":214,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":66,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":38,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":180,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":155,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":47,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":228,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":229,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":46,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":62,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":165,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":128,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":239,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":116,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":124,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":145,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":213,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":112,"org.apache.commons.codec.language.MetaphoneTest.testWhy":96,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":73,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":50,"org.apache.commons.codec.language.NysiisTest.testTranan":224,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":146,"org.apache.commons.codec.language.NysiisTest.testFal":219,"org.apache.commons.codec.language.NysiisTest.testSnad":221,"org.apache.commons.codec.language.MetaphoneTest.testTCH":58,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":76,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":226,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":179,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":198,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":13,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":44,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":102,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":101,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":173,"org.apache.commons.codec.binary.Base64Test.testBase64":43,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":64,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":35,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":48,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":170,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":206,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":205,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":110,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":169,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":183,"org.apache.commons.codec.binary.Base64Test.testCodec112":37,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":202,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":158,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":60,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":199,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":92,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay":118,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":223,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":153,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":91,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":114,"org.apache.commons.codec.binary.Base64Test.testCodec68":178,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":56,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":83,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":184,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":134,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":166,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":207,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":196,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":41,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":115,"org.apache.commons.codec.language.SoundexTest.testDifference":4,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":12,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":241,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":137,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":123,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":174,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":233,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":122},"transformations":[{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513735bf-276d-11e6-98ac-4dabd20eb251","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"maxCodeLen","to":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5],"tindex":"513783e0-276d-11e6-98ac-2f2b7aac2e56","series":0,"name":"checkReturn","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"513783e1-276d-11e6-98ac-7176560d84fb","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"5137aaf2-276d-11e6-98ac-7b150586c177","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"org.apache.commons.codec.binary.BaseNCodec.EOF","name2Size":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"51389553-276d-11e6-98ac-2977818588a5","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[56,57,58,59,60,61,62],"tindex":"51389554-276d-11e6-98ac-51fac4f08d17","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,65,66,67],"tindex":"5138bc65-276d-11e6-98ac-2f82b0972ffa","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[68,69,70,71],"tindex":"5138bc66-276d-11e6-98ac-6b037df7ed1a","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"value","name2Size":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,72,65,66,67],"tindex":"5138bc67-276d-11e6-98ac-ef9f87e8456f","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.io.IOException","failures":[73,74,75,76,77,78,79,80,81,82,83,84,51,85,86,87,88,89,90,91,52],"tindex":"5138bc68-276d-11e6-98ac-b5e666b7d32b","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[68,69,70,71],"tindex":"5138e379-276d-11e6-98ac-07cbec65e230","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5138e37a-276d-11e6-98ac-21af04922550","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"maxCodeLen","len":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-2},{"exception":"org.apache.commons.codec.DecoderException","failures":[92,26,44,93,94,95],"tindex":"5138e37b-276d-11e6-98ac-d9b21723a112","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"digit","y":"digit"},"type":"special","transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"5138e37c-276d-11e6-98ac-e57c504db421","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"org.apache.commons.codec.binary.BaseNCodec.EOF","y":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[56,57,58,96,97,98,59,99,100,101,102,103,104,105,60,106,61,107,108,109,110,111,112,113,114,115,62,116,117,118],"tindex":"51390a8d-276d-11e6-98ac-057e05778aae","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"maxCodeLen","y":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Metaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"51390a8e-276d-11e6-98ac-739d7b7d6ca8","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[119,120],"tindex":"51390a8f-276d-11e6-98ac-b3c7e6521776","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513931a0-276d-11e6-98ac-cd49e7403603","series":0,"name":"checkReturn","transplant":{"toString":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"java.lang.Character.MIN_VALUE","prev":"java.lang.Character.MIN_VALUE","curr":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[121,122,123],"tindex":"513931a1-276d-11e6-98ac-598b6873d9ac","series":0,"name":"checkReturn","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,121,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,122,123,160,161],"tindex":"513931a2-276d-11e6-98ac-c55eee5569fa","series":0,"name":"checkReturn","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513931a3-276d-11e6-98ac-73709d2721e2","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"charset","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513958b4-276d-11e6-98ac-aba7bb42ff81","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"exception":"java.lang.RuntimeException","failures":[56,97,100,102,103,104,60,106,61,111,113,114,115,117],"tindex":"513958b5-276d-11e6-98ac-dd58361c01cc","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[56,97,100,102,103,104,60,106,61,111,113,114,115,117],"tindex":"513958b6-276d-11e6-98ac-61f8dc6926fc","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"51397fc7-276d-11e6-98ac-b3e6aeafe257","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"51397fc8-276d-11e6-98ac-6fca02ea8faf","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"exception":"java.lang.RuntimeException","failures":[56,57,58,59,60,61,62],"tindex":"51397fc9-276d-11e6-98ac-99ced2bbb1d1","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[68,69,70,71],"tindex":"51397fca-276d-11e6-98ac-4ded9e53179d","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[162],"tindex":"51397fcb-276d-11e6-98ac-aff96d7d396e","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,163,164,65,66,67,165],"tindex":"5139a6dc-276d-11e6-98ac-838f65b714dc","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"5139a6dd-276d-11e6-98ac-7b7ffc395792","series":0,"name":"checkReturn","transplant":{"toString":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[166,167,20,21,168,22,169,170,23,92,171,24,172,25,26,27,28,29,30,31,32,173,33,34,35,174,36,175,37,176,177,39,40,178,41,179,42,43,180,181,44,182,183,184,45,46,185,186,187,73,74,75,188,76,77,78,189,79,80,81,190,47,48,191,192,49,193,194,195,196,50,82,83,84,51,85,86,87,88,89,197,198,90,91,52,53,54,199,55],"tindex":"513adf5e-276d-11e6-98ac-0126cf10e33f","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[3],"tindex":"513adf5f-276d-11e6-98ac-f1d1e27e0756","series":0,"name":"checkReturn","transplant":{"toString":"if (replacedName.contains(dc)) {\n    final java.lang.String singleLetter = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"str","dc":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b0670-276d-11e6-98ac-e11c13b8102c","series":0,"name":"checkReturn","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"ch","element":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":0},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"513b0671-276d-11e6-98ac-1be26f3463c4","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"digit","len":"digit"},"type":"special","transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b0672-276d-11e6-98ac-c98052112502","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b0673-276d-11e6-98ac-abb52eef109a","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"a","to":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b2d84-276d-11e6-98ac-f34a99779980","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"upperName","salt":"upperName","prefix":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[63,64,65,66],"tindex":"513b2d85-276d-11e6-98ac-156d9f342b89","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b2d86-276d-11e6-98ac-e7505ef7940f","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","ascii":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[200,201,202],"tindex":"513b2d87-276d-11e6-98ac-6f67549f5997","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_raw","ascii":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[166,167,20,21,168,22,169,170,44,186,187,73,81,191,192],"tindex":"513b2d88-276d-11e6-98ac-b74b109c170d","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"pArray"},"type":"special","transplantationPoint":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:427","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b5499-276d-11e6-98ac-df02d61a8f07","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b549a-276d-11e6-98ac-ad6a19f6a5bf","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b549b-276d-11e6-98ac-d71aa3fac6c0","series":0,"name":"checkReturn","transplant":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,203],"tindex":"513b549c-276d-11e6-98ac-038caa0962c6","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b7bad-276d-11e6-98ac-d7b7902d0420","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"diff","to":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":0},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,204],"tindex":"513b7bae-276d-11e6-98ac-b52eb7663dcf","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"c"},"type":"special","transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[201],"tindex":"513b7baf-276d-11e6-98ac-7d6406a7e64e","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,72,164,65,66,67],"tindex":"513b7bb0-276d-11e6-98ac-1fb943e4b7a9","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513b7bb1-276d-11e6-98ac-8b33cc93971e","series":0,"name":"checkReturn","transplant":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"variableMap":{"c1":"java.lang.Character.MIN_VALUE","c2":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,205,206,15,16,17,18,19,207,203],"tindex":"513ba2c2-276d-11e6-98ac-156ec2aae2ad","series":0,"name":"checkReturn","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513ba2c3-276d-11e6-98ac-09771de45784","series":0,"name":"checkReturn","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513ba2c4-276d-11e6-98ac-e3485de19614","series":0,"name":"checkReturn","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"java.lang.Character.MIN_VALUE","element":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,121,140,141,142,144,145,146,147,148,150,151,153,154,155,156,157,158,159,122,208,123,160,161],"tindex":"513ba2c5-276d-11e6-98ac-0f8786bcfb9e","series":0,"name":"checkReturn","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return name"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[209,201,210],"tindex":"513bc9d6-276d-11e6-98ac-f3bca4a336f6","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[162],"tindex":"513bc9d7-276d-11e6-98ac-a383c2e89c77","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"encodeBlanks"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.encodeBlanks","position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[58,59,99,106,107,109,116],"tindex":"513bc9d8-276d-11e6-98ac-7d4c99c21e39","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[174,179,180,183,73,188,76,189,81,51,85,86,87,197,198,52],"tindex":"513bc9d9-276d-11e6-98ac-a17e181605a1","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"513bc9da-276d-11e6-98ac-4b558546a468","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513bf0eb-276d-11e6-98ac-f78b0f3473f2","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513bf0ec-276d-11e6-98ac-f74630bc69f3","series":0,"name":"checkReturn","transplant":{"toString":"if (replacedName.contains(dc)) {\n    final java.lang.String singleLetter = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"str","dc":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513bf0ed-276d-11e6-98ac-957613da98e9","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"minRating","to":"minRating"},"type":"special","transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513bf0ee-276d-11e6-98ac-95756e6f7fb5","series":0,"name":"checkReturn","transplant":{"toString":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} ","position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,207,203],"tindex":"513c17ff-276d-11e6-98ac-9b72463614d9","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"rules"},"type":"special","transplantationPoint":{"toString":"return rules","position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[211,212,213,214,215],"tindex":"513c1800-276d-11e6-98ac-fb9a3f3fba2b","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"b"},"type":"special","transplantationPoint":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,205,206,15,16,17,18,19,207,203],"tindex":"513c1801-276d-11e6-98ac-476b3e158b3b","series":0,"name":"checkReturn","transplant":{"toString":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"name","es2":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513c8d32-276d-11e6-98ac-512c14aaa153","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,203],"tindex":"513c8d33-276d-11e6-98ac-4765561b6a6f","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[68,70,71],"tindex":"513c8d34-276d-11e6-98ac-bbafd8f1a0f2","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[121,122,123],"tindex":"513cb445-276d-11e6-98ac-6ded3b668f2c","series":0,"name":"checkReturn","transplant":{"toString":"if (string == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[216,217,218,219,220,221,222,223,224,225,226],"tindex":"513cb446-276d-11e6-98ac-11b90254d40b","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,72,65,66,67],"tindex":"513cb447-276d-11e6-98ac-e58074e2e14a","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[58,59,99,106,107,109,116],"tindex":"513cb448-276d-11e6-98ac-ff6b6bb477d5","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,203],"tindex":"513cdb59-276d-11e6-98ac-d9561cdc7587","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1],"tindex":"513cdb5a-276d-11e6-98ac-eb2d26586677","series":0,"name":"checkReturn","transplant":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[166,167,20,21,168,22,169,170,23,92,171,24,172,25,26,27,28,29,30,31,32,173,33,34,35,174,36,175,37,176,177,39,40,178,41,179,42,43,180,181,44,182,183,184,45,46,185,186,187,73,74,75,188,76,77,78,189,79,80,81,190,47,48,191,192,49,193,194,195,196,50,82,83,84,51,85,86,87,88,89,197,198,90,91,52,53,54,199,55],"tindex":"513cdb5b-276d-11e6-98ac-43fec9a25024","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513d297c-276d-11e6-98ac-1dd9ae308558","series":0,"name":"checkReturn","transplant":{"toString":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"algorithm","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"algorithm","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,205,206,15,16,17,18,19,207,203],"tindex":"513d297d-276d-11e6-98ac-a37f5e948efb","series":0,"name":"checkReturn","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513d508e-276d-11e6-98ac-61ba79cfd825","series":0,"name":"checkReturn","transplant":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"name","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"name","text":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[10,11,227,12,13,14,15,16,228,229,17,18,230,19],"tindex":"513d508f-276d-11e6-98ac-2335c6849410","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"maxPhonemes","y":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513d5090-276d-11e6-98ac-e744540c9b82","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"b","len":"b"},"type":"special","transplantationPoint":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[63,64,65,66,67],"tindex":"513d5091-276d-11e6-98ac-99dd5df2d3df","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,163,65,66,67,231,165],"tindex":"513decd2-276d-11e6-98ac-7386650abfce","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[68,69,70,71],"tindex":"513decd3-276d-11e6-98ac-a309503dc1fe","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"el"},"type":"special","transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,203],"tindex":"513decd4-276d-11e6-98ac-cd31a861b12f","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"pattern"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.pattern","position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,65,66],"tindex":"513e13e5-276d-11e6-98ac-b7d46985160e","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[63,64,65,66,67],"tindex":"513e13e6-276d-11e6-98ac-55b55cceb552","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[166,167,20,21,168,22,169,170,23,171,24,25,26,27,28,29,30,31,32,173,33,34,35,36,37,39,40,41,42,43,181,44,182,45,46,186,187,73,81,47,48,191,192,49,50,51,52,53,54,55],"tindex":"513e13e7-276d-11e6-98ac-9f1d96c548ae","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513e13e8-276d-11e6-98ac-3fac75cf13c6","series":0,"name":"checkReturn","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"ch","element":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":0},{"exception":"java.lang.RuntimeException","failures":[124,232,233,125,234,126,127,128,129,130,131,133,134,235,135,136,137,138,236,139,140,141,237,238,142,143,239,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,240,241,242,160,161],"tindex":"513e3af9-276d-11e6-98ac-bbd5e23db33d","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"minRating"},"type":"special","transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513e3afa-276d-11e6-98ac-b5d8d131a076","series":0,"name":"checkReturn","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"name","org.apache.commons.codec.language.Caverphone1.SIX_1":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[63,64,65,66,67],"tindex":"513e3afb-276d-11e6-98ac-f542f5be3bac","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[68,69,70,71],"tindex":"513e3afc-276d-11e6-98ac-6917352b3bc6","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"a"},"type":"special","transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513e3afd-276d-11e6-98ac-a755fce1ff84","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"compareCode","len":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513e3afe-276d-11e6-98ac-69dba5fcd0ba","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":0},{"exception":"java.lang.RuntimeException","failures":[63,64,72,65,66,67],"tindex":"513eb02f-276d-11e6-98ac-73f614ec016c","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[216,217,218,219,220,221,222,223,224,225,226],"tindex":"513eb030-276d-11e6-98ac-cbd709ef65d0","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513eb031-276d-11e6-98ac-93b047aa9a0d","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"513eb032-276d-11e6-98ac-e9c578246a47","series":0,"name":"checkReturn","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"mappedChar","element":"mappedChar"},"type":"special","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}