{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":16,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":191,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":265,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":240,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":71,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":185,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":22,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":278,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":287,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":109,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":181,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":189,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":135,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":239,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":114,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully":61,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":268,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":193,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":113,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":167,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":219,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":49,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":271,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":270,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":149,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":150,"org.apache.commons.codec.language.NysiisTest.testCap":244,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":52,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":90,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":269,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":50,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":7,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":2,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":8,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":134,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":273,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":237,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":128,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":199,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":161,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":236,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":267,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":277,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":202,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":144,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":184,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":261,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":91,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":58,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":212,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully":63,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":256,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":100,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":143,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":53,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":266,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":46,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":171,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":188,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":111,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":168,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":133,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":285,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":27,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":155,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":80,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":213,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":68,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":260,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":275,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":98,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":139,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":36,"org.apache.commons.codec.binary.Base64Test.testUUID":147,"org.apache.commons.codec.binary.Base64Test.testSingletons":160,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":96,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":137,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":164,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":129,"org.apache.commons.codec.binary.Base64Test.testPairs":146,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":136,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":220,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":24,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":78,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":264,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":233,"org.apache.commons.codec.language.NysiisTest.testBran":248,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":253,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":283,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":290,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":223,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":228,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":86,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":272,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":209,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":25,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":158,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":3,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":159,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":175,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":179,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":274,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":116,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":180,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":106,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":120,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":104,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":204,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":72,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":186,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":241,"org.apache.commons.codec.language.NysiisTest.testDad":245,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":123,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":201,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":148,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":65,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":177,"org.apache.commons.codec.language.NysiisTest.testDan":246,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":43,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":214,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":126,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":125,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":51,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":206,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":81,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":235,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":103,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":207,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":39,"org.apache.commons.codec.binary.HexTest.testCustomCharset":232,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":57,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":115,"org.apache.commons.codec.language.NysiisTest.testSnat":250,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":259,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":64,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":258,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":280,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":77,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":203,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":215,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":76,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":197,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":117,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":127,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":85,"org.apache.commons.codec.binary.Base64Test.testTriplets":141,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":140,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":238,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":226,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":224,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":227,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":99,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":291,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":121,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":208,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":152,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":94,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":284,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":79,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":145,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":205,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":66,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":217,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":288,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":5,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":200,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":210,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":110,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":276,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":156,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":234,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":124,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":222,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":15,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":166,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":281,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":225,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":257,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":56,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":83,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":75,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":82,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":95,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":196,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":45,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":19,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":47,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":221,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":192,"org.apache.commons.codec.language.MetaphoneTest.testWhy":178,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":101,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":88,"org.apache.commons.codec.language.NysiisTest.testTranan":252,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":48,"org.apache.commons.codec.language.NysiisTest.testFal":247,"org.apache.commons.codec.language.NysiisTest.testSnad":249,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":216,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":279,"org.apache.commons.codec.language.MetaphoneTest.testTCH":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":105,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":254,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":163,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":130,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":70,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":93,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":183,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":182,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":151,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":263,"org.apache.commons.codec.binary.Base64Test.testBase64":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":73,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":18,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":84,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":153,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":119,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":289,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":230,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":229,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":118,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":169,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":190,"org.apache.commons.codec.binary.Base64Test.testCodec112":157,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":292,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":67,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":174,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":187,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":142,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay":198,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":251,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":54,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":132,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":194,"org.apache.commons.codec.binary.Base64Test.testCodec68":162,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":176,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":122,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":286,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":170,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":211,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":172,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":255,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":112,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":231,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":138,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":218,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":92,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":195,"org.apache.commons.codec.language.SoundexTest.testDifference":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":262,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":282,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":173,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":69,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":21,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":154,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":243,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":242,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN":293},"transformations":[{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6],"tindex":"b1b9f769-278f-11e6-b4f0-7fd2f9de9ffb","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[7,8],"tindex":"b1ba458a-278f-11e6-b4f0-27323f4fac3f","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"bigBytes"},"type":"special","transplantationPoint":{"toString":"return bigBytes","position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1ba458b-278f-11e6-b4f0-874c91646586","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"minRating","to":"minRating"},"type":"special","transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":0},{"exception":"java.lang.RuntimeException","failures":[9,10],"tindex":"b1ba6c9c-278f-11e6-b4f0-69ba2e19f737","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[11,12],"tindex":"b1ba6c9d-278f-11e6-b4f0-875cf4706c50","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_ascii","raw":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1ba93ae-278f-11e6-b4f0-b93df306a3fe","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1ba93af-278f-11e6-b4f0-9959efbd9da9","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1babac0-278f-11e6-b4f0-993f9db40c4b","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1babac1-278f-11e6-b4f0-6bb0b88e0155","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE","position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"b1babac2-278f-11e6-b4f0-8d7914f07b57","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"minRating"},"type":"special","transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"b1bae1d3-278f-11e6-b4f0-a193b71ea755","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[80,14,15,16,81,17,18,82],"tindex":"b1bae1d4-278f-11e6-b4f0-172b52850626","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[14,15,17,18],"tindex":"b1bb08e5-278f-11e6-b4f0-1b25e4a58256","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"b1bb08e6-278f-11e6-b4f0-95a5284b0e58","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"binaryData"},"type":"special","transplantationPoint":{"toString":"return binaryData","position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bb2ff7-278f-11e6-b4f0-afda581a1628","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[96,97,98,99,100],"tindex":"b1bb2ff8-278f-11e6-b4f0-adf84b4ad156","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"data"},"type":"special","transplantationPoint":{"toString":"return data","position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bb2ff9-278f-11e6-b4f0-c984947678b5","series":0,"name":"checkReturn","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"len","len":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,83,84,121,122,123,85,124,125,126,127,128,129,130,131,132,86,133,134,87,135,136,137,138,88,139,140,141,142,143,144,145,146,147,89,148,149,150,7,8,151,90,152,153,154,155,156,157,158,159,160,161,162,92,163,164,165,166,167,93,168,169,170,94,95,171,172,173,174,175],"tindex":"b1bb570a-278f-11e6-b4f0-9ba0b4c3455e","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bb570b-278f-11e6-b4f0-aba4e51dea39","series":0,"name":"checkReturn","transplant":{"toString":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"name","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"name","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bb7e1c-278f-11e6-b4f0-77d62c8bcd78","series":0,"name":"checkReturn","transplant":{"toString":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:349","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bb7e1d-278f-11e6-b4f0-e94d63c3c9e7","series":0,"name":"checkReturn","transplant":{"toString":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"ch","prev":"ch","curr":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[176,177,0,178,179,180,1,2,181,182,183,184,185,186,187,3,188,4,189,5,190,191,192,193,194,195,196,6,197,198],"tindex":"b1bba52e-278f-11e6-b4f0-b33ee2ab4b01","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Metaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"b1bba52f-278f-11e6-b4f0-973f3c994146","series":0,"name":"checkReturn","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"algorithm"},"type":"special","transplantationPoint":{"toString":"return algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bba530-278f-11e6-b4f0-0fcf6479a96f","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"diff","to":"diff"},"type":"special","transplantationPoint":{"toString":"return diff","position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bbcc41-278f-11e6-b4f0-0f0fded4dbf5","series":0,"name":"checkReturn","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"java.lang.Character.MIN_VALUE","element":"java.lang.Character.MIN_VALUE"},"type":"special","transplantationPoint":{"toString":"return java.lang.Character.MIN_VALUE","position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[219,220,221,222,223],"tindex":"b1bbcc42-278f-11e6-b4f0-51adb5cd2cdc","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"b"},"type":"special","transplantationPoint":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[219,220,221,222,223],"tindex":"b1bbcc43-278f-11e6-b4f0-b5185f03fa94","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"b"},"type":"special","transplantationPoint":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-1},{"exception":"java.io.IOException","failures":[],"tindex":"b1bbcc44-278f-11e6-b4f0-856cb173ca80","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"org.apache.commons.codec.binary.BaseNCodec.EOF","name2Size":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[224,225,226,227,66,67,69,70,71,72,73,76,77,79,228],"tindex":"b1bbcc45-278f-11e6-b4f0-c9f9f5132416","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[224,225,226,227,66,67,69,70,71,229,230,72,73,76,77,79,231,228],"tindex":"b1bbf356-278f-11e6-b4f0-bffd56456d24","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"lines"},"type":"special","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bbf357-278f-11e6-b4f0-693ea2dfedb8","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"i","to":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[176,177,0,1,187,188,196],"tindex":"b1bbf358-278f-11e6-b4f0-772342e7f20a","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[232,233,234,142,147,93],"tindex":"b1bc1a69-278f-11e6-b4f0-63eece3a388d","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"digit"},"type":"special","transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[176,179,181,183,184,185,187,3,188,191,193,194,195,197],"tindex":"b1bc1a6a-278f-11e6-b4f0-37d36c041a90","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[235,236,237,238],"tindex":"b1bc1a6b-278f-11e6-b4f0-4978c14ba644","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bc1a6c-278f-11e6-b4f0-b7fba1c818ef","series":0,"name":"checkReturn","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bc417d-278f-11e6-b4f0-8b5e18048054","series":0,"name":"checkReturn","transplant":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"variableMap":{"c1":"ch","c2":"ch"},"type":"special","transplantationPoint":{"toString":"return ch","position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bc417e-278f-11e6-b4f0-77fbc5a24dac","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[101,111,112,113,114,115,116,117,118,119,83,84,85,86,133,134,87,88,139,140,141,143,144,146,147,89,148,149,150,7,8,151,90,152,153,155,157,160,161,92,164,165,167,93,168,94,95,172,173,175],"tindex":"b1bc417f-278f-11e6-b4f0-3fe1d4468bf3","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"buf"},"type":"special","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"exception":"java.io.IOException","failures":[101,102,103,105,106,107,109,110,111,121,122,123,85,124,125,126,127,128,131,132,86],"tindex":"b1bc6890-278f-11e6-b4f0-b913090da7eb","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bc6891-278f-11e6-b4f0-5300a684aeaf","series":0,"name":"checkReturn","transplant":{"toString":"if ((str.length()) == 0) {\n    return str;\n} ","position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bc6892-278f-11e6-b4f0-49623ad7c9c2","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[19,22,24,25,26,27,28,29,239,30,31,33,34,35,36,38,240,39,40,43,44,46,47,48,49,50,51,52,53,241,54,55,56,57,58,59,60,242,243,64,65],"tindex":"b1bc8fa3-278f-11e6-b4f0-7b6c116d9a2a","series":0,"name":"checkReturn","transplant":{"toString":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"upperName","es2":"upperName"},"type":"special","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1bc8fa4-278f-11e6-b4f0-f1ee0189efb9","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[244,245,246,247,248,249,250,251,252,253,254],"tindex":"b1bc8fa5-278f-11e6-b4f0-119892884098","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"strict"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1bc8fa6-278f-11e6-b4f0-a123c8e534a9","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1bcb6b7-278f-11e6-b4f0-f9daaa748c6b","series":0,"name":"checkReturn","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,83,84,121,122,123,85,124,125,126,127,128,129,130,131,132,86,133,134,87,135,136,137,138,88,139,140,141,142,143,144,145,146,147,89,148,149,150,7,8,151,90,152,153,154,155,156,157,158,159,160,161,162,92,163,164,165,166,167,93,168,169,170,94,95,171,172,173,174,175],"tindex":"b1bcb6b8-278f-11e6-b4f0-17b34a086e0c","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[14,17,18],"tindex":"b1bcddc9-278f-11e6-b4f0-9d522f15393d","series":0,"name":"checkReturn","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[255,256,257,258,259,260,261,262,263,264,265],"tindex":"b1bcddca-278f-11e6-b4f0-1f4f2000a92c","series":0,"name":"checkReturn","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"cachedString"},"type":"special","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bcddcb-278f-11e6-b4f0-d339bbe313ca","series":0,"name":"checkReturn","transplant":{"toString":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} ","position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"phonemeText"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[13,266,14,15,16,17,18],"tindex":"b1bcddcc-278f-11e6-b4f0-51229c5b663a","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1bd04dd-278f-11e6-b4f0-3b817db042b8","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[224,225,226,227,66,67,69,70,71,229,230,72,73,76,77,79,231,228],"tindex":"b1bd04de-278f-11e6-b4f0-5de759cbefaa","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"lines"},"type":"special","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd04df-278f-11e6-b4f0-6950e9de4fd5","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","failures":[80,13,14,15,16,17,18,82],"tindex":"b1bd04e0-278f-11e6-b4f0-3d0d13c9910e","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","failures":[],"tindex":"b1bd2bf1-278f-11e6-b4f0-c5cd6373394a","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"out","ascii":"out"},"type":"special","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[267],"tindex":"b1bd2bf2-278f-11e6-b4f0-21661e7086ba","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd2bf3-278f-11e6-b4f0-2521ef812496","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"name","salt":"name","prefix":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[11,12],"tindex":"b1bd2bf4-278f-11e6-b4f0-9bb33cb30945","series":0,"name":"checkReturn","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd5305-278f-11e6-b4f0-6bec83a72294","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"b1bd5306-278f-11e6-b4f0-6b2f69450b30","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"maxPhonemes","y":"maxPhonemes"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd5307-278f-11e6-b4f0-a7cf6dc77ff1","series":0,"name":"checkReturn","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Metaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[10,268],"tindex":"b1bd5308-278f-11e6-b4f0-0f75f6dfe3fe","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"str","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd7a19-278f-11e6-b4f0-c173bf5dfbda","series":0,"name":"checkReturn","transplant":{"toString":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.RULES)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.RULES)));\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"ruleType","ruleType":"ruleType"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.ruleType","position":"org.apache.commons.codec.language.bm.PhoneticEngine:508","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd7a1a-278f-11e6-b4f0-3d1a13c8060e","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bd7a1b-278f-11e6-b4f0-89454933c92b","series":0,"name":"checkReturn","transplant":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"str","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"str","text":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[224,225,226,227,66,67,69,70,71,229,230,72,73,76,77,79,231,228],"tindex":"b1bda12c-278f-11e6-b4f0-1b9bbcc4eba6","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"variableMap":{"finalRules":"lines"},"type":"special","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1bda12d-278f-11e6-b4f0-7149c41b162a","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[269,270,271,272,273,274,275,276,277,278,279],"tindex":"b1bda12e-278f-11e6-b4f0-f35210e663da","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bda12f-278f-11e6-b4f0-2d2f5477bb6f","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"maxCodeLen","to":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[135,136,137,138,146,89,90,154,160,162,163,166,169],"tindex":"b1bdc840-278f-11e6-b4f0-0133494647cd","series":0,"name":"checkReturn","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6],"tindex":"b1bdc841-278f-11e6-b4f0-51e9a4166362","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[224,225,226,227,66,67,69,70,71,72,73,76,77,79,228],"tindex":"b1bdc842-278f-11e6-b4f0-45c4762d768b","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"i"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[11,12],"tindex":"b1bdc843-278f-11e6-b4f0-c90b3864f2e1","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"l_ascii"},"type":"special","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bdef54-278f-11e6-b4f0-21e6e5c5f28b","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","raw":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1bdef55-278f-11e6-b4f0-27454a98325f","series":0,"name":"checkReturn","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[280],"tindex":"b1bdef56-278f-11e6-b4f0-2b18da96b07a","series":0,"name":"checkReturn","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[114,115,117,83,84,85,86,87,88,141,144,146,147,89,148,149,150,7,8,90,152,153,155,157,281,160,161,92,164,165,93,94,95,172,173,175],"tindex":"b1bdef57-278f-11e6-b4f0-3981098a6db7","series":0,"name":"checkReturn","transplant":{"toString":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"variableMap":{"n":"len"},"type":"special","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[80,13,14,15,16,17,18,82],"tindex":"b1be1668-278f-11e6-b4f0-c9d4d49af954","series":0,"name":"checkReturn","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6],"tindex":"b1be1669-278f-11e6-b4f0-4b3b30993802","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1be166a-278f-11e6-b4f0-d57da692a72e","series":0,"name":"checkReturn","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"special","transplantationPoint":{"toString":"return length","position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"exception":"java.lang.RuntimeException","failures":[13,282,14,15,16,17,18,82],"tindex":"b1be166b-278f-11e6-b4f0-2be4c8dbe766","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"special","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[13,14,15,16,17,18],"tindex":"b1be166c-278f-11e6-b4f0-ebd891a41ad8","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"special","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1be3d7d-278f-11e6-b4f0-d97579d7e5c4","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"buffer"},"type":"special","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[82,283,284],"tindex":"b1be3d7e-278f-11e6-b4f0-6f43f12f9f0e","series":0,"name":"checkReturn","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"compareCode"},"type":"special","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[285],"tindex":"b1be3d7f-278f-11e6-b4f0-c516567887a1","series":0,"name":"checkReturn","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[235,236,237,238],"tindex":"b1be3d80-278f-11e6-b4f0-35ca46063f0b","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"value"},"type":"special","transplantationPoint":{"toString":"return value","position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[224,225,226,227,66,67,69,70,71,72,73,76,77,79,231,228],"tindex":"b1be3d81-278f-11e6-b4f0-0d5a83174908","series":0,"name":"checkReturn","transplant":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:181","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} "},"variableMap":{"finalRules":"rules"},"type":"special","transplantationPoint":{"toString":"return rules","position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[80,13,282,286,266,14,15,16,287,81,288,17,18,289,82],"tindex":"b1be3d82-278f-11e6-b4f0-87d3fb728bc5","series":0,"name":"checkReturn","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[11,12],"tindex":"b1be6493-278f-11e6-b4f0-8b5b52eab3a7","series":0,"name":"checkReturn","transplant":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"exception":"java.io.IOException","failures":[101,102,103,104,105,106,107,108,109,110,111,121,122,123,85,124,125,126,127,128,129,130,131,132,86],"tindex":"b1be6494-278f-11e6-b4f0-e72182c32b5c","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"readLen","name2Size":"readLen"},"type":"special","transplantationPoint":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[80,13,282,286,266,14,15,16,287,81,288,17,18,289,82],"tindex":"b1be6495-278f-11e6-b4f0-8f2108501ed9","series":0,"name":"checkReturn","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"maxCodeLen","name2Size":"maxCodeLen"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1be6496-278f-11e6-b4f0-79e79da4df3b","series":0,"name":"checkReturn","transplant":{"toString":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"charset"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1be8ba7-278f-11e6-b4f0-399204401912","series":0,"name":"checkReturn","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"org.apache.commons.codec.language.Caverphone2.TEN_1","leftCharacter":"org.apache.commons.codec.language.Caverphone2.TEN_1","rightCharacter":"org.apache.commons.codec.language.Caverphone2.TEN_1","location":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":0},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1be8ba8-278f-11e6-b4f0-97fed5c036fe","series":0,"name":"checkReturn","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"name","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"name"},"type":"special","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[0,1,2,3,4,5,6],"tindex":"b1be8ba9-278f-11e6-b4f0-6524a6c1a540","series":0,"name":"checkReturn","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"special","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[290,291,292],"tindex":"b1be8baa-278f-11e6-b4f0-2396a3524f96","series":0,"name":"checkReturn","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_raw","raw":"l_raw"},"type":"special","transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"exception":"java.lang.RuntimeException","failures":[],"tindex":"b1be8bab-278f-11e6-b4f0-4f3602f81bf8","series":0,"name":"checkReturn","transplant":{"toString":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","name2":"str","name1":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"special","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"exception":"java.lang.RuntimeException","failures":[19,22,24,25,27,28,29,239,30,31,33,34,35,38,240,39,40,43,44,46,47,48,49,53,54,55,56,58,59,60,242,293,243,64,65],"tindex":"b1beb2bc-278f-11e6-b4f0-1fcf4a95a026","series":0,"name":"checkReturn","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"name"},"type":"special","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}