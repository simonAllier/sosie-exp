{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":141,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":571,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":515,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":411,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":560,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":587,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":51,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":143,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":257,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":601,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":710,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":215,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":408,"org.apache.commons.collections4.CollectionUtilsTest.collect":689,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":213,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":343,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":224,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":419,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":501,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":3,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":577,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":362,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":659,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":414,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":591,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":558,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":56,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":111,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":249,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":271,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":494,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":358,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":308,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":132,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":440,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":351,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":468,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.CollectionUtilsTest.transform1":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":359,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":304,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":581,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":635,"org.apache.commons.collections4.ListUtilsTest.testEquals":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":156,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":346,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":706,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":84,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":423,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":41,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":589,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":448,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":416,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":651,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":19,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":656,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":711,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":480,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":409,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":599,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":366,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":254,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":586,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":666,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":680,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":457,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":679,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":22,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":678,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":398,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":369,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":617,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":78,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":231,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":335,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":467,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":195,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":338,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":452,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":607,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":332,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":333,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":625,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":170,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":524,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":154,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":183,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":276,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":277,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":275,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":314,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":684,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":477,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":703,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":427,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":511,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":546,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":547,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":514,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":312,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":412,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":610,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":657,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":699,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":81,"org.apache.commons.collections4.list.TreeListTest.testRemove":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":502,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":582,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":235,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":619,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":214,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":177,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":229,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":499,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":561,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":127,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":662,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":385,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":495,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":701,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":426,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":424,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":548,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":528,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":653,"org.apache.commons.collections4.map.LRUMapTest.testClone":624,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":572,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":529,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":616,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":474,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":27,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":627,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":287,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":505,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":455,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":483,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":673,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":573,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":262,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":305,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":191,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":198,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":310,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":670,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":21,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":300,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":194,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":380,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":406,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":487,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":151,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":221,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":165,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":647,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":646,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":645,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":356,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":347,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":93,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":527,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":551,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":255,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":1,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":655,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":6,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":290,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":632,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":693,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":179,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":690,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":576,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":410,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":649,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":588,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":479,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":130,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":435,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":323,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":460,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":169,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":286,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":218,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":674,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":454,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":446,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":223,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":393,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":153,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":570,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":436,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":464,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":569,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":660,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":299,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":563,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":87,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":372,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":339,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":692,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":322,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":437,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":450,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":590,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":606,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":204,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":631,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":246,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":533,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":534,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":318,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":163,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":219,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":244,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":585,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":294,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":439,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":453,"org.apache.commons.collections4.map.HashedMapTest.testClone":579,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":28,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":296,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":370,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":83,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":320,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":638,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":654,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":101,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":128,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":575,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":144,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":473,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":621,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":207,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":553,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":522,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":186,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":18,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":698,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":180,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":565,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":267,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":261,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":695,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":403,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":550,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":475,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":605,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":0,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":361,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":434,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":611,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":42,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":574,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":47,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":456,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":544,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":640,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":172,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":669,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":368,"org.apache.commons.collections4.map.LinkedMapTest.testClone":545,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":181,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":210,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":109,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":134,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":681,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":469,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":251,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":490,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":392,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":503,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":125,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":7,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":384,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":4,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":363,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":707,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":324,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":683,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":189,"org.apache.commons.collections4.SetUtilsTest.testEquals":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":178,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":227,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":592,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":387,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":687,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":484,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":375,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":536,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":630,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":513,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":538,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":675,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":92,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":378,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":232,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":537,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":88,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":270,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":306,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":49,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":68,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":691,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":507,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":136,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":211,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":626,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":709,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":64,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":445,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":531,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":284,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":530,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":307,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":212,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":658,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":526,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":67,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":603,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":433,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":552,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":665,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":472,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":174,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":8,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":357,"org.apache.commons.collections4.map.LRUMapTest.testLRU":612,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":661,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":697,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":40,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":352,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":317,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":25,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":230,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":519,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":593,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":202,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":282,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":222,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":462,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":517,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":459,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":614,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":367,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":158,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":609,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":123,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":642,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":643,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":391,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":676,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":26,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":373,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":364,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":555,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":482,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":696,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":444,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":615,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":685,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":641,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":302,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":510,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":636,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":449,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":667},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5],"tindex":"4fb5d26c-3efe-11e6-b225-97afda1a62de","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb6208d-3efe-11e6-b225-4577d48b5e42","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[6],"tindex":"4fb6208e-3efe-11e6-b225-17fdd6b5be75","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[7,8],"tindex":"4fb6479f-3efe-11e6-b225-5d384184ffe4","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[9,10,11],"tindex":"4fb647a0-3efe-11e6-b225-3b1e1ea10f31","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            if (node == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    node.setValue(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[12],"tindex":"4fb647a1-3efe-11e6-b225-a7082abe2d1f","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list1 == null) || (list1 == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb647a2-3efe-11e6-b225-e9e7fc227fc2","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb66eb3-3efe-11e6-b225-033ffb586f7e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"4fb66eb4-3efe-11e6-b225-c579262956b9","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if ((contains(item)) == false) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl"},"failures":[32,33],"tindex":"4fb66eb5-3efe-11e6-b225-ef1c17fcbfde","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value != null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl"},"failures":[34,35],"tindex":"4fb695c6-3efe-11e6-b225-3794c4abc0a1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb695c7-3efe-11e6-b225-bd44028057fa","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (bitIndex <= bitIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb695c8-3efe-11e6-b225-cdfde90b2e58","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"4fb6bcd9-3efe-11e6-b225-45a54099f515","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb6bcda-3efe-11e6-b225-d183630269b5","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb6bcdb-3efe-11e6-b225-7dca60cca36c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb70afc-3efe-11e6-b225-4bdb2044bbd1","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb70afd-3efe-11e6-b225-2f32c4618728","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            if (node == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    node.setValue(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb7ce4e-3efe-11e6-b225-453a6cd98b5e","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb7ce4f-3efe-11e6-b225-3b029e94e5ee","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if ((contains(item)) == false) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"4fb7f560-3efe-11e6-b225-7d2692b6486f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[7],"tindex":"4fb7f561-3efe-11e6-b225-8d716c7a754f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[97],"tindex":"4fb7f562-3efe-11e6-b225-fd313ef28ff4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"4fb7f563-3efe-11e6-b225-9115d6399e6d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb7f564-3efe-11e6-b225-b32b1359f611","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb7f565-3efe-11e6-b225-95d1134c63d5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl"},"failures":[112,113,32,114,115,116,117,33,118],"tindex":"4fb84386-3efe-11e6-b225-c9907ee04821","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb84387-3efe-11e6-b225-87f573b71863","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl"},"failures":[],"tindex":"4fb84388-3efe-11e6-b225-07cb40b69fb5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb84389-3efe-11e6-b225-8f922c34b1a6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[119,120,121,122,123],"tindex":"4fb891aa-3efe-11e6-b225-a9f5d84badae","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key2 == null) || (key1 == null)) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key2","b":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[124],"tindex":"4fb891ab-3efe-11e6-b225-c5b9b4f6946d","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[125],"tindex":"4fb891ac-3efe-11e6-b225-6b1d51360074","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key2 instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl"},"failures":[126,127,128,129,130,131,132,133,134,135],"tindex":"4fb8dfcd-3efe-11e6-b225-ab2db279830f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl"},"failures":[136,137,138,139,140,141,142,143,144,145,10,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,11,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"4fb8dfce-3efe-11e6-b225-8b1542c74012","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl"},"failures":[32,193,194,195,196,33],"tindex":"4fb9ca2f-3efe-11e6-b225-1964e74502e4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[197],"tindex":"4fb9ca30-3efe-11e6-b225-479df4585dae","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"elements"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb9ca31-3efe-11e6-b225-c35f238a6a2a","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[198],"tindex":"4fb9ca32-3efe-11e6-b225-edc94b787608","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[199],"tindex":"4fb9ca33-3efe-11e6-b225-cde537656719","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fb9ca34-3efe-11e6-b225-f9d8d4275494","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive == true) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[200],"tindex":"4fb9f145-3efe-11e6-b225-c9c5bea7c3d8","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[201],"tindex":"4fb9f146-3efe-11e6-b225-d9a7c1f39f3d","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (((set2 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set2","set1":"set2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"tindex":"4fb9f147-3efe-11e6-b225-2b40c677d5fa","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[231,232,233,234,235,236,237,238,239,240],"tindex":"4fb9f148-3efe-11e6-b225-f9cf7cf78b37","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl"},"failures":[241],"tindex":"4fb9f149-3efe-11e6-b225-e555e3339278","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtBinaryOperatorImpl"},"failures":[242,243],"tindex":"4fba185a-3efe-11e6-b225-ed0b9dfaedf8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fba185b-3efe-11e6-b225-0305d53f5d88","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fba185c-3efe-11e6-b225-37ea187a2e03","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fba185d-3efe-11e6-b225-f70450945cb2","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl"},"failures":[244],"tindex":"4fba185e-3efe-11e6-b225-17ba2bdef299","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl"},"failures":[245,246,247],"tindex":"4fbb29cf-3efe-11e6-b225-f9ef50cd5543","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index == 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[248,249],"tindex":"4fbb29d0-3efe-11e6-b225-65155f45085d","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtBinaryOperatorImpl"},"failures":[250,251,252,253],"tindex":"4fbb29d1-3efe-11e6-b225-71f353a49843","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe == 0) {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapSize":"indexRelativeToMe"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[254,255],"tindex":"4fbb50e2-3efe-11e6-b225-ffc0dc153d7f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl"},"failures":[256,257,258,259,260,137,261,262,263,164,264,265],"tindex":"4fbb50e3-3efe-11e6-b225-c9807a953cc7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl"},"failures":[148],"tindex":"4fbb50e4-3efe-11e6-b225-d52a045ed90d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex == fromIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cursor(fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"fromIndex","end":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbb50e5-3efe-11e6-b225-8fe1828e23c3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbb50e6-3efe-11e6-b225-a7c4e1f3e223","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbb77f7-3efe-11e6-b225-9bf3df3013fb","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbb77f8-3efe-11e6-b225-7708785668b4","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[200],"tindex":"4fbb77f9-3efe-11e6-b225-2d7cc1767c73","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302],"tindex":"4fbb77fa-3efe-11e6-b225-9b53527ea12a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbb77fb-3efe-11e6-b225-935782adde63","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbb77fc-3efe-11e6-b225-f983d25127d6","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl"},"failures":[303,304,305,306],"tindex":"4fbb77fd-3efe-11e6-b225-d3a699753059","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (null == obj) {\n        {\n            if (obj == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl"},"failures":[307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"4fbc3b4e-3efe-11e6-b225-a11236fc2a61","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        final char[] char[] = key.toString().toCharArray();\n                        for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                            chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                        }\n                        return new java.lang.String(chars);\n                    } \n                    return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[349],"tindex":"4fbc3b4f-3efe-11e6-b225-7101faa6831d","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtInvocationImpl"},"failures":[350,351,352,353,242,354,355,356,357,358,359,360,361,362,363,364,365,366,367,303,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,0,387,388,389,390,391,243,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,305,411,412,413,414,231,415,416,417,232,418,419,420,421,422,423,424,425,426,233,427,428,234,235,429,430,236,237,238,239,240],"tindex":"4fbc3b50-3efe-11e6-b225-ef534e72c1d5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbc6261-3efe-11e6-b225-53f7f6f4cc16","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbc6262-3efe-11e6-b225-45b045e465c9","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbc6263-3efe-11e6-b225-67570de09eb9","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl"},"failures":[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,119,120,121,122,469,125,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,307,308,609,610,611,309,310,311,313,314,316,317,318,319,321,323,324,325,326,327,331,332,333,334,335,336,337,340,341,344,345,346,347,348,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655],"tindex":"4fbc6264-3efe-11e6-b225-35d136a9670f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key2 instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[256,656,657,658,659,660,661,662,663,664,665,666,667,668,669,153],"tindex":"4fbc8975-3efe-11e6-b225-97eb462adbab","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:532","type":"CtMethodImpl","sourcecode":"protected void nodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            } else if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == node) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            } else {\n                boolean = false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbcd796-3efe-11e6-b225-db66aa8fe4fa","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"4fbcd797-3efe-11e6-b225-cf7bd41f71c9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl"},"failures":[687],"tindex":"4fbcd798-3efe-11e6-b225-f348954c6312","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[688],"tindex":"4fbcd799-3efe-11e6-b225-05c2e48e4a36","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) != (coll1.size())) {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll1","b":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbcd79a-3efe-11e6-b225-47949844404b","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbcfeab-3efe-11e6-b225-7d01d0c4275c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:42","type":"CtBinaryOperatorImpl"},"failures":[689],"tindex":"4fbcfeac-3efe-11e6-b225-dd22d307c2b8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (inputIterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"inputIterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl"},"failures":[690],"tindex":"4fbcfead-3efe-11e6-b225-5d0a7327513f","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count <= 0) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbd9aee-3efe-11e6-b225-2f2e4e8db559","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[691],"tindex":"4fbd9aef-3efe-11e6-b225-b5060100071f","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbd9af0-3efe-11e6-b225-73fb770c9062","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl"},"failures":[692],"tindex":"4fbdc201-3efe-11e6-b225-3f7feb2083d6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl"},"failures":[250,693,694,253,695,696,697,698,699,700,701,702,703,704],"tindex":"4fbdc202-3efe-11e6-b225-87129d2ea2cc","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (previous == null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbdc203-3efe-11e6-b225-2ffd600d1529","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (((node.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbdc204-3efe-11e6-b225-abbb75513057","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbdc205-3efe-11e6-b225-ed71e43b71bb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (null == obj) {\n        {\n            if (obj == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbde916-3efe-11e6-b225-8974ea868133","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbe1027-3efe-11e6-b225-f33be951f6d4","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[705],"tindex":"4fbe1028-3efe-11e6-b225-e19a7f2a0541","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:210","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends J, ? extends U> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            decorated().putAll(transformMap(mapToCopy));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbe3739-3efe-11e6-b225-277bf2144ec5","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if (a instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbe373a-3efe-11e6-b225-4df61cdfad98","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbe373b-3efe-11e6-b225-b562b8924912","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbe373c-3efe-11e6-b225-b5a635815352","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        final char[] char[] = key.toString().toCharArray();\n                        for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                            chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                        }\n                        return new java.lang.String(chars);\n                    } \n                    return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[119,120,121,122],"tindex":"4fbe373d-3efe-11e6-b225-476a3d25821c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4fbe5e4e-3efe-11e6-b225-318e5b492a97","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[706,707,708,709,710,711],"tindex":"4fbe5e4f-3efe-11e6-b225-bd272df86650","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314484241/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}