{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":12,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":792,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":112,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":292,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":743,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":628,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":941,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":840,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":944,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":945,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":582,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":577,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":391,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":650,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":540,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":351,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSerializeDeserializeThenCompare":805,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":703,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":588,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":188,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":392,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":861,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":665,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":471,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":77,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":534,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":730,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":877,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":63,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":674,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":16,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":55,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":710,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":848,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":134,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":896,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":296,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":310,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":955,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":462,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":389,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":316,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":916,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":585,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":395,"org.apache.commons.collections4.CollectionUtilsTest.intersection":647,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":943,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":866,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":897,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":371,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":427,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":799,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":830,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":409,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":227,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":447,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":366,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":126,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":626,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":733,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":249,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":444,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":340,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":342,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":504,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":267,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":543,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":563,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":939,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":113,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":254,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":255,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":253,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":323,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":648,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":707,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":762,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":816,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":137,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":373,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":572,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":806,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":828,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":607,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":801,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":336,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":938,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":29,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":590,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":841,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":638,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":723,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":882,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":277,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":800,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":774,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":802,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":942,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":274,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":874,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":515,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":928,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":711,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":712,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":593,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":713,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":163,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":263,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":871,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":853,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":695,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":834,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":442,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":950,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":215,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":512,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":837,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":122,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":397,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":714,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":9,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":757,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":740,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":753,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":86,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":200,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":286,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":696,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":779,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":11,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":182,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":615,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":214,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":212,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":259,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":634,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":820,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":860,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":894,"org.apache.commons.collections4.map.LRUMapTest.testReset":178,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":457,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":279,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":785,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":360,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalEmptyCollectionExists":811,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":470,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":183,"org.apache.commons.collections4.map.LinkedMapTest.testReset":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":198,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":314,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":246,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":547,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":690,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":350,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":870,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":557,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":600,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":915,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":948,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":773,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":772,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":771,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":803,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":519,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":118,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":359,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":580,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":720,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":146,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":926,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":489,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":705,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":132,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":537,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":722,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":509,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":247,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":120,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":148,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":818,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":778,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":387,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":880,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":388,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":614,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":875,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":2,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":76,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":599,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":313,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":337,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":616,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":481,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":449,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":790,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":180,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":141,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":684,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":902,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":644,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":661,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":729,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":924,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":919,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":565,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":807,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":734,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":764,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":125,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":301,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":300,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":532,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":302,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":651,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":404,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":278,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":436,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":829,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":281,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":832,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":862,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":704,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":738,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":658,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":546,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":311,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":920,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":748,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":271,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":611,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":74,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":439,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":491,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":383,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":549,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":385,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":831,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":574,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":421,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":951,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":184,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":177,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":813,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":670,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":709,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":417,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":667,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":833,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalFullCollectionExists":809,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":627,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToString":795,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":655,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":691,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":682,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":291,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":380,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":480,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":905,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":460,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":931,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":947,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":844,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":608,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":732,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":154,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":623,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":523,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":488,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":103,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":895,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":728,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":242,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":613,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":142,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":850,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":927,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":603,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":474,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":727,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":731,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":935,"org.apache.commons.collections4.map.LRUMapTest.testLRU":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":823,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":872,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":735,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":418,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":621,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":265,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":635,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":718,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":499,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":170,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":660,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":167,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":208,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":632,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":911,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":398,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":518,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":407,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":548,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":1,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":206,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":181,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":232,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":645,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":715,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":69,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":538,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":858,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":797,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":205,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":708,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":339,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":863,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":912,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":159,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":656,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":245,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":884,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":216,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":24,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":497,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":196,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":783,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":440,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":483,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":786,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":429,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":867,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":612,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":261,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":794,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":954,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":609,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":878,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":485,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":889,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":233,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":910,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":393,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":808,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":284,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":288,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":881,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":241,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":697,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":669,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":770,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":825,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":680,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":149,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":631,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":922,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":838,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":765,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":379,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":736,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":382,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":402,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":883,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":531,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":760,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":349,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":243,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":500,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":545,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":157,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":452,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":676,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":495,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":257,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":228,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":598,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":473,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":287,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":559,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":754,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":869,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":237,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":687,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":10,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":503,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":490,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":405,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":821,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":289,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":516,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":716,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":175,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":876,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":766,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":160,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":438,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":640,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":186,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":298,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":492,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":750,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":917,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":780,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":781,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":782,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":789,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":453,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":851,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":890,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":776,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":575,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":857,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":887,"org.apache.commons.collections4.CollectionUtilsTest.union":646,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":810,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":530,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":819,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":702,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":642,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":321,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":524,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":25,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":700,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":913,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":124,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":520,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":918,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":513,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":636,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":251,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":250,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":907,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":498,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":17,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":888,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":666,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":252,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":804,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":294,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":824,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":121,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":664,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":688,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":318,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":689,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":930,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":496,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":275,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":855,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":535,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":510,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":414,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":726,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSimpleSerialization":812,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":187,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":369,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":542,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":430,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":309,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":843,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":777,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":319,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":852,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":793,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":868,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":835,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":827,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":949,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":796,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":108,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":673,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsSelfHashCode":814,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":933,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":508,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":412,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":724,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":114,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":791,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":768,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":659,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":568,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":847,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":308,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":788,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":102,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":361,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":940,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":375,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":539,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":759,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":168,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":744,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":745,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":746,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":923,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":123,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":594,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":854,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":162,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":898,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":899,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":129,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":525,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":900,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":5,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":482,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":172,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":297,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":295,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":364,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":394,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":934,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":507,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":571,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":717,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":826,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":130,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":643,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":192,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":466,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":467,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":327,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":641,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":904,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":679,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":908,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":202,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":692,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":767,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":756,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":953,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":450,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":107,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":864,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":576,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":65,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":521,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":234,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":633,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":505,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":639,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":179,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":836,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":677,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":849,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":769,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":901,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":58,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":591,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":143,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":747,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":97,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":451,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":552,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":701,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":164,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":204,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":431,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":99,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":583,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":236,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":324,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":842,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":649,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":817,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":662,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":865,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":739,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":620,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":681,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":522,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":891,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":892,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":893,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":885,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":929,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":333,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":815,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":80,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":654,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":925,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":536,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":906,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":60,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":822,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":622,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":685,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":541,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":592,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":191,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":472,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":244,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":601,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":586,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":839,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":914,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":721,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":903,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":749,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":4,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":556,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":139,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":698,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":363,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":554,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":138,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":846,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":564,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":464,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":751,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":358,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":463,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":422,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":595,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":879,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":456,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":325,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":845,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":921,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":526,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":423,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":19,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":111,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":533,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":201,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":326,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":578,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":446,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":952,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":443,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":484,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":454,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":652,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":937,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":151,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":886,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":587,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":133,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":859,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":936,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":211,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":946,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":693,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":517,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":506,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":755,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":663,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":209,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":117,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":210,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":856,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":873,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":425,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":285,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":932,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":153,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":798,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":365,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":909,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":199},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"dc3e534b-3e70-11e6-8486-21db158ab30b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"dc3f3dac-3e70-11e6-8486-19c101fbbc14","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"dc3f64bd-3e70-11e6-8486-6b29b41e6b0d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < (count / 2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[],"tindex":"dc3f64be-3e70-11e6-8486-df5cb09adfd6","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Boolean) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[126,127,128,129,130,131,132,133],"tindex":"dc3f8bcf-3e70-11e6-8486-89c64e997703","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:99","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength resolve(final int value) {\n    if (value == 0) {\n        {\n            switch (value) {\n                case 0 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 1 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 2 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                default :\n                    throw new java.lang.IllegalArgumentException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[134,135,136],"tindex":"dc3fb2e0-3e70-11e6-8486-79225655321a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[113],"tindex":"dc3fb2e1-3e70-11e6-8486-a90804231101","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:295","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"dc3fd9f2-3e70-11e6-8486-83e4008f8b77","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"Queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"dc3fd9f3-3e70-11e6-8486-b7cd458b04b4","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((hashIndex < 0) || (index >= hashIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"hashIndex","index":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[137,138,139],"tindex":"dc402814-3e70-11e6-8486-47f6a89eef95","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,127,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,131,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"tindex":"dc404f25-3e70-11e6-8486-13512ecbf60f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode < dataSize) {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"dataSize","endIndex":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dc407636-3e70-11e6-8486-37d42612ac22","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:166","type":"CtBinaryOperatorImpl","sourcecode":"defaultValueTransformer == null"},"failures":[],"tindex":"dc409d47-3e70-11e6-8486-a35cd39acbfe","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (transformerFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"defaultValueTransformer":"transformerFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[29],"tindex":"dc409d48-3e70-11e6-8486-292514d77c6c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[482,483,484,485,486,487,488,489,490,491,492,493,494],"tindex":"dc409d49-3e70-11e6-8486-b5f787a9c5e6","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc40c45a-3e70-11e6-8486-035852533a24","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[495,496,497],"tindex":"dc40c45b-3e70-11e6-8486-b57ded2ad06e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[484,490],"tindex":"dc40c45c-3e70-11e6-8486-09fd9a051aef","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"tindex":"dc40eb6d-3e70-11e6-8486-ad6ffb73cd31","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY)) != null"},"failures":[0,2,10,13,14,15,16,24,25,18,19,20,21,22,23,26,28,31,32,36,37,38,39,40,41,42,45,46,49,50,51,52,53,518,519,56,58,65,66,74,75,68,69,71,72,73,76,81,82,83,84,88,92,94,95,96],"tindex":"dc40eb6e-3e70-11e6-8486-bd8035ba4c9d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605],"tindex":"dc41127f-3e70-11e6-8486-83980236287f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623],"tindex":"dc411280-3e70-11e6-8486-4b8d27bcf3ba","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index <= 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"dc413991-3e70-11e6-8486-b5ed2c82f2b0","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((coll.isEmpty()) && (coll.isEmpty())) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"coll","pendingInsertions":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[640,641,642,643,644,645,646,647,648,649,650,651],"tindex":"dc413992-3e70-11e6-8486-435897c440c2","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 0) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[652],"tindex":"dc413993-3e70-11e6-8486-2b8e901308fc","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[653],"tindex":"dc4160a4-3e70-11e6-8486-6b4e4d9df4ff","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[654,655,656,657],"tindex":"dc4160a5-3e70-11e6-8486-4f8ec50e9c11","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"dc4160a6-3e70-11e6-8486-999c34f71773","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc4187b7-3e70-11e6-8486-e92624647370","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[],"tindex":"dc4187b8-3e70-11e6-8486-0bc2134462a5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[],"tindex":"dc4187b9-3e70-11e6-8486-3b58dacec350","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null != o) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[658,659,660,661,662,663,664,665,666,667,668,669,670,671,672],"tindex":"dc41aeca-3e70-11e6-8486-f527710e815b","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            addNodeToCache(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[673,674,675],"tindex":"dc41aecb-3e70-11e6-8486-7ff8650ed91b","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[571,676,573,677,576,577,678,679,580,680,681],"tindex":"dc41aecc-3e70-11e6-8486-1ff4dd8a8366","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index >= index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[682],"tindex":"dc41d5dd-3e70-11e6-8486-bf52af0b4c0d","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[683,684],"tindex":"dc41d5de-3e70-11e6-8486-23e447096d5a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"dc41d5df-3e70-11e6-8486-fb9f9cb2a21b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value.isAssignableFrom(value.getReturnType())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"value","method":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtInvocationImpl","sourcecode":"currentNode.isLeftChild(dataElement)"},"failures":[0,1,2,3,8,9,10,11,12,13,5,6,7,14,15,16,47,48,49,50,51,52,53,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,45,55,54,56,57,58,59,63,64,65,66,60,61,62,90,91,92,93,94,95,96,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,88],"tindex":"dc41fcf0-3e70-11e6-8486-dff069f7d49b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[],"tindex":"dc41fcf1-3e70-11e6-8486-918cdc5e8894","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:565","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T extends java.lang.Comparable<T>>org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookup(final java.lang.Object data, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (data == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n            while (node != null) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(data)), ((T)(node.getData(dataElement))));\n                if (cmp == 0) {\n                    rval = node;\n                    break;\n                } else {\n                    node = cmp < 0 ? node.getLeft(dataElement) : node.getRight(dataElement);\n                }\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"data"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[685,686,687,601],"tindex":"dc422402-3e70-11e6-8486-afdfd0beb08d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc422403-3e70-11e6-8486-8d2536e5446b","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dc422404-3e70-11e6-8486-93bfc0531e3d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"dc424b15-3e70-11e6-8486-a7ed4056c8a9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"dc424b16-3e70-11e6-8486-1d35030de4db","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null != o) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[688,689,690,691,692,693,694,695],"tindex":"dc424b17-3e70-11e6-8486-d977b9facd0d","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"dc427228-3e70-11e6-8486-7596c831a5e7","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[],"tindex":"dc427229-3e70-11e6-8486-9943512bceb0","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator2 instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[696,697,698,699],"tindex":"dc42722a-3e70-11e6-8486-2904aff69471","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtVariableReadImpl","sourcecode":"first"},"failures":[],"tindex":"dc42993b-3e70-11e6-8486-eb766da37f60","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"dc42993c-3e70-11e6-8486-db61eb4d9622","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"dc42993d-3e70-11e6-8486-b50264193fcd","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"dc42993e-3e70-11e6-8486-f3884c1e794e","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[],"tindex":"dc42c04f-3e70-11e6-8486-e339954a0665","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Boolean) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"dc42c050-3e70-11e6-8486-01fa32a58531","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null ? key == null : nextElement.equals(p)) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"key","nextElement":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"dc42c051-3e70-11e6-8486-033ea2f895cc","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[700],"tindex":"dc42e762-3e70-11e6-8486-f9c1761a7d9e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[458],"tindex":"dc42e763-3e70-11e6-8486-95511d8362b9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:281","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"dc42e764-3e70-11e6-8486-658093b42086","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,503,504,505,506,510,515,780,781,782,783,784,785,786,787,788],"tindex":"dc430e75-3e70-11e6-8486-47b8b2bc8430","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (null == key) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814],"tindex":"dc430e76-3e70-11e6-8486-47b893615b45","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll == null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[815,816,688,689,817,690,691,818,819,692,820,693,821,822,823,824,825,826,694,827,828,829,830,831,832,833,834,835,836,837,695,838,839,840,841,842,843,844,845,846,847,848,849,850],"tindex":"dc430e77-3e70-11e6-8486-c587a2b9663a","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[851],"tindex":"dc433588-3e70-11e6-8486-0d683a48a119","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"dc433589-3e70-11e6-8486-ffb48c71db0c","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[852,853,854,855,856,857,858],"tindex":"dc43358a-3e70-11e6-8486-1f9677b6f105","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Short) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[641,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879],"tindex":"dc43358b-3e70-11e6-8486-7ba75534fe06","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[455,458],"tindex":"dc435c9c-3e70-11e6-8486-b53fba847d14","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.lang.Short) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[],"tindex":"dc435c9d-3e70-11e6-8486-7b80e9e5d26b","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:382","type":"CtMethodImpl","sourcecode":"private boolean anyValueSet(final java.util.BitSet set) {\n    if (null != set) {\n        {\n            for (int int = 0 ; i < (set.size()) ; i++) {\n                if (set.get(i)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[707,716,717,711,712,713,729,733,737,740,749,750,744,745,746,756,760,764,767,776,777,771,772,773,505,785,786,780,781,782],"tindex":"dc4383ae-3e70-11e6-8486-917b403e3a4a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[880],"tindex":"dc4383af-3e70-11e6-8486-3b3504348cbb","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[881],"tindex":"dc43aac0-3e70-11e6-8486-9faa855d5da5","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[882],"tindex":"dc43aac1-3e70-11e6-8486-9b819de86d5d","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[883],"tindex":"dc43aac2-3e70-11e6-8486-69dde7ff5f64","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Float) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[884],"tindex":"dc43d1d3-3e70-11e6-8486-ddd0192c6d8e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (null == key4) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[885],"tindex":"dc446e14-3e70-11e6-8486-2555c021a997","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[619],"tindex":"dc449525-3e70-11e6-8486-070373b05f10","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"dc449526-3e70-11e6-8486-81344860d55d","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"dc449527-3e70-11e6-8486-0f2b120c3f24","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[],"tindex":"dc449528-3e70-11e6-8486-bf2fb8114019","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"dc44bc39-3e70-11e6-8486-7fe1df497a26","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[9,11,12,14,15,16,28,32,39,40,42,45,46,49,50,51,52,53],"tindex":"dc44bc3a-3e70-11e6-8486-a58358a6e013","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[886],"tindex":"dc44bc3b-3e70-11e6-8486-fb8d5a6e081b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[670,887],"tindex":"dc44e34c-3e70-11e6-8486-b7ba9e8d5d61","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value != null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"dc44e34d-3e70-11e6-8486-fd684c9e2241","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935],"tindex":"dc450a5e-3e70-11e6-8486-c9fab8eb3934","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[936,937,938,939,940,941],"tindex":"dc450a5f-3e70-11e6-8486-a32a1f5c9b0d","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end2 >= end1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"end1","index":"end2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[942],"tindex":"dc453170-3e70-11e6-8486-237b67a09961","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[11,42],"tindex":"dc453171-3e70-11e6-8486-a1b1e2effe2a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"dc453172-3e70-11e6-8486-1b25ad659fb3","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if ((removeCollection instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"removeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[943,944,945,946,947],"tindex":"dc455883-3e70-11e6-8486-f35634729db2","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dc455884-3e70-11e6-8486-57fd77c19638","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[884,948,949],"tindex":"dc455885-3e70-11e6-8486-718f51c0efa9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 instanceof java.util.Collection) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[],"tindex":"dc457f96-3e70-11e6-8486-d18edd23c54f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(sub);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[950],"tindex":"dc457f97-3e70-11e6-8486-e724bd41b020","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[951],"tindex":"dc457f98-3e70-11e6-8486-4124f594d713","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc45a6a9-3e70-11e6-8486-535d663dee0f","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"dc45a6aa-3e70-11e6-8486-addcf7fba016","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index == 0) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"dc45a6ab-3e70-11e6-8486-293c0cbed32c","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"dc45a6ac-3e70-11e6-8486-59c91fd66bc2","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (null == key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[952,953,954,955],"tindex":"dc45cdbd-3e70-11e6-8486-e77de99c9fbb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[],"tindex":"dc45cdbe-3e70-11e6-8486-9da46e17f35b","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251090612/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}