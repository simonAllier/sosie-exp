{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":740,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":378,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":669,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":658,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":452,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":451,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":780,"org.apache.commons.collections4.CollectionUtilsTest.collect":93,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":332,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":337,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":687,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":429,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":467,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":724,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":831,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":639,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":102,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":299,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":741,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":816,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":839,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":35,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":775,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":812,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":501,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":810,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":49,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":804,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":384,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":654,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":512,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":263,"org.apache.commons.collections4.ListUtilsTest.testEquals":850,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":51,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":369,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":728,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":781,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":2,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":825,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":498,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":266,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":469,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":302,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":772,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":829,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":241,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":679,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":788,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":143,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":198,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":552,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":487,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":527,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":389,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":192,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":611,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":644,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":396,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":213,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":506,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":186,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":848,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":800,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":330,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":758,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":149,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":468,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":729,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":455,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":556,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":58,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":749,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":860,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":802,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":243,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":569,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":516,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":614,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":256,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":684,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":844,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":808,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":542,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":304,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":87,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":672,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":721,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":259,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":60,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":495,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":565,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":731,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":691,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":858,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":40,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":98,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":824,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":348,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":645,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":814,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":367,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":121,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":820,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":633,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":709,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":840,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":778,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":771,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":247,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":226,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":578,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":521,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":281,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":217,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":462,"org.apache.commons.collections4.map.LRUMapTest.testReset":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":753,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":529,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":862,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":339,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":92,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":248,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":604,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":642,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":617,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":854,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":204,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":727,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":557,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":319,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":470,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":714,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":144,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":706,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":490,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":395,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":353,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":174,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":343,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":543,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":688,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":459,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":640,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":176,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":591,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":690,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":601,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":419,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":164,"org.apache.commons.collections4.map.HashedMapTest.testClone":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":739,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":830,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":827,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":388,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":380,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":364,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":443,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":434,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":546,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":564,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":125,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":216,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":774,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":722,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":759,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":819,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":570,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":411,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":643,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":630,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":551,"org.apache.commons.collections4.list.TreeListTest.testBug35258":540,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":828,"org.apache.commons.collections4.map.LinkedMapTest.testClone":309,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":563,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":559,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":74,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":300,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":126,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":588,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":48,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":357,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":750,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":163,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":628,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":719,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":718,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":843,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":652,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":449,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":237,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":446,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":89,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":756,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":431,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":59,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":486,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":847,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":55,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":681,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":835,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":667,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":600,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":838,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":837,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":836,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":158,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":693,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":518,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":295,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":354,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":641,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":845,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":250,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":338,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":602,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":366,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":200,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":336,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":647,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":427,"org.apache.commons.collections4.map.LRUMapTest.testLRU":235,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":440,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":436,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":629,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":135,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":577,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":413,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":519,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":275,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":675,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":773,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":765,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":621,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":15,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":246,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":189,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":700,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":502,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":833,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":823,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":84,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":668,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":623,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":653,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":326,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":272,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":634,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":341,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":713,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":283,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":784,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":76,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":660,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":327,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":219,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":479,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":127,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":489,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":456,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":573,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":794,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":748,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":171,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":787,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":477,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":197,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":598,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":859,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":147,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":865,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":733,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":509,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":596,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":145,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":817,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":334,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":537,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":160,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":320,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":72,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":864,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":797,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":798,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":796,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":586,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":201,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":287,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":853,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":616,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":624,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":215,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":184,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":582,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":340,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":770,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":515,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":30,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":769,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":183,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":849,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":56,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":224,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":734,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":67,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":806,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":736,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":372,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":180,"org.apache.commons.collections4.CollectionUtilsTest.union":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":725,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":568,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":580,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":795,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":99,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":785,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":311,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":791,"org.apache.commons.collections4.list.TreeListTest.testRemove":535,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":685,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":777,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":430,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":631,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":210,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":746,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":762,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":745,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":120,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":233,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":426,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":409,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":764,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":695,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":461,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.map.LRUMapTest.testClone":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":370,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":146,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":761,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":752,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":855,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":391,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":492,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":418,"org.apache.commons.collections4.list.TreeListTest.testListEquals":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":342,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":783,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":448,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":511,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":649,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":650,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":648,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":715,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":534,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":405,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":637,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":626,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":735,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":333,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":416,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":522,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":297,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":532,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":627,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":632,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":803,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":112,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":625,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":412,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":437,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":536,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":646,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":292,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":723,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":150,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":260,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":432,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":782,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":153,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":229,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":298,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":130,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":122,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":42,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":131,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":572,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":228,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":583,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":768,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":585,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":751,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":140,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":832,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":172,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":359,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":558,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":294,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":151,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":258,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":481,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":344,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":408,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":88,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":618,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":410,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":807,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":32,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":269,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":291,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":128,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":496,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":720,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":861,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":425,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":286,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":809,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":599,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":610,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":497,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":105,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":613,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":818,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":398,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":547,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":191,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":373,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":38,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":244,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":846,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":813,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":345,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":95,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":83,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":508,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":12,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":692,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":590,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":763,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":178,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":271,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":799,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":662,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":435,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":323,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":474,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":538,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":360,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":393,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":312,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":17,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":822,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":841,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":834,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":90,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":91,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":856,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":46,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":815,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":619,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":656,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":686,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":655,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":303,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":575,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":651,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":202,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":454,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":50,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":842,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":381,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":10,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":689,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":801,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":792,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":517,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":857,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":139,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":754,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":322,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":793,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":351,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":457,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":484,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":776,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":296,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":779,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":710,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":108,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":475,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":361,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":811,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":597,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":113,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":488,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":579,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":708,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":707,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":447,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":826,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":402,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":44,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":321,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":704,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":415,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":305,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":115,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":277,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":53,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":852,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":730,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":553,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":450,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":622,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":493,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":265},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc5d3a92-3f11-11e6-bae2-ffd178fb929c","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"dc5e24f3-3f11-11e6-bae2-0f335a83b29c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (retain instanceof org.apache.commons.collections4.Bag) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"retain"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc5e4c04-3f11-11e6-bae2-cb5649cc26e7","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"dc5e4c05-3f11-11e6-bae2-6d6e682982d6","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"dc5e7316-3f11-11e6-bae2-8105c5eb3b20","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map.isEmpty()) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24],"tindex":"dc5f5d77-3f11-11e6-bae2-ad1d533289f9","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc5fab98-3f11-11e6-bae2-45902f0ac6fd","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc5ff9b9-3f11-11e6-bae2-37b2e30f78b0","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc5ff9ba-3f11-11e6-bae2-e79b87d4e92e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[25,26,27,28,29,30,31,32,33],"tindex":"dc6020cb-3f11-11e6-bae2-53bf5b47c7f7","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6020cc-3f11-11e6-bae2-c9a81d355ce9","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6047dd-3f11-11e6-bae2-a77b8517b25e","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6047de-3f11-11e6-bae2-83b2da16cfa2","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6047df-3f11-11e6-bae2-53dea9339e0a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"dc606ef0-3f11-11e6-bae2-47cf99632ef4","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject == null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl"},"failures":[82],"tindex":"dc606ef1-3f11-11e6-bae2-dbf6970e12fe","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[83],"tindex":"dc606ef2-3f11-11e6-bae2-95168bc13663","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[84,84,85,86,86,87,88,89,90,91,92],"tindex":"dc609603-3f11-11e6-bae2-3502f24f5dad","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[93],"tindex":"dc609604-3f11-11e6-bae2-7946edfc1d3c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl"},"failures":[94],"tindex":"dc60bd15-3f11-11e6-bae2-97705739c599","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"dc60bd16-3f11-11e6-bae2-e1417d724081","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc60bd17-3f11-11e6-bae2-af5529380a84","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"h","parent":"h","left":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc60e428-3f11-11e6-bae2-2f1b85622bdf","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[127],"tindex":"dc610b39-3f11-11e6-bae2-b71896021f59","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc61f59a-3f11-11e6-bae2-836f2b72e5f5","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[128,129,130,131],"tindex":"dc61f59b-3f11-11e6-bae2-9d58e89e2d90","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index == (-1)) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl"},"failures":[132,133,134,135,25,136,137,26,138,139,140,141,142,143,144,145,146,147,148,27,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,28,29,175,176,177,178,179,180,181,182,183,184,30,185,186,187,188,189,190,191,192,193,194,195,31,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,32,33,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"tindex":"dc6243bc-3f11-11e6-bae2-f70d14bd0829","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity == 0) {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"proposedCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6291dd-3f11-11e6-bae2-438c16836106","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[312],"tindex":"dc62b8ee-3f11-11e6-bae2-7d2def41d877","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[313,314],"tindex":"dc62b8ef-3f11-11e6-bae2-41954444a598","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc62e000-3f11-11e6-bae2-09b52e17fab8","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc62e001-3f11-11e6-bae2-4566b86fd5e3","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl"},"failures":[315,316,317],"tindex":"dc62e002-3f11-11e6-bae2-f198d903a27f","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count < 0) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[318,319],"tindex":"dc630713-3f11-11e6-bae2-cf6806534365","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453],"tindex":"dc632e24-3f11-11e6-bae2-ddff9830d03b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[454,455,456,457,458,459],"tindex":"dc632e25-3f11-11e6-bae2-570cc01ca93d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:359","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection1, final java.util.Collection<E> compositeCollection2) {\n    if (compositeCollection2.isEmpty()) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection1);\n            java.util.List<java.util.Collection<E>>.add(compositeCollection2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"compositeCollection2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"dc632e26-3f11-11e6-bae2-a74f5193afa7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj == null ? obj == null : obj1.equals(obj2))) {\n                {\n                    if (obj instanceof java.util.Set) {\n                        final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                        return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"obj","obj1":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,95,96,97,99,100,101,102,103,104,105,106,483,484,107,485,108,486,487,109,110,111,112,113,114,488,489,115,116,117,118,119,120,121,123,124,490,125,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522],"tindex":"dc637c47-3f11-11e6-bae2-d1d5ecc59e0d","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[523],"tindex":"dc63a358-3f11-11e6-bae2-b3485516bbfc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[524,127,525],"tindex":"dc63a359-3f11-11e6-bae2-a15deb661220","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc63a35a-3f11-11e6-bae2-07240395073f","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl"},"failures":[526],"tindex":"dc63ca6b-3f11-11e6-bae2-d5ea2207fbfa","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl"},"failures":[527,528],"tindex":"dc63ca6c-3f11-11e6-bae2-4b46bed33750","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index == 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc63f17d-3f11-11e6-bae2-25a7874668eb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:801","type":"CtMethodImpl","sourcecode":"void setRemoved(final boolean flag) {\n    if (flag == false) {\n        {\n            org.apache.commons.collections4.map.Flat3Map.FlatMapEntry.this.boolean = flag;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"flag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[529,530,531,532,533],"tindex":"dc64188e-3f11-11e6-bae2-3be3a123db60","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value instanceof org.w3c.dom.Node) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl"},"failures":[534],"tindex":"dc64188f-3f11-11e6-bae2-05945131ccb7","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((closure == null) || (closure == null)) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl"},"failures":[535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"dc6466b0-3f11-11e6-bae2-65b0583144f7","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,460,591,592,593,594,595,596,597,598,599,600,601,602,603,604],"tindex":"dc648dc1-3f11-11e6-bae2-8b39122d5664","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1212","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6502f2-3f11-11e6-bae2-a901920534e4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:74","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.util.Map.Entry<K, V> object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"object","parent":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[605,606,607,516,608,609],"tindex":"dc652a03-3f11-11e6-bae2-2390508c35e3","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc652a04-3f11-11e6-bae2-536397e93e00","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc652a05-3f11-11e6-bae2-9f1396e4d4a4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,132,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690],"tindex":"dc657826-3f11-11e6-bae2-19b0e5471ed6","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[691],"tindex":"dc659f37-3f11-11e6-bae2-1fac0129e223","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc659f38-3f11-11e6-bae2-9dafa633ee0f","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if ((index != (-1)) && (pos != index)) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[692,693],"tindex":"dc663b79-3f11-11e6-bae2-412614a3dd7a","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc663b7a-3f11-11e6-bae2-1537eac994bc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl"},"failures":[694,695,696,697,698],"tindex":"dc66628b-3f11-11e6-bae2-b1d615034ec1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[699],"tindex":"dc66628c-3f11-11e6-bae2-0b83c49cff20","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtInvocationImpl"},"failures":[],"tindex":"dc66899d-3f11-11e6-bae2-d9b6f826bdc9","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"Queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc66899e-3f11-11e6-bae2-3fd2faf59bc2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[700,701,702,703],"tindex":"dc66899f-3f11-11e6-bae2-85742dc80bd6","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6689a0-3f11-11e6-bae2-257f8fefd141","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl"},"failures":[704,0],"tindex":"dc66b0b1-3f11-11e6-bae2-c10ebcc11bd8","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc66d7c2-3f11-11e6-bae2-054f2bcac38a","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc66d7c3-3f11-11e6-bae2-65250eeec898","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[705],"tindex":"dc6725e4-3f11-11e6-bae2-91a7271c1384","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[],"tindex":"dc674cf5-3f11-11e6-bae2-9dd5a4d89af0","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:210","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends J, ? extends U> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().putAll(transformMap(mapToCopy));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[706,707,708,709],"tindex":"dc674cf6-3f11-11e6-bae2-df5f6b043277","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((preds.int) == 0) {\n                        return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n                    } \n                    if ((preds.int) == 1) {\n                        return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n                    } \n                    return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc674cf7-3f11-11e6-bae2-311afe3a7710","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc674cf8-3f11-11e6-bae2-9d9b99c9531c","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[],"tindex":"dc677409-3f11-11e6-bae2-4beed1facb45","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,306,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761],"tindex":"dc67740a-3f11-11e6-bae2-af9468cd080b","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[311],"tindex":"dc67740b-3f11-11e6-bae2-134a80adb821","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    org.apache.commons.collections4.Put<K, V>.putAll(t);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc67740c-3f11-11e6-bae2-f930ab1a20aa","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((preds.int) == 0) {\n                        return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n                    } \n                    if ((preds.int) == 1) {\n                        return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n                    } \n                    return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[],"tindex":"dc679b1d-3f11-11e6-bae2-7909d7be8a8f","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map.isEmpty()) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl"},"failures":[762],"tindex":"dc679b1e-3f11-11e6-bae2-d943e9e8b347","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc67e93f-3f11-11e6-bae2-35c72f531aca","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc68ac90-3f11-11e6-bae2-3f0999e3d99c","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc68ac91-3f11-11e6-bae2-3b70257a5505","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[763],"tindex":"dc68d3a2-3f11-11e6-bae2-0fcc1d23dcdb","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtInvocationImpl"},"failures":[764,765,766,767,768,529,530,769,531,770,771,694,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,695,696,697,799,800,801,802,803,804,805,698,806,807,808,809,810,811,812,813,814,815,532,533,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849],"tindex":"dc68d3a3-3f11-11e6-bae2-cb16af9cd356","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[850],"tindex":"dc68d3a4-3f11-11e6-bae2-3dba5374a879","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list2 == null) {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc68fab5-3f11-11e6-bae2-a7ed0f73fdcf","method":{"position":"org.apache.commons.collections4.CollectionUtils:994","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.lang.Iterable<I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.collect(inputCollection, transformer, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[320,383,424],"tindex":"dc68fab6-3f11-11e6-bae2-0f4a5809322b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.setValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc68fab7-3f11-11e6-bae2-892aa2adcc82","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[851,852,853],"tindex":"dc68fab8-3f11-11e6-bae2-dfb360cc26af","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[25,137,141,147,153,167,184,188,194,200,214],"tindex":"dc6921c9-3f11-11e6-bae2-d7c4618c84d2","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6921ca-3f11-11e6-bae2-f52a41ee10d7","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (bucket >= bucket) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"bucket","end":"bucket"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6921cb-3f11-11e6-bae2-89728aa955e6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj == null ? obj == null : obj1.equals(obj2))) {\n                {\n                    if (obj instanceof java.util.Set) {\n                        final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                        return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[854],"tindex":"dc6948dc-3f11-11e6-bae2-8d2f354b04cd","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[855,856,857,858,859,860,861,862,863,864,865],"tindex":"dc6948dd-3f11-11e6-bae2-55380c25e1e4","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6948de-3f11-11e6-bae2-cfa29972d537","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6948df-3f11-11e6-bae2-cffd788b08d8","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc6948e0-3f11-11e6-bae2-49adbacfc092","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator","currentIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[531,771,694],"tindex":"dc696ff1-3f11-11e6-bae2-63a8bcad4f37","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc696ff2-3f11-11e6-bae2-e384c53bffde","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    org.apache.commons.collections4.Put<K, V>.putAll(t);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[673],"tindex":"dc696ff3-3f11-11e6-bae2-95ca9b66d908","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[380,395,396,398,399,401,404,407,421,438,439,441,442,444,447,450],"tindex":"dc699704-3f11-11e6-bae2-f5a96afb7f11","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"value","position2":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"dc69e525-3f11-11e6-bae2-91aa3b1a8fe7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex < (toIndex / 2)) {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(sub);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320328725/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"toIndex","index":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}