{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":215,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":585,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":165,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":114,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":631,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":601,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":450,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":107,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":295,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":442,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":518,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":482,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":226,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":604,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":378,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":593,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":436,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":253,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":297,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":542,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":656,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":648,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":254,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":559,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":532,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":347,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":137,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":540,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":210,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":398,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":236,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":669,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":678,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":488,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":425,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":190,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":52,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":234,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":502,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":558,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":414,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":453,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":580,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":412,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":298,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":312,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":247,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":178,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":101,"org.apache.commons.collections4.ListUtilsTest.testEquals":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":426,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":285,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":581,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":523,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":410,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":609,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":42,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":186,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":422,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":272,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":508,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":213,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":188,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":449,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":374,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":51,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":141,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":513,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":223,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":199,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":171,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":187,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":194,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":465,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":597,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":644,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":134,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":419,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":533,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":206,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":344,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":676,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":564,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":377,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":302,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":510,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":83,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":524,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":200,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":537,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":647,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":588,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":527,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":591,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":404,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":469,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":112,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":602,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":304,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":610,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":293,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":271,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":595,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":596,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":525,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":614,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":563,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":6,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":222,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":570,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":5,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":2,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":125,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":182,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":162,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":531,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":616,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":575,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":274,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":369,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":63,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":322,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":189,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":536,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":562,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":126,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":238,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":444,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":459,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":495,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":23,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":480,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":145,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":305,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":348,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":146,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":349,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":478,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":646,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":147,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":350,"org.apache.commons.collections4.list.TreeListTest.testRemove":280,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":102,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":556,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":220,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":219,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":424,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":372,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":503,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":184,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":221,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEmptyMapCompatibility":645,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":37,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":198,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":327,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":103,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":34,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":583,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":682,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":406,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":491,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":407,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":487,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":334,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":486,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":381,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":261,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":643,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":117,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":154,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":153,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":21,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":343,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":341,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":235,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":493,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":565,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":629,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":534,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":618,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":167,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":496,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":72,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":430,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":130,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":380,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":170,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":151,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":138,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":550,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":415,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":416,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":517,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":417,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":589,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":35,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":530,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":501,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":338,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":60,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":494,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":267,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":337,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":677,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":543,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSimpleSerialization":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":0,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":664,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":431,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":163,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":652,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":308,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":620,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":437,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":217,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":650,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":366,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":367,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":365,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":665,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":81,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":140,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":196,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":9,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":640,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":246,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":500,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":574,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":658,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":386,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":433,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":474,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":569,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":243,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":273,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":318,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":612,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":65,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":428,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":361,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":3,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":360,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":173,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":467,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":675,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":568,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":651,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":241,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":281,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":446,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":573,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":376,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":48,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":506,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":328,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":567,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":144,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":256,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":266,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":373,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":391,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":479,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":548,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":393,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":329,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":392,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":294,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":582,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":136,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":325,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":59,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":175,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":50,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":225,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":255,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":301,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":379,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":498,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":242,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":600,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":264,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":519,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":623,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":111,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":252,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":420,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":545,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":553,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":118,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":119,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":680,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":594,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":289,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":606,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":251,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":561,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":468,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":666,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":633,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":522,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":306,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":619,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":667,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":579,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":335,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":382,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":642,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":79,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":155,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":544,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":351,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":445,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":353,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":663,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":352,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":159,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":409,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":555,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":657,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":403,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":270,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":314,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":661,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":258,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":662,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":566,"org.apache.commons.collections4.SetUtilsTest.testHashCode":673,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":471,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":481,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":411,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":330,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":507,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":203,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":324,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":224,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":64,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":492,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":521,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":630,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":110,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":512,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":514,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":470,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":291,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":546,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":389,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":499,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":388,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":456,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":177,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":539,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":608,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":133,"org.apache.commons.collections4.CollectionUtilsTest.isFull":286,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":257,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":357,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":551,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":632,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":320,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":443,"org.apache.commons.collections4.ListUtilsTest.testSelect":626,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":598,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":311,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":205,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":617,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":355,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":356,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":160,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":578,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":637,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":371,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":16,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":279,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":303,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":183,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":18,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":17,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":621,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":331,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":577,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":143,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":313,"org.apache.commons.collections4.SetUtilsTest.testEquals":674,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":181,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":653,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":447,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":515,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":323,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":457,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":265,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":120,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":185,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":340,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":385,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":454,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":671,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":122,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":607,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":670,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":214,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":1,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":624,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":490,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":397,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":396,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":395,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":166,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":245,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":440,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":208,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":472,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":49,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":681,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":613,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":429,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":423,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":654,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":262,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":316,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":611,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":451,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":131,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":259,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":229,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":333,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":300,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":639,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":586,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":240,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":263,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEmptyMapCompatibility":628,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":364,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":212,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":635,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":108,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":168,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":66,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":464,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":547,"org.apache.commons.collections4.map.LRUMapTest.testLRU":78,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":448,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":587,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":473,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":193,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":538,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":13,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":399,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":622,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":636,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":401,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":116,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":504,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":526,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":557,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":296,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":520,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":82,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":326,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":535,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":15,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":560,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":201,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":462,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":441,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":592,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":387,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":477,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":505,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":452,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":336,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":476,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":36,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":659,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":529,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":132},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[0],"tindex":"58861b84-3e48-11e6-bdce-b3c1fa300940","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 instanceof java.util.Map) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"58872cf5-3e48-11e6-bdce-e1dcce081533","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"58872cf6-3e48-11e6-bdce-bb5e5ea54ebb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex < (hashIndex / 2)) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex","index":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[137,138,139,140],"tindex":"58877b17-3e48-11e6-bdce-e30250839756","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value instanceof java.lang.Number) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"58877b18-3e48-11e6-bdce-cfbb670e7ded","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"5887a229-3e48-11e6-bdce-c3472f4d5c98","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[],"tindex":"5887c93a-3e48-11e6-bdce-cb45604c6b5d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"5887f04b-3e48-11e6-bdce-2b7a46743886","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:61","type":"CtBinaryOperatorImpl","sourcecode":"(((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.length) != (args.length)))"},"failures":[],"tindex":"5887f04c-3e48-11e6-bdce-399f096d4cf2","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((array == null) && (array != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && (index != (args.int)))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    array[index] = E;\n                    if ((getLeftSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    if ((getRightSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"args":"array","paramTypes":"array","length":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"5888175d-3e48-11e6-bdce-973a6655cbd1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index >= index) {\n                {\n                    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n                        {\n                            rangeCheck(index, int);\n                            checkModCount();\n                            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"58883e6e-3e48-11e6-bdce-539145bcef62","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[190],"tindex":"58883e6f-3e48-11e6-bdce-ed3c3ca66def","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[191,192,193],"tindex":"58886580-3e48-11e6-bdce-ada08fbf1db9","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[194,195,196,197],"tindex":"58888c91-3e48-11e6-bdce-e948bb1e8d20","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[198],"tindex":"58888c92-3e48-11e6-bdce-9d5a54372621","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"5888b3a3-3e48-11e6-bdce-b1f2675d80c6","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(count)) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"5888b3a4-3e48-11e6-bdce-0d32b65c27a3","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((array == null) && (array != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && (index != (args.int)))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    array[index] = E;\n                    if ((getLeftSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    if ((getRightSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5888dab5-3e48-11e6-bdce-a9375369be73","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl","sourcecode":"((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[199,200,1,2,3,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,4,216,217,218,219,220,221,5,6,222,7,223,224,8,9,225,226,10,11,12,13,14,227,228,229,230,48,49,50,231,232,233,234,235,236,51,237,238,239,240,241,242,243,244,52,245,246,247,248,249,250,53,54,251,55,252,253,56,57,254,255,58,59,60,61,62],"tindex":"588901c6-3e48-11e6-bdce-dbf0b5fd62ec","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (((hash % hash) != 0) || ((hash % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return referent;\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            throw new java.lang.Error();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"hash","lengthInBits":"hash","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hash"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl","sourcecode":"index >= (maxElements)"},"failures":[],"tindex":"58894fe7-3e48-11e6-bdce-617eb0b73667","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index >= index) {\n                {\n                    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n                        {\n                            rangeCheck(index, int);\n                            checkModCount();\n                            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,198,277,278],"tindex":"58894fe8-3e48-11e6-bdce-81e5431a0adf","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    decorated().add(object, count);\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"588976f9-3e48-11e6-bdce-a956f32282be","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"588976fa-3e48-11e6-bdce-c1628b6a117f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[279,280,281,282],"tindex":"58899e0b-3e48-11e6-bdce-e923fd615e61","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"58899e0c-3e48-11e6-bdce-d13be96446fc","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"5889c51d-3e48-11e6-bdce-b70224fee08f","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"5889c51e-3e48-11e6-bdce-1f61ecb97bd6","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"5889c51f-3e48-11e6-bdce-5de919cde1fe","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[283,284],"tindex":"5889ec30-3e48-11e6-bdce-61af320c1d14","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (a.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[285],"tindex":"588a1341-3e48-11e6-bdce-f5c78795528f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[286],"tindex":"588a1342-3e48-11e6-bdce-d512469fe687","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"588a1343-3e48-11e6-bdce-03e4080720b5","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[287,288,289,290],"tindex":"588a3a54-3e48-11e6-bdce-773e52f4c79c","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                        return true;\n                    } \n                    return java.util.Map.Entry<K, V>.equals(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[291],"tindex":"588a3a55-3e48-11e6-bdce-3322da67f055","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[292],"tindex":"588a3a56-3e48-11e6-bdce-772d13a88f2c","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"588a6167-3e48-11e6-bdce-57ac7b4298e4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"588a6168-3e48-11e6-bdce-4b7141743f1b","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[306],"tindex":"588a6169-3e48-11e6-bdce-47ab7f517cd5","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (end < start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"end","index":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,256,257,524,525,526,527,528,259,264,265,268,270,273,274,529,530,531,532,275,276,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,277,278,564,565,566,567,568],"tindex":"588a887a-3e48-11e6-bdce-f9241a64ca56","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[569],"tindex":"588a887b-3e48-11e6-bdce-edc0f5891c1b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[570],"tindex":"588c362c-3e48-11e6-bdce-c1ed22b0166e","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"588c5d3d-3e48-11e6-bdce-55b6cb403ffd","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"588c5d3e-3e48-11e6-bdce-57e63d0afaa4","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[],"tindex":"588c844f-3e48-11e6-bdce-c92d12121c2f","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"588c8450-3e48-11e6-bdce-ad8829fd315c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[],"tindex":"588c8451-3e48-11e6-bdce-33c00c876c84","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (bucket < 0) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"bucket"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[],"tindex":"588cab62-3e48-11e6-bdce-27cfc85d558e","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    decorated().add(object, count);\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"count","endIndex":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[571],"tindex":"588cab63-3e48-11e6-bdce-cd5aae85bc0a","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[572],"tindex":"588cab64-3e48-11e6-bdce-03da4ed943da","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[573],"tindex":"588cd275-3e48-11e6-bdce-25a179391e68","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cursor(fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[574,575],"tindex":"588cd276-3e48-11e6-bdce-f35c203d2980","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[286,576],"tindex":"588cd277-3e48-11e6-bdce-f9d2da9bccb0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[199,200,1,2,3,8,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,4,216,217,218,219,220,221,5,6,222,7,223,224,9,225,226,10,11,12,13,14,227,228,229,230,48,49,50,56,231,232,233,234,235,236,51,237,238,239,240,241,242,243,244,52,245,246,247,248,249,250,53,54,251,55,252,253,57,254,255,58,59,60,61,62],"tindex":"588cf988-3e48-11e6-bdce-c136832c761b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"588cf989-3e48-11e6-bdce-9788c265c27d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"588d209a-3e48-11e6-bdce-3737c46b05d2","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"588d209b-3e48-11e6-bdce-4126ce3a523f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtInvocationImpl","sourcecode":"child.isEmpty()"},"failures":[577,578],"tindex":"588d209c-3e48-11e6-bdce-5b6a302e4ed7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node.isEmpty()) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"child":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Integer"},"failures":[579],"tindex":"588d47ad-3e48-11e6-bdce-63b50a2f9e99","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Integer) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"588d47ae-3e48-11e6-bdce-2fb094120109","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == nodeToInsert) {\n        {\n            super.addNode(nodeToInsert, insertBeforeNode);\n            broadcastNodeInserted(nodeToInsert);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"nodeToInsert","header":"nodeToInsert"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[580,581,582],"tindex":"588d47af-3e48-11e6-bdce-09e3fa4e7cf0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.setValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"588d6ec0-3e48-11e6-bdce-5bb6c9c72190","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"588d6ec1-3e48-11e6-bdce-3d5cdf6f68bb","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"588d6ec2-3e48-11e6-bdce-79018bd9a09f","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[583,584],"tindex":"588d6ec3-3e48-11e6-bdce-f3a73fc2bf84","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[585],"tindex":"588d95d4-3e48-11e6-bdce-05f98f0cbdec","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"588d95d5-3e48-11e6-bdce-7395db6b8d10","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:385","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"588dbce6-3e48-11e6-bdce-d938d57942fd","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n    final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n    for (final E E : list1) {\n        if (!(bag.remove(e, 1))) {\n            result.add(e);\n        } \n    }\n    return result;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[586,587],"tindex":"588dbce7-3e48-11e6-bdce-2964fecc98e7","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[588,589,590],"tindex":"588dbce8-3e48-11e6-bdce-1921f6ac0cfa","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl","sourcecode":"proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"588dbce9-3e48-11e6-bdce-83b8ab4f329a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index >= index) {\n                {\n                    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n                        {\n                            rangeCheck(index, int);\n                            checkModCount();\n                            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","proposedCapacity":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[207,591,592,593,594,595,51,596,597,598,599,600,601,602,603],"tindex":"588de3fa-3e48-11e6-bdce-e5733d61853e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"588e0b0b-3e48-11e6-bdce-91bfa629d543","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"588e0b0c-3e48-11e6-bdce-3fd1cde93fe4","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"object","b":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621],"tindex":"588e0b0d-3e48-11e6-bdce-f5b1a300a017","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"588e321e-3e48-11e6-bdce-a1dccf7abcec","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtInvocationImpl","sourcecode":"root.isEmpty()"},"failures":[],"tindex":"588e321f-3e48-11e6-bdce-1bf8281b7358","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (parentOfSubtree.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"parentOfSubtree"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[622,623,624,625],"tindex":"588e3220-3e48-11e6-bdce-05b19e4ea708","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[626],"tindex":"588e5931-3e48-11e6-bdce-593b38fb2755","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (inputCollection == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[],"tindex":"588e5932-3e48-11e6-bdce-3f167f857429","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                        return true;\n                    } \n                    return java.util.Map.Entry<K, V>.equals(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtBinaryOperatorImpl","sourcecode":"nextIterator != null"},"failures":[],"tindex":"588e5933-3e48-11e6-bdce-53150c9f4890","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[627],"tindex":"588e8044-3e48-11e6-bdce-77e4b574c829","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"588e8045-3e48-11e6-bdce-6930093b29fb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"588e8046-3e48-11e6-bdce-f3f37dccf977","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"588e8047-3e48-11e6-bdce-37606f9242bf","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"588ea758-3e48-11e6-bdce-9dc53b166aad","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649],"tindex":"588ea759-3e48-11e6-bdce-0b490b97b0bb","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"588ea75a-3e48-11e6-bdce-97a1428607eb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (((key == null) && (key == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"key","object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"588ea75b-3e48-11e6-bdce-1f420e7444a2","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (falseClosure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"falseClosure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:343","type":"CtBinaryOperatorImpl","sourcecode":"(answer != null) && (answer instanceof java.util.Map)"},"failures":[],"tindex":"588ece6c-3e48-11e6-bdce-69d8c78169c2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key != null) && (answer instanceof java.util.Map)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"588ece6d-3e48-11e6-bdce-43a3a7695fca","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:162","type":"CtMethodImpl","sourcecode":"protected void addNodeToCache(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            if (isCacheFull()) {\n                return ;\n            } \n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nextCachedNode;\n            node.setValue(null);\n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[321],"tindex":"588ece6e-3e48-11e6-bdce-53082fe117fd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:106","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().subList(fromIndex, toIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[650],"tindex":"588ef57f-3e48-11e6-bdce-1d565d85cdf1","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"588ef580-3e48-11e6-bdce-9577ee4f4020","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry != null) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[292],"tindex":"588ef581-3e48-11e6-bdce-315827492cfb","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[651,517],"tindex":"588f1c92-3e48-11e6-bdce-074b754c4a15","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[652,653,654,655,656,657,468,658,659,469,660,470,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675],"tindex":"588f1c93-3e48-11e6-bdce-5904c0cb9f83","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"588f43a4-3e48-11e6-bdce-61bba4f5af36","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"588f43a5-3e48-11e6-bdce-f53bccbcbe48","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"588f43a6-3e48-11e6-bdce-73a61a85ab49","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[676,677,678,679,680,681,682,683,684,512,513,514,515,516,517,518],"tindex":"588f6ab7-3e48-11e6-bdce-2d203550fad4","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233945649/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"object","b":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}