{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":605,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":776,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":627,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":492,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":861,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":173,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":194,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":383,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":887,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":316,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":752,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":277,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":451,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":349,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":318,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":394,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":648,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":703,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":791,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":389,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":128,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":53,"org.apache.commons.collections4.ListUtilsTest.testLazyList":136,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":660,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":839,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":878,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":922,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":781,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":882,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":196,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":654,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":779,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":493,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":690,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":129,"org.apache.commons.collections4.ListUtilsTest.testEquals":917,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":639,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":755,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":762,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":314,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":696,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":929,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":884,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":753,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":398,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":467,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":294,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":843,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":360,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":903,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":123,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":902,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":901,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":214,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":140,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":835,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":803,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":824,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":41,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":337,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":923,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":849,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":916,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":152,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":661,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":106,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":630,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":238,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":747,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":741,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":742,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":542,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":264,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":760,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":941,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":259,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":260,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":258,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":511,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":655,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":157,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":658,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":626,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":638,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":172,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":728,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":891,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":614,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":860,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":436,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":45,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":939,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":437,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":519,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":608,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":921,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":609,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":865,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":667,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":204,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":336,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":528,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":664,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":597,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":525,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":354,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":526,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":406,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":893,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":816,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":459,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":576,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":470,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":414,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":403,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":873,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":102,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":825,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":877,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":170,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":509,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":806,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":628,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":775,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":942,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":814,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":539,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":819,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":799,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":801,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":54,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":253,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":488,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":738,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":342,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":276,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":372,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":371,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":265,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":370,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":474,"org.apache.commons.collections4.map.LRUMapTest.testReset":334,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":756,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":938,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":434,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":447,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":618,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":636,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":669,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":820,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":82,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":647,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":344,"org.apache.commons.collections4.map.LinkedMapTest.testReset":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":749,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":821,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":358,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":694,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":251,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":376,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":466,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":751,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":402,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":550,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":290,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":76,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":567,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":142,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":823,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":911,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":867,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":283,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":83,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":787,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":686,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":558,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":719,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":516,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":505,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":786,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":909,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":104,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":311,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":560,"org.apache.commons.collections4.map.HashedMapTest.testClone":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":313,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":834,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":42,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":275,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":39,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":495,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":510,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":693,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":737,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":897,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":212,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":203,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":193,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":553,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":792,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":482,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":184,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":680,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":679,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":681,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":700,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":8,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":838,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":598,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":722,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":671,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":765,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":26,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":692,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":691,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":797,"org.apache.commons.collections4.list.TreeListTest.testBug35258":3,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":663,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":40,"org.apache.commons.collections4.map.LinkedMapTest.testClone":220,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":418,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":390,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":908,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":881,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":592,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":216,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":438,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":827,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":736,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":594,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":757,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":329,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":58,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":706,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":771,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":345,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":127,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":912,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":777,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":704,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":892,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":888,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":49,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":646,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":673,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":232,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":937,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":51,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":50,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":305,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":649,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":933,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":385,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":208,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":566,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":299,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":872,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":148,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":174,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":718,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":554,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":108,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":413,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":478,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":150,"org.apache.commons.collections4.map.LRUMapTest.testLRU":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":116,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":532,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":890,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":404,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":153,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":225,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":271,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":439,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":440,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":441,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":583,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":420,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":580,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":795,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":919,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":837,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":499,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":364,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":341,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":432,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":235,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":35,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":914,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":758,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":363,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":772,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":570,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":572,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":250,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":537,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":374,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":430,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":846,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":934,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":910,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":357,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":746,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":77,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":714,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":71,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":267,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":920,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":421,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":798,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":822,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":880,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":885,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":613,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":319,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":848,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":490,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":244,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":491,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":293,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":202,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":561,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":471,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":304,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":794,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":186,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":31,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":113,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":698,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":181,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":905,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":750,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":853,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":854,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":852,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":248,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":379,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":504,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":569,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":139,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":380,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":117,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":262,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":231,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":273,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":651,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":578,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":401,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":836,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":475,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":114,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":497,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":764,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":743,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":672,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":817,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":889,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":548,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":804,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":745,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":744,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":588,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":274,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":408,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":601,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":573,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":724,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":898,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":899,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":347,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":677,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":863,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":165,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":602,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":766,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":913,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":330,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":431,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":464,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":802,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":426,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":659,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":831,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":465,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":732,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":280,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":847,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":209,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":850,"org.apache.commons.collections4.list.TreeListTest.testRemove":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":926,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":167,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":256,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":255,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":433,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":257,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":612,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":551,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":611,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":610,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":229,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":927,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":729,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":925,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":857,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":876,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":855,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":458,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":496,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.map.LRUMapTest.testClone":125,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":688,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":788,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":812,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":702,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":483,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":678,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":793,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":348,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":617,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":79,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":940,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":689,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":564,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":845,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":730,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":868,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":118,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":400,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":783,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":111,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":811,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":472,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":701,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":169,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":862,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":107,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":874,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":790,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":460,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":387,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":192,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":243,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":896,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":687,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":450,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":222,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":789,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":281,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":297,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":844,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":300,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":279,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":518,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":285,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":875,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":575,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":119,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":278,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":697,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":684,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":557,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":585,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":676,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":683,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":221,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":895,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":932,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":287,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":734,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":461,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":810,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":571,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":384,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":549,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":298,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":353,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":444,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":171,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":643,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":644,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":84,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":754,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":515,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":391,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":591,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":303,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":935,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":864,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":918,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":928,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":943,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":131,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":596,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":705,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":378,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":828,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":480,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":829,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":396,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":904,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":761,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":457,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":121,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":237,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":101,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":830,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":869,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":339,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":782,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":587,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":540,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":632,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":936,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":328,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":577,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":362,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":716,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":858,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":135,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":906,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":239,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":778,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":512,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":1,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":166,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":397,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":161,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":87,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":735,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":915,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":417,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":879,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":27,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":217,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":650,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":625,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":249,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":808,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":883,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":924,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":785,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":871,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":851,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":780,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":241,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":286,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":619,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":894,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":907,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":641,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":642,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":282,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":640,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":707,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":726,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":930,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":826,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":91,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":124,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":859,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":386,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":708,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":841,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":589,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":545,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":29,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":931,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":514,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":477,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":629,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":634,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":563,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":343,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":331,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":870,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":818,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":727,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":807,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":215,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":886,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":200,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":710,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":487,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":559,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":770,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":335,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":288,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":774,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":586,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":359},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6c5349-3f0b-11e6-86f6-af06299b97fe","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cc6ca16a-3f0b-11e6-86f6-a5544c832618","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (!(value == null ? value == null : o1.equals(o2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"value","o2":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"cc6cc87b-3f0b-11e6-86f6-bbae9ba5ea8e","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? -1 : node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[16],"tindex":"cc6cc87c-3f0b-11e6-86f6-85e4f7083766","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[17,18,19],"tindex":"cc6d64bd-3f0b-11e6-86f6-53974aab044a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:980","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cc6d8bce-3f0b-11e6-86f6-8fd2a3295900","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (!(parentOfSubtree.isInternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(node.isEmpty())) {\n                {\n                    if (node == null) {\n                        return firstEntry();\n                    } else {\n                        return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6d8bcf-3f0b-11e6-86f6-757dff42a761","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"cc6d8bd0-3f0b-11e6-86f6-974352dd6a4f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[73,74,75,76,77,78,17,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,18,111],"tindex":"cc6d8bd1-3f0b-11e6-86f6-170484781ea9","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[112,113,114,115,116,117,118,119],"tindex":"cc6dd9f2-3f0b-11e6-86f6-9b745ded67a5","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[],"tindex":"cc6e4f23-3f0b-11e6-86f6-154a2daaca4a","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl"},"failures":[120,121],"tindex":"cc6e7634-3f0b-11e6-86f6-519fbe1a5d5c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[122],"tindex":"cc6ec455-3f0b-11e6-86f6-95e37aba8001","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex < 0) {\n        {\n            return cursor(fromIndex);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6ec456-3f0b-11e6-86f6-15910925c5c1","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start >= start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start","index":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[123],"tindex":"cc6ec457-3f0b-11e6-86f6-eddb3bdd462f","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (trueClosure == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"trueClosure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[124],"tindex":"cc6ec458-3f0b-11e6-86f6-394c7046d701","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl"},"failures":[125,126,127,128,129,130,131,132,133,134],"tindex":"cc6eeb69-3f0b-11e6-86f6-b1f7426e7edc","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6eeb6a-3f0b-11e6-86f6-b99ae5efbb90","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"h","left":"h","h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl"},"failures":[135],"tindex":"cc6f127b-3f0b-11e6-86f6-7fa8093fd889","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f127c-3f0b-11e6-86f6-d1775eafc092","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[136],"tindex":"cc6f127d-3f0b-11e6-86f6-27bf0b524b0f","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[137],"tindex":"cc6f127e-3f0b-11e6-86f6-151b30b6f851","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl"},"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"cc6f127f-3f0b-11e6-86f6-9d729ac2bf31","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl"},"failures":[205,206,207],"tindex":"cc6f3890-3f0b-11e6-86f6-c1f98077495c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index == 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtInvocationImpl"},"failures":[],"tindex":"cc6f3891-3f0b-11e6-86f6-a142bdc76442","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f3892-3f0b-11e6-86f6-1f147df798ba","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f3893-3f0b-11e6-86f6-53ac952896d5","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[208],"tindex":"cc6f3894-3f0b-11e6-86f6-ad34dfb1debf","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                {\n                    return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f3895-3f0b-11e6-86f6-95df01ecd862","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:113","type":"CtBinaryOperatorImpl"},"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,128,338,339,340,341,342,126,127,343,125,344,345,346,347,348,349,350,351,352,353,354,355,356,357,129,358,359,360,361,130,131,132,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,133,134,382,383,384,385,386,387,388,389,390],"tindex":"cc6f5fa6-3f0b-11e6-86f6-75457b2a1b64","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity < proposedCapacity) {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"proposedCapacity","index":"proposedCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f5fa7-3f0b-11e6-86f6-03a79cb7adbc","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f5fa8-3f0b-11e6-86f6-2947e5ad7e91","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                {\n                    return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f86b9-3f0b-11e6-86f6-4f8ac7fefbff","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"cc6f86ba-3f0b-11e6-86f6-d9ff02e9bfce","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        {\n            if (null != obj) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof java.util.Set) {\n                        final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                        return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f86bb-3f0b-11e6-86f6-bd7345eda96d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if ((o instanceof java.util.Map.Entry) == false) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl"},"failures":[412],"tindex":"cc6f86bc-3f0b-11e6-86f6-c99c81a2f51c","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6f86bd-3f0b-11e6-86f6-c7d89ad9cb74","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"cc6fadce-3f0b-11e6-86f6-c7f1e03490f9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[462],"tindex":"cc6fadcf-3f0b-11e6-86f6-59609bc03c53","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6fadd0-3f0b-11e6-86f6-898263cfd384","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1945","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if ((!toInclusive) || toInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"toInclusive","beforeFirst":"toInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[463],"tindex":"cc6fadd1-3f0b-11e6-86f6-eb5266cff26e","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if ((list == null) || (list == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6fadd2-3f0b-11e6-86f6-09b55e8f3f8a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (fromIndexInclusive == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"fromIndexInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6fadd3-3f0b-11e6-86f6-ad8331dcf810","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6fd4e4-3f0b-11e6-86f6-bdf2baeefe09","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6fd4e5-3f0b-11e6-86f6-59f9ca660062","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        {\n            if (null != obj) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof java.util.Set) {\n                        final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                        return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[464,465,466,467,468,469,470,471,472,216,473,474,475,476,477,478,479,480,481,482,218,483,484,485,486,487,488,489,490,491,492,221,493,494,495,496,497,498,499,500,501,502,503,504,505,225,506,507,508,509,510,511,512,513,514,515,516,517,518,229,519,520,521,522,236,237,238,239,240,241,242,244,247,250,251,273,275,276,289,290,291,292,293,294,295,297,300,303,304,326,328,329,352,353,354,355,356,357,129,359,130,362,363,383,385,386],"tindex":"cc6fd4e6-3f0b-11e6-86f6-cd40c2ad6062","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6ffbf7-3f0b-11e6-86f6-81224c017c25","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6ffbf8-3f0b-11e6-86f6-e560f63d11ea","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[523],"tindex":"cc6ffbf9-3f0b-11e6-86f6-e302fe18c1fd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6ffbfa-3f0b-11e6-86f6-11f9a4bc7c9a","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:424","type":"CtInvocationImpl"},"failures":[],"tindex":"cc6ffbfb-3f0b-11e6-86f6-777a4172f755","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc6ffbfc-3f0b-11e6-86f6-75a43cb2097f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl"},"failures":[524],"tindex":"cc70230d-3f0b-11e6-86f6-397a84931ba3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:126","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[525,526,527,528,529,530,531,532,533],"tindex":"cc70230e-3f0b-11e6-86f6-617f86d65a1b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[534],"tindex":"cc70230f-3f0b-11e6-86f6-695f541639a5","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[535,536,537],"tindex":"cc702310-3f0b-11e6-86f6-939f8e29378f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 instanceof java.lang.Object[]) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[538,539,161,540,190,541,542,543],"tindex":"cc702311-3f0b-11e6-86f6-9be28a9094ee","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl"},"failures":[544,545],"tindex":"cc704a22-3f0b-11e6-86f6-053b72d40f8a","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:144","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc704a23-3f0b-11e6-86f6-370292f3b954","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if ((defaultValue <= 0.0F) || (java.lang.Float.isNaN(loadFactor))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loadFactor":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl"},"failures":[],"tindex":"cc704a24-3f0b-11e6-86f6-6b2c09fff65b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[546],"tindex":"cc704a25-3f0b-11e6-86f6-f9ee381d7ea8","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[547,119,548,549,550],"tindex":"cc704a26-3f0b-11e6-86f6-8dae7abb1011","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl"},"failures":[551],"tindex":"cc704a27-3f0b-11e6-86f6-d55ea54ee7c4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc707138-3f0b-11e6-86f6-a90690b24a96","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[209,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,210,211,212,213,214,589,590,591,535,536,592,593,594,595,537,596,597,598,599,464,465,466,467,468,469,470,600,471,601,472,602,603,216,473,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,217,626,627,628,629,630,476,477,631,478,479,480,632,633,481,634,482,635,636,218,483,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,220,660,661,662,663,664,665,666,667,668,669,670,671,484,485,486,487,488,489,490,672,491,673,492,674,675,221,493,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,224,697,698,699,700,497,498,499,500,501,502,503,701,504,702,505,703,704,225,506,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,228,726,227,727,728,729,730,731,732,510,511,512,513,514,515,516,733,517,734,518,735,736,229,519,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,231,230,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,125,334,126,127,343,335,336,337,128,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,129,358,359,361,130,131,132,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,133,134,382],"tindex":"cc707139-3f0b-11e6-86f6-a399f413c22c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70713a-3f0b-11e6-86f6-01b6d654a960","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl"},"failures":[552,554,558,559,560,563,564,565,566,567,568,569,571,573,577,578,579,582,583,584,585,586,587,588],"tindex":"cc70984b-3f0b-11e6-86f6-8bc4c8bec3be","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 instanceof java.lang.Short) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[591,537,535,536],"tindex":"cc70984c-3f0b-11e6-86f6-858df392fe50","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if ((key1 instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[73,758,759,760,761,762,763,18,764,765,766,767,768,769,19,770],"tindex":"cc70984d-3f0b-11e6-86f6-3d031f4216cc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70984e-3f0b-11e6-86f6-79a17f6b9c1e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if ((((index % 2) != 0) && ((delta - index) <= index)) && (k <= (delta + d))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70984f-3f0b-11e6-86f6-b5ab4e803ec7","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl"},"failures":[771,772,773,774,775,776,777,778,779,780,781,782,783,784,420,423,424,426,427,428,431,438,449,785,786,787,788,141,142,143,144,145,146,789,790,147,148,149,791,150,151,152,792,153,154,155,793,794,163,795,796,166,167,169,170,171,172,173,174,175,797,798,176,177,178,799,179,180,181,800,182,183,184,801,802,192,803,804,195,196,198,199,200,201,202,203,204,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819],"tindex":"cc70bf60-3f0b-11e6-86f6-8d67b0d140a4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator.hasNext()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[820],"tindex":"cc70bf61-3f0b-11e6-86f6-db53420f226c","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl"},"failures":[821],"tindex":"cc70bf62-3f0b-11e6-86f6-3b2d0a62d351","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > count) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl"},"failures":[822],"tindex":"cc70bf63-3f0b-11e6-86f6-4d666f0706ce","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70bf64-3f0b-11e6-86f6-21df58ae0d43","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[115,823,824,825,826,547,119,548,827,828,829,549,830],"tindex":"cc70bf65-3f0b-11e6-86f6-7bf2a027b769","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70e676-3f0b-11e6-86f6-77ed3401ab6f","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70e677-3f0b-11e6-86f6-95d63ff3e69c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70e678-3f0b-11e6-86f6-edd028f6eca4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc70e679-3f0b-11e6-86f6-1b171a5be823","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl"},"failures":[831,832],"tindex":"cc710d8a-3f0b-11e6-86f6-0f104a47def3","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index >= index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc710d8b-3f0b-11e6-86f6-af9ed9fd614d","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if ((index < 0) || (index >= index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl"},"failures":[23,24,26,32,34,35,37,38,39,40,41,42,49,50,51,52,56,60,62,63,64,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867],"tindex":"cc710d8c-3f0b-11e6-86f6-2b3118c151f7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl"},"failures":[],"tindex":"cc710d8d-3f0b-11e6-86f6-e563540b0f07","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915],"tindex":"cc710d8e-3f0b-11e6-86f6-ff566f01eba5","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject == null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[916],"tindex":"cc71349f-3f0b-11e6-86f6-77eb6ccb90e3","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[917],"tindex":"cc7134a0-3f0b-11e6-86f6-5be73dbfc05b","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 != null) {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc7134a1-3f0b-11e6-86f6-ab5aa31ae4c4","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc7134a2-3f0b-11e6-86f6-875e1a8672d8","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc7134a3-3f0b-11e6-86f6-1dea2bfe7d66","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc7134a4-3f0b-11e6-86f6-1d811aa55eee","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl"},"failures":[],"tindex":"cc715bb5-3f0b-11e6-86f6-1f2bf86e0f66","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator.hasNext()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cc715bb6-3f0b-11e6-86f6-697e05abda6a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (!(parentOfSubtree.isInternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(node.isEmpty())) {\n                {\n                    if (node == null) {\n                        return firstEntry();\n                    } else {\n                        return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"parentOfSubtree"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl"},"failures":[918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941],"tindex":"cc715bb7-3f0b-11e6-86f6-bf0d24731939","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc715bb8-3f0b-11e6-86f6-5554b75c49a4","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cc715bb9-3f0b-11e6-86f6-7166d918e6b3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[942],"tindex":"cc7182ca-3f0b-11e6-86f6-ff984f4329cb","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[209],"tindex":"cc7182cb-3f0b-11e6-86f6-ed2a20e0edbd","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl"},"failures":[943],"tindex":"cc7182cc-3f0b-11e6-86f6-a525a89086a7","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467320237956/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}