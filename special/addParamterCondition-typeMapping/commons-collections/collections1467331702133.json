{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":64,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1185,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":672,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":862,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":902,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":276,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":524,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":641,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":412,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":636,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":1145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1227,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":47,"org.apache.commons.collections4.CollectionUtilsTest.collect":609,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":591,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":1068,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":593,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":974,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":1160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":465,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":1028,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":681,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":1105,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":886,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":1070,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":1217,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":212,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":827,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":909,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":12,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":763,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":56,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":1151,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":781,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":1093,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":795,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":137,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":838,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":1013,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":678,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":1239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":938,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":555,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":554,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":530,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":310,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":799,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":832,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":127,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":866,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":881,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":31,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":1114,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":620,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":819,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":977,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":804,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":1066,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":887,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":643,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":377,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":548,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":345,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":109,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":371,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":235,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":892,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":1073,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":89,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":404,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":644,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":975,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":1166,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":767,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":919,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":920,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":1046,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":921,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":152,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":401,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":1117,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":901,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":510,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":1253,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":1252,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":1251,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":752,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":474,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":1125,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":317,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":1245,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":144,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":19,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":76,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":414,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":545,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":240,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":513,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":1092,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":806,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":1236,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":61,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":204,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1041,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":997,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":195,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":839,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":1006,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":1193,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":132,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":803,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":990,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":538,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":962,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":969,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":963,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":964,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":587,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":1016,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":661,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":980,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":1079,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":618,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":391,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":340,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":1011,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":1012,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":365,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":1010,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":363,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":833,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":944,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":985,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":436,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":1137,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":520,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":840,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":818,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":1048,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":141,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":1155,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":778,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":768,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":789,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":895,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":1230,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":324,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":1094,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":168,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":1262,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":772,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":958,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":1107,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":863,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":183,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":440,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":723,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":417,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":1244,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":782,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":783,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":784,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":394,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":692,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":191,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":329,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":845,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":815,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":676,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":665,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":1091,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":691,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":1211,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":306,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":843,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":761,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":688,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":1110,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":1261,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":706,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":354,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":647,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":737,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":1021,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":397,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":518,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":703,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":145,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":563,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1182,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":731,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":203,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":586,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":1112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":1181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":669,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":929,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":270,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":613,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":801,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":1133,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":17,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":273,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":685,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":1075,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":38,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":236,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":189,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":507,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":1234,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":695,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":230,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":1005,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":1118,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":1231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":1177,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":855,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":521,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":656,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":452,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":1241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":960,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":63,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":1098,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":1029,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":322,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":1132,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":1131,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":1017,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":1130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":254,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":347,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":798,"org.apache.commons.collections4.map.LRUMapTest.testReset":1099,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":642,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":339,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":480,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":1058,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":162,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":448,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":511,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":978,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":576,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":852,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":1054,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":435,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":814,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":848,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":986,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1033,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":1069,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":1247,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":561,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":826,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":1100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":321,"org.apache.commons.collections4.map.LinkedMapTest.testReset":842,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":971,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":885,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":1115,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":1003,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":1,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":1136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":766,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":973,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":449,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":288,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":653,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":151,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":182,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":217,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1042,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":682,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":1135,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":728,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":428,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":483,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":1179,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":1255,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":385,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":740,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":172,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":617,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":1036,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":1047,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":1074,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":1163,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":8,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":467,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":375,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":877,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":719,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":159,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":927,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":949,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":1053,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":1078,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":1246,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":908,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":40,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":190,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":684,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":199,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":469,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":14,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":20,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":446,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":294,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":1004,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1210,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1189,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":130,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":192,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":900,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":1063,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":721,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":251,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":158,"org.apache.commons.collections4.map.HashedMapTest.testClone":891,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":1064,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":1065,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":523,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":82,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":479,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":779,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":1027,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":373,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":713,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":950,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":943,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":652,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":884,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":959,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":1192,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1186,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":605,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":1154,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":1096,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":714,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":1235,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":1204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":1176,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":540,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1221,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":606,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":234,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":871,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":870,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":872,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":896,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":1015,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":382,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":847,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":762,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":930,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":268,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":850,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":797,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":491,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":466,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":888,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":1260,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":478,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":1201,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":512,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":497,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":883,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":882,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":175,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":488,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":496,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":835,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":457,"org.apache.commons.collections4.map.LinkedMapTest.testClone":837,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":69,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":572,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":29,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":571,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":559,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":1152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":1254,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":755,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":933,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":777,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":403,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":1060,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":790,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":1061,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":1216,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":584,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":956,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":1062,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":758,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":757,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":756,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":1106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":979,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":188,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":1082,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":308,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":914,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":1101,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":1088,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":298,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":1256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1225,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":299,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":796,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":910,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":1219,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":770,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":250,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":556,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":607,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":861,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":984,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":575,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":998,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":1237,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":1238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":1057,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":1259,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":170,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":583,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":106,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":1147,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":664,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":817,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":350,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":405,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":683,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":1170,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":686,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":57,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":614,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":689,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":1103,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":424,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":490,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":727,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":601,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":1051,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":1249,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":487,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":444,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":999,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":219,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":926,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":715,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":849,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":1161,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":807,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":830,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":1215,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1087,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":334,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":25,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":241,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":258,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":704,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":305,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":291,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":911,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":1023,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":677,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":744,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":393,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":413,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":650,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":1203,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":750,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":463,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":741,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":1126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":366,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":187,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":209,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":341,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":528,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":319,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":1076,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":836,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":320,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":621,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":42,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":899,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":372,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":214,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":1124,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":1097,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":987,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":392,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":615,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":1123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":941,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":961,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":406,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":470,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":526,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":519,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":733,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":1002,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":928,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":631,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":1134,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":876,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":552,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":103,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":1113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":968,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":925,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":616,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":922,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":699,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":529,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":1019,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":690,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":709,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":51,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":186,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":906,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":788,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":67,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":988,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":1071,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":289,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1184,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":853,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":857,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":580,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":996,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":859,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":626,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1224,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":743,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1045,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":1232,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":337,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":503,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":722,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":309,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":330,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":771,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":161,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":274,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":588,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":1056,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":451,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":489,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":1043,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":344,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":415,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":283,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1213,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":81,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":860,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":1229,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":1059,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":147,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":894,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":389,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":325,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":1158,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":627,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":972,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":508,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":32,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":227,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":434,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":1000,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":1139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":481,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":905,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":730,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":472,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":1140,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":810,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":338,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":398,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":314,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":1014,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":982,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":1025,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":829,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":856,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":739,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":701,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":992,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":353,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":539,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":1171,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":167,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":313,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":390,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":610,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":897,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":44,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":256,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":300,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":326,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":983,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":623,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":965,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":1085,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":858,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":506,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":1240,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":242,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":396,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":1024,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":967,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":934,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":966,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":749,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":1026,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":679,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":729,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":773,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":734,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":932,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":41,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":868,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":1102,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":437,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":37,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":673,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":1153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":60,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":811,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":1248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":775,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":625,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":239,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":1178,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":146,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":1081,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":764,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":71,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":252,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":1228,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":841,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":765,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":942,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":834,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":1032,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":1168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":1258,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":534,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":410,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":1008,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":1007,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":402,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":376,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":1218,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":1009,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":787,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":786,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":864,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":785,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":290,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":912,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":957,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":1174,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":213,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":229,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":546,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1214,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":939,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":248,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":533,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":637,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":565,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":844,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":342,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":889,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":1142,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":509,"org.apache.commons.collections4.map.LRUMapTest.testClone":1086,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":423,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":879,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":473,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":907,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":816,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":869,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":386,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":280,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":1104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":1242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":1044,"org.apache.commons.collections4.ListUtilsTest.testSubtract":136,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":43,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":495,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":792,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":680,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":185,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":328,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":484,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":318,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":923,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":1195,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":351,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":880,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":725,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":1162,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":441,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":124,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":936,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":940,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":562,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":139,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":358,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":237,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":935,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":163,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":700,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":138,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":262,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":429,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":16,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":754,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":4,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":1084,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":1141,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":774,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":904,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":1194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":628,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1208,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":346,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":1148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":261,"org.apache.commons.collections4.CollectionUtilsTest.filter":611,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":995,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":1202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1196,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":878,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":654,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":210,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":179,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":7,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":890,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":1144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":981,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":1034,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1049,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":1111,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":1220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":343,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":903,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":1052,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":301,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":1031,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":646,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":1150,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":536,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":717,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":535,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":954,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":1191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":742,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":640,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":13,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":1037,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":125,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":232,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":648,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":564,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":736,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":387,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":1030,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":893,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":297,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":46,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":875,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":718,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":746,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":867,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":874,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":711,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":873,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":1190,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":791,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":865,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":551,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":1039,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":1018,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":970,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":953,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":1072,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":500,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":831,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":384,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":632,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":732,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":1146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":260,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":367,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":931,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":1067,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":1050,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":117,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":129,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":1109,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":823,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":824,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":825,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":1164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":976,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":948,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1200,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":244,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":753,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":482,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":735,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":553,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":1055,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":674,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":527,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":639,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":9,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":15,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":547,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":1022,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":582,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":253,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":1120,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":1143,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":123,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":218,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":222,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":951,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":166,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":760,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":569,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":913,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":851,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":1138,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":150,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":808,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":193,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":432,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":420,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":525,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":595,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":356,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":597,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":697,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":619,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":65,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":201,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":989,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":1180,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":438,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":494,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":369,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":1095,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":368,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":748,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":148,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":225,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":453,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":200,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":745,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":776,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":716,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":1165,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":574,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":809,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":937,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":59,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":1080,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":388,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":924,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":1122,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":11,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":442,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":846,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":1167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1222,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":991,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":216,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":374,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":945,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":898,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":445,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":450,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":198,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":278,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":1172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":1205,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":72,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":471,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":550,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":558,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":544,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":281,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":493,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":955,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":58,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":594,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":79,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":1257,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":462,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":180,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":952,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":455,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":1020,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":1156,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":427,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":514,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":645,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":1108,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":48,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":53,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":828,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":1001,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":116,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":655,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":1250,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":275,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":1233,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":383,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":492,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":327,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":468,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":994,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":993,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":169,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":604,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":226,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":543,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":1038,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":794,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":1121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":1175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":1159,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":93,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":821,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":822,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":381,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":820,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":1035,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":915,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":105,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":599,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":600,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":710,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":121,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":1169,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":292,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":813,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":946,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":622,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":671,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":1149,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":916,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":917,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1183,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":517,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":202,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":1119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":35,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":659,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":1173,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":947,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":176,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":638,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":805,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":23,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":802,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":812,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":83,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":694,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":724,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":693,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":502,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":1089,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":1083,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":1129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1197,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":1206,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":759,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":1127,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":1128,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":419,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":705,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":416,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":918,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":854,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":769,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":630,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":726,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":30,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":1090,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":1040,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":454,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":1157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":1077,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":284,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":447,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":747,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":1116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":1243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":581},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"ec3ff871-3f1f-11e6-909f-09c47d9432eb","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (equator == null) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OnePredicate:54","type":"CtBinaryOperatorImpl"},"failures":[1,2],"tindex":"ec406da2-3f1f-11e6-909f-13f9471f16eb","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().remove(object, count);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object","length":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[3],"tindex":"ec406da3-3f1f-11e6-909f-8954d690d7bb","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec406da4-3f1f-11e6-909f-69d0172c7049","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4094b5-3f1f-11e6-909f-afe2901e6998","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ec4094b6-3f1f-11e6-909f-4b18c4c3ef44","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if ((index % 2) == 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[34,35,36,37,38],"tindex":"ec4094b7-3f1f-11e6-909f-fd427e85479d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4094b8-3f1f-11e6-909f-735d416cb272","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"ec40bbc9-3f1f-11e6-909f-f5c76173bcc0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[63,64],"tindex":"ec40bbca-3f1f-11e6-909f-53aad7a82d22","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl"},"failures":[65,66,67,68,69,70,71,72],"tindex":"ec40bbcb-3f1f-11e6-909f-eba2e76000e8","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec40e2dc-3f1f-11e6-909f-99e9b1ee7e5b","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex != 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"ec40e2dd-3f1f-11e6-909f-db6409ea7708","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtBinaryOperatorImpl"},"failures":[122,123,124,125,126],"tindex":"ec40e2de-3f1f-11e6-909f-6bcad0670867","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index == (-1)) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4109ef-3f1f-11e6-909f-efd86ae2f526","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4109f0-3f1f-11e6-909f-0b4ecb15e195","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl"},"failures":[127,128],"tindex":"ec4109f1-3f1f-11e6-909f-af73ac41af67","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4109f2-3f1f-11e6-909f-7190f5719d1a","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,1,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,2,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"ec413103-3f1f-11e6-909f-fb605924d0b8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (((((nCopies % nCopies) != 0) || ((nCopies % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((nCopies % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((nCopies % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"nCopies","lengthInBits":"nCopies","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"nCopies","otherOffsetInBits":"nCopies","otherLengthInBits":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec413104-3f1f-11e6-909f-2f1de813e972","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec415815-3f1f-11e6-909f-4da4a5bfcde4","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl"},"failures":[451],"tindex":"ec415816-3f1f-11e6-909f-41f6278fff4b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[452,453,454,455,34,35,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,122,123,523,3,524,525,526,527,528,529,101,530,531,532,102,533,534,535,536,537,538,103,539,540,104,541,542,543,544,545,546,547,548,105,549,550,551,106,552,553,554,555,556,557,107,558,559,108,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,113,582,583,584,585,586],"tindex":"ec415817-3f1f-11e6-909f-812a24561650","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[587],"tindex":"ec415818-3f1f-11e6-909f-6b2e306e8222","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[39,40,41,42,43,44,45,46,47,588,589,590,591,592,593,594,48,49,50,51,52,53,595,596,597,54,55,56,57,58,59,60,61,62,598,599,600,601,602,603,604],"tindex":"ec417f29-3f1f-11e6-909f-a198f20dffdb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.util.Map) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"ec417f2a-3f1f-11e6-909f-d3174707557e","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n    } \n    if (criterion == null) {\n        throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n    } \n    return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec417f2b-3f1f-11e6-909f-1b93d814a256","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[605,606,607,608],"tindex":"ec417f2c-3f1f-11e6-909f-87560f7c8e8f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[609],"tindex":"ec41a63d-3f1f-11e6-909f-dfacd5e21196","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[610],"tindex":"ec41a63e-3f1f-11e6-909f-69b36e641ce0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtInvocationImpl"},"failures":[],"tindex":"ec41a63f-3f1f-11e6-909f-a1344694802c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start, current)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"start","left":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl"},"failures":[611,612],"tindex":"ec41cc50-3f1f-11e6-909f-6f9312d17586","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[613],"tindex":"ec41cc51-3f1f-11e6-909f-c71655ca7bbb","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec41cc52-3f1f-11e6-909f-778e72bba6dd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec41cc53-3f1f-11e6-909f-8b16671bfb62","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec41cc54-3f1f-11e6-909f-e9f3b23df304","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec41f365-3f1f-11e6-909f-7bdd2dde03ed","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec41f366-3f1f-11e6-909f-833a5b40661d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[562,565,563,564,566,567,568],"tindex":"ec41f367-3f1f-11e6-909f-a795f4b49c2b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key instanceof java.util.Map.Entry) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    removeIfExpired(key, now());\n                    return super.get(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec41f368-3f1f-11e6-909f-ed4a6037d877","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[614],"tindex":"ec41f369-3f1f-11e6-909f-af61b7e740f0","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630],"tindex":"ec41f36a-3f1f-11e6-909f-d74544087cc3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec421a7b-3f1f-11e6-909f-3b6a36677b4a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec421a7c-3f1f-11e6-909f-37f4ec498c4a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl"},"failures":[631],"tindex":"ec421a7d-3f1f-11e6-909f-cdda7342817a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec421a7e-3f1f-11e6-909f-b395b9f3cbc0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl"},"failures":[632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661],"tindex":"ec421a7f-3f1f-11e6-909f-7f88a80facea","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index >= index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[662,519],"tindex":"ec424190-3f1f-11e6-909f-31e361e59cae","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec424191-3f1f-11e6-909f-c7cb7532e726","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4268a2-3f1f-11e6-909f-bb8dd1e02d2d","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[663],"tindex":"ec4268a3-3f1f-11e6-909f-e7ed8efc13c6","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[664],"tindex":"ec4268a4-3f1f-11e6-909f-d55a7fb985b9","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[665,666,667,668],"tindex":"ec4268a5-3f1f-11e6-909f-794a426e63b7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtInvocationImpl"},"failures":[],"tindex":"ec4268a6-3f1f-11e6-909f-43027d2d2ef1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(insertedNode, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"insertedNode","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec428fb7-3f1f-11e6-909f-ff2545d2692b","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (a instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtBinaryOperatorImpl"},"failures":[669,670,671,672,673,674,675],"tindex":"ec428fb8-3f1f-11e6-909f-6d7201ae57e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[676,677,678,679,680,681,682,683,684,30,685,686,486,496,502,583],"tindex":"ec428fb9-3f1f-11e6-909f-fdbd84ee6cc8","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[687,688,689,690,691,692],"tindex":"ec42b6ca-3f1f-11e6-909f-c5a11957603f","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[693,694,695,696],"tindex":"ec42b6cb-3f1f-11e6-909f-d796e4cf8987","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl"},"failures":[697,698,699,700,701,702,703,704,705,706,707,708,709,710],"tindex":"ec42b6cc-3f1f-11e6-909f-9772d6140be6","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl"},"failures":[711,1,253,256],"tindex":"ec42b6cd-3f1f-11e6-909f-279a596408ce","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl"},"failures":[712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,477,482,751,493,752,100,753,754,755,756,757,758,759,631,760,761,762,763,764,765,766,767,768,769,518,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,519,520,797,798,799,800,801,802,803,804,805,806,807,605,808,809,810,811,812,606,813,814,815,816,817,818,819,820,821,822,823,824,825,607,826,827,608,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152],"tindex":"ec42ddde-3f1f-11e6-909f-59d449772bb9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (newCapacity >= newCapacity) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"newCapacity","index":"newCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec42dddf-3f1f-11e6-909f-5fad389bd1f6","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().remove(object, count);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[1153,1154],"tindex":"ec42dde0-3f1f-11e6-909f-0ffcd116551c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl"},"failures":[1155,1156,1157],"tindex":"ec42dde1-3f1f-11e6-909f-19759aee7d13","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec4304f2-3f1f-11e6-909f-afe08f3baf10","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl"},"failures":[1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,617,618,619,620,1196,621,1197,1198,622,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,624,625,626,627,1223,628,1224,1225,629,1226,1227],"tindex":"ec4304f3-3f1f-11e6-909f-d1a6977f1733","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index == 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[],"tindex":"ec432c04-3f1f-11e6-909f-576c52f24c43","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec432c05-3f1f-11e6-909f-97cef910c836","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec432c06-3f1f-11e6-909f-d94dd3ff1198","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec432c07-3f1f-11e6-909f-9307f0473b22","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end != (array.int)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"array","closures":"array","length":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[1228],"tindex":"ec432c08-3f1f-11e6-909f-a5b8b608e721","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[1229],"tindex":"ec432c09-3f1f-11e6-909f-d36cf8ae6535","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl"},"failures":[1230,1231,1232],"tindex":"ec43531a-3f1f-11e6-909f-95d07cceba80","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if (object == null) {\n                {\n                    if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                        return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtInvocationImpl"},"failures":[],"tindex":"ec43531b-3f1f-11e6-909f-977010520866","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    java.util.List<java.util.Collection<E>>.add(compositeCollection);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"compositeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl"},"failures":[1233],"tindex":"ec43531c-3f1f-11e6-909f-43d1c0526df8","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if ((index < index) || (index > index)) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[1234,1235],"tindex":"ec43531d-3f1f-11e6-909f-39df0e51f689","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec43531e-3f1f-11e6-909f-6d5ef9e58ef3","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtFieldReadImpl"},"failures":[],"tindex":"ec437a2f-3f1f-11e6-909f-3b053ebabb4f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"forceInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec437a30-3f1f-11e6-909f-3d873b8cbc39","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"ec437a31-3f1f-11e6-909f-e90fca2a807e","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtBinaryOperatorImpl"},"failures":[841,839],"tindex":"ec437a32-3f1f-11e6-909f-792e9b1e8499","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec437a33-3f1f-11e6-909f-b561a666ef0c","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec437a34-3f1f-11e6-909f-b9d24aaf2915","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec437a35-3f1f-11e6-909f-d10f3aed5ed2","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if (object == null) {\n                {\n                    if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                        return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec43a146-3f1f-11e6-909f-2504360f1d0b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key instanceof java.util.Map.Entry) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    removeIfExpired(key, now());\n                    return super.get(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[1236,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,1237,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,1238,1239,1240,1241,1242,1243,1244],"tindex":"ec43a147-3f1f-11e6-909f-0f70fd9843f9","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl"},"failures":[1245,124,125,126,1246],"tindex":"ec43a148-3f1f-11e6-909f-21b044656669","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl"},"failures":[1247],"tindex":"ec43a149-3f1f-11e6-909f-098ed9f3b802","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((closure == null) || (closure == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[1248],"tindex":"ec43a14a-3f1f-11e6-909f-e7b5db4a1522","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl"},"failures":[1249,563,564,565,562,1250,566,110,1251,1252,1253,1254,1255,1256,567,568,1257],"tindex":"ec43c85b-3f1f-11e6-909f-fd25ebb76147","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[],"tindex":"ec43c85c-3f1f-11e6-909f-653212b9edaa","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[1258],"tindex":"ec43c85d-3f1f-11e6-909f-b9a0805219ba","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec43c85e-3f1f-11e6-909f-7b6488694efc","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[663,1259],"tindex":"ec43c85f-3f1f-11e6-909f-e9fdec5ba358","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec43c860-3f1f-11e6-909f-7fb9fb73c1d2","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ec43ef71-3f1f-11e6-909f-0b0e6bb1f116","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[1260],"tindex":"ec43ef72-3f1f-11e6-909f-a945832fded8","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtInvocationImpl"},"failures":[],"tindex":"ec43ef73-3f1f-11e6-909f-e7251e3e04e0","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[688,1261,1262],"tindex":"ec43ef74-3f1f-11e6-909f-71e38e756121","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328767911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}