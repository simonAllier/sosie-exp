{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":102,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":525,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":135,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":403,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":446,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":504,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":177,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":659,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":163,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":656,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":683,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":331,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":171,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":131,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":195,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":280,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":108,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":496,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":34,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":264,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":226,"org.apache.commons.collections4.CollectionUtilsTest.get":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":137,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":394,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":452,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":565,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":145,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":538,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":675,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":172,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":321,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":49,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":613,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":624,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":48,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":629,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":551,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":337,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":435,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":188,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":263,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":602,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":373,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":329,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":332,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":122,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":153,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":401,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":571,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":678,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":438,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":505,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":358,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":150,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":690,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":111,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":209,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":530,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":259,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":449,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":141,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":531,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":641,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":349,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":146,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":279,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":462,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":132,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":463,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":217,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":230,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":692,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":5,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":445,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":370,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":397,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":317,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":581,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":336,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":516,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":100,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":344,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":149,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":254,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":441,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":228,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":98,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":257,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":327,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":381,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":568,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":667,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":312,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":475,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":409,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":492,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":630,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":125,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":350,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":686,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":255,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":239,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":374,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":672,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":555,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":272,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":528,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":548,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":589,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":382,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":649,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":238,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":357,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":136,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":183,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":11,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":645,"org.apache.commons.collections4.list.TreeListTest.testRemove":16,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":22,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":439,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":261,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":486,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":676,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":258,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":405,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":498,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":281,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":404,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":455,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":203,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":69,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":301,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":140,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":115,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":227,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":597,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":385,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":178,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":430,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":533,"org.apache.commons.collections4.map.LRUMapTest.testClone":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":684,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":450,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":355,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":410,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":483,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":561,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":386,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":501,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":170,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":179,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":243,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":315,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":233,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":466,"org.apache.commons.collections4.CollectionUtilsTest.get1":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":669,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":241,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":182,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":634,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":421,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":303,"org.apache.commons.collections4.list.TreeListTest.testListEquals":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":643,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":273,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":134,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":607,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":221,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":472,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":576,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":339,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":524,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":224,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":210,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":220,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":680,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":176,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":99,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":584,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":64,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":129,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":509,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":687,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":660,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":532,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":396,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":448,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":620,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":611,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":668,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":677,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":523,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":522,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":521,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":166,"org.apache.commons.collections4.map.LRUMapTest.testReset":478,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":594,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":393,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":271,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":616,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":419,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":354,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":389,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":608,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":637,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":366,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":493,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":626,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":13,"org.apache.commons.collections4.map.LinkedMapTest.testReset":378,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":502,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":426,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":506,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":133,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":527,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":40,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":447,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":627,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":537,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":295,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":586,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":320,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors":612,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":194,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":204,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":314,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":526,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":655,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":252,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":437,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":662,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":151,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":416,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":324,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":408,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":415,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":658,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":406,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":157,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":685,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":638,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":86,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":556,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":418,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":297,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":372,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":184,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":650,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":310,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":540,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":623,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":267,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":285,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":6,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":451,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":474,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":198,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":500,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":679,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":276,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":286,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":362,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":363,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":665,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":444,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":595,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":313,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":250,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":434,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":511,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":534,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":593,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":666,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":334,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":346,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":197,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":488,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":292,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":456,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":583,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":260,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":652,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":244,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":29,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":569,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":352,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":591,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":21,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":208,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":412,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":411,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":168,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":413,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":440,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":600,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":663,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":105,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":388,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":249,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":487,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":216,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":288,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":473,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":218,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":391,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":326,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":71,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":429,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":614,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":294,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":640,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":185,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":25,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":423,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":598,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":606,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":316,"org.apache.commons.collections4.list.TreeListTest.testBug35258":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":253,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":379,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":467,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":513,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":376,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":274,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":167,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":82,"org.apache.commons.collections4.map.LinkedMapTest.testClone":377,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":433,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":653,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":550,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":44,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":539,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":610,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":159,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":155,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":160,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":174,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":573,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":68,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":457,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":609,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":642,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":65,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":88,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":453,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":219,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":268,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":89,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":365,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":499,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":277,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":283,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":369,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":402,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":229,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":554,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":622,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":143,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":94,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":541,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":240,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":625,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":512,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":491,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":617,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":636,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":305,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":266,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":360,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":361,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":359,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":646,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":673,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":543,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":670,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":390,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":635,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":691,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":682,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":371,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":562,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":566,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":55,"org.apache.commons.collections4.map.LRUMapTest.testLRU":479,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":52,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":192,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":570,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":322,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":256,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":330,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":319,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":517,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":247,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":302,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":431,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":671,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":657,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":215,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":443,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":588,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":4,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":518,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":90,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":515,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":265,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":546,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":87,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":395,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":27,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":304,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":482,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":514,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":549,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":0,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":202,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":311},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39df00a6-3f48-11e6-915e-3f05e4b234fc","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (trueClosure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"trueClosure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"39df4ec7-3f48-11e6-915e-57acf9cc20a9","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4],"tindex":"39df4ec8-3f48-11e6-915e-dfb2fe4b2df4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8],"tindex":"39df75d9-3f48-11e6-915e-cd26b014176d","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"39df75da-3f48-11e6-915e-35f1aaec3a99","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index == 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39df9ceb-3f48-11e6-915e-fd4ded75a095","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 instanceof java.lang.Double) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,45],"tindex":"39df9cec-3f48-11e6-915e-25fc1060000e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 instanceof java.util.Map<?, ?>) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39df9ced-3f48-11e6-915e-d32678528efd","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map<?, ?>) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39dfc3fe-3f48-11e6-915e-b938db5c4a12","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:425","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value1 instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (value1 == value2) || (value1.equals(value2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl"},"failures":[46],"tindex":"39dfc3ff-3f48-11e6-915e-51c5b5db311b","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"39dfc400-3f48-11e6-915e-1b0955fe1469","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl"},"failures":[144,145,146,147,148],"tindex":"39dfeb11-3f48-11e6-915e-25540e524af4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39dfeb12-3f48-11e6-915e-479fd5024ae4","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastUsedIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[149],"tindex":"39dfeb13-3f48-11e6-915e-15bc841da2e0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[150,151],"tindex":"39dfeb14-3f48-11e6-915e-9b18f2e23c64","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[45],"tindex":"39e01225-3f48-11e6-915e-a192730ffa0f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e01226-3f48-11e6-915e-f7f02d6fceec","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trueFirst == false) {\n                {\n                    return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"validForUpdate":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[152,153,154,155,156,157],"tindex":"39e01227-3f48-11e6-915e-9fe926d69e03","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:109","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl"},"failures":[158,45,2,3,159,160,161,162,4,1],"tindex":"39e01228-3f48-11e6-915e-3131b0f3326e","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e01229-3f48-11e6-915e-17c1cfab8ad1","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0393a-3f48-11e6-915e-a5b97c05aa53","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0393b-3f48-11e6-915e-f5fe8814fd5f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0393c-3f48-11e6-915e-4db9f7235bac","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if ((list.size()) > (list.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[163,164,165,166,167,168,169],"tindex":"39e0393d-3f48-11e6-915e-a9ebdbb4b4b3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[170],"tindex":"39e0393e-3f48-11e6-915e-15c74c3cd70f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[171],"tindex":"39e0604f-3f48-11e6-915e-49f8100ac327","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e06050-3f48-11e6-915e-5322d18ec352","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e06051-3f48-11e6-915e-85f7c5c34c21","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trueFirst == false) {\n                {\n                    return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl"},"failures":[],"tindex":"39e06052-3f48-11e6-915e-af0abe815c1d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key.isAssignableFrom(key.getReturnType())) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key","method":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[172],"tindex":"39e06053-3f48-11e6-915e-5704a165527d","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index == (-1)) {\n                {\n                    return getEntry(index).getValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e06054-3f48-11e6-915e-dbd3da95cc3f","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (((bitIndex % bitIndex) != 0) || ((bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e08765-3f48-11e6-915e-cfac69c19a8b","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[173],"tindex":"39e08766-3f48-11e6-915e-dbefdf74d709","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e08767-3f48-11e6-915e-07657f371a9a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e08768-3f48-11e6-915e-3f20ac3fc947","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:359","type":"CtInvocationImpl"},"failures":[],"tindex":"39e08769-3f48-11e6-915e-59ead58708b0","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n    for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        out.put(entry.getValue(), entry.getKey());\n    }\n    return out;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[174,175],"tindex":"39e0876a-3f48-11e6-915e-b168e9340916","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0ae7b-3f48-11e6-915e-8f39851a385c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[99,101,102],"tindex":"39e0ae7c-3f48-11e6-915e-470ccd063275","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[176,177],"tindex":"39e0ae7d-3f48-11e6-915e-35af2cbe7412","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key","b":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[178],"tindex":"39e0ae7e-3f48-11e6-915e-51db81d919c9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"39e0ae7f-3f48-11e6-915e-7ffa51967408","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0d590-3f48-11e6-915e-69fd10b44ba2","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtFieldReadImpl"},"failures":[],"tindex":"39e0d591-3f48-11e6-915e-67fad1867a43","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (fromInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeAllowed":"fromInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0d592-3f48-11e6-915e-5144693ca3e3","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (estimatedSize >= estimatedSize) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"estimatedSize","end":"estimatedSize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"39e0d593-3f48-11e6-915e-5f01092a3c99","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0d594-3f48-11e6-915e-99dd0e8b5144","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl"},"failures":[277,278,279,280,281,282,283,284,285,286,287],"tindex":"39e0d595-3f48-11e6-915e-475afd029f43","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.String) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e0fca6-3f48-11e6-915e-43f653a1564c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[288,289],"tindex":"39e0fca7-3f48-11e6-915e-fdc51fc53c9c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,4,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,178,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,172,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543],"tindex":"39e0fca8-3f48-11e6-915e-b39961301181","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e123b9-3f48-11e6-915e-8b0430867d30","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl"},"failures":[544,545,546],"tindex":"39e123ba-3f48-11e6-915e-35472060f266","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e123bb-3f48-11e6-915e-d5c39c90d8a9","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl"},"failures":[547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606],"tindex":"39e123bc-3f48-11e6-915e-2f7efd25d612","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[607,608],"tindex":"39e123bd-3f48-11e6-915e-8fb36b61bf4b","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection.isEmpty()) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtUnaryOperatorImpl"},"failures":[609,610],"tindex":"39e123be-3f48-11e6-915e-c7238c95c6dd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (!(prior.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"prior"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e14acf-3f48-11e6-915e-fbe6aa476c92","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[611],"tindex":"39e14ad0-3f48-11e6-915e-ab1850e946b8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl"},"failures":[612,613],"tindex":"39e14ad1-3f48-11e6-915e-3ff7116cec5e","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:137","type":"CtMethodImpl","sourcecode":"public int compare(final java.lang.Boolean b1, final java.lang.Boolean b2) {\n    if (b2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = b1.booleanValue();\n            final boolean boolean = b2.booleanValue();\n            return v1 ^ v2 ? v1 ^ (boolean) ? 1 : -1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"b2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[614,615,616,617,618,619,620,621,622,623,624],"tindex":"39e14ad2-3f48-11e6-915e-31accda5ac45","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e171e3-3f48-11e6-915e-57061f19252c","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (array != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl"},"failures":[625],"tindex":"39e171e4-3f48-11e6-915e-b5d31cb7fbe1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e171e5-3f48-11e6-915e-9357bf937f20","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e171e6-3f48-11e6-915e-9759aff91501","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index == (-1)) {\n                {\n                    return getEntry(index).getValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtInvocationImpl"},"failures":[139,143,116,120,124],"tindex":"39e171e7-3f48-11e6-915e-d1bd5a4e314e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[626],"tindex":"39e198f8-3f48-11e6-915e-716675fbefc8","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e198f9-3f48-11e6-915e-3f280753fe88","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e198fa-3f48-11e6-915e-af103882454f","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == index) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e198fb-3f48-11e6-915e-4d5f3d3d6639","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl"},"failures":[627,628],"tindex":"39e198fc-3f48-11e6-915e-6f45f3df1a2d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl"},"failures":[],"tindex":"39e198fd-3f48-11e6-915e-a3713ae9a6ed","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null ? key == null : nextElement.equals(p)) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"key","nextElement":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e1c00e-3f48-11e6-915e-47f651149fb4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[629],"tindex":"39e1c00f-3f48-11e6-915e-cfa52dd9d798","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e1c010-3f48-11e6-915e-1b2b3e7199aa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e1c011-3f48-11e6-915e-6792dd110fb1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"h","left":"h","h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e1e722-3f48-11e6-915e-bd1879b3d436","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e1e723-3f48-11e6-915e-5d43c3e8eb09","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e20e34-3f48-11e6-915e-e1585792334e","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e20e35-3f48-11e6-915e-d506dacbfcab","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl"},"failures":[630,631,632,633],"tindex":"39e20e36-3f48-11e6-915e-e9b4828b3082","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label == null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e20e37-3f48-11e6-915e-3f04c724cfc3","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl"},"failures":[47,48,52,49,51,50,53,54,55,56,57,58,59,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,93,90,92,91,95,96,97,98,99,100,101,102,103,94,104,105,106,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"39e20e38-3f48-11e6-915e-215d6d22602f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674],"tindex":"39e23549-3f48-11e6-915e-0ba92863cbed","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[47,48,52,49,50,51,53,54,55,56,57,58,59,75,76,77,78,79,80,81,82,83,84,675,85,676,86,87,88,89,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,677,678,679,680,681,682,683,684],"tindex":"39e2354a-3f48-11e6-915e-576375b17a1e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[685],"tindex":"39e2354b-3f48-11e6-915e-cd1f91efb198","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e2354c-3f48-11e6-915e-a12035e5d8e4","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(n)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            if ((((n % 2) != 0) && ((delta - n) <= n)) && (k <= (delta + d))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.util.EmptyStackException();\n            } else {\n                {\n                    final int int = ((size()) - n) - 1;\n                    if (m < 0) {\n                        throw new java.util.EmptyStackException();\n                    } else {\n                        return get(m);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"n","delta":"n","k":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e25c5d-3f48-11e6-915e-b75d9e91125e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[686],"tindex":"39e25c5e-3f48-11e6-915e-f9a9464e1d4f","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e25c5f-3f48-11e6-915e-a5f13d214568","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"key","position2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e25c60-3f48-11e6-915e-936e5bec1588","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e28371-3f48-11e6-915e-491a14321e63","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e28372-3f48-11e6-915e-9d06a19598be","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if ((i >= 0) && (bitIndex < i)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"i","bitIndex":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[63,116],"tindex":"39e28373-3f48-11e6-915e-934d7c444e0c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtBinaryOperatorImpl"},"failures":[687],"tindex":"39e28374-3f48-11e6-915e-ff189ebbf122","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[688,689,690,691,692],"tindex":"39e28375-3f48-11e6-915e-25b9e80ad335","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e2aa86-3f48-11e6-915e-473b683ec805","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl"},"failures":[],"tindex":"39e2aa87-3f48-11e6-915e-55d80b5d2c17","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(n)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            if ((((n % 2) != 0) && ((delta - n) <= n)) && (k <= (delta + d))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.util.EmptyStackException();\n            } else {\n                {\n                    final int int = ((size()) - n) - 1;\n                    if (m < 0) {\n                        throw new java.util.EmptyStackException();\n                    } else {\n                        return get(m);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e3e308-3f48-11e6-915e-87c78348f491","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"39e3e309-3f48-11e6-915e-4709a507dd59","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194884/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}