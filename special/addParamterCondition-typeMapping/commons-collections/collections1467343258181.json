{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":472,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":534,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":415,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":605,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":151,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":432,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":114,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":302,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":475,"org.apache.commons.collections4.CollectionUtilsTest.collect":205,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":755,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":309,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":735,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":757,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":756,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":673,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":186,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":745,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":453,"org.apache.commons.collections4.CollectionUtilsTest.get":178,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":586,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":611,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":517,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":445,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":64,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":244,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":185,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":591,"org.apache.commons.collections4.CollectionUtilsTest.select":160,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":764,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":219,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":417,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":679,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":362,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":487,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":577,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":676,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":741,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":255,"org.apache.commons.collections4.CollectionUtilsTest.intersection":184,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":479,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":521,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":622,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":192,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":277,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":403,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":604,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":245,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":84,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":83,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":82,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":358,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":227,"org.apache.commons.collections4.map.CompositeMapTest.testPut":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":562,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":40,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":214,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":373,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":189,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":559,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":669,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":664,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":268,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":507,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":483,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":723,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":553,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":157,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":576,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":194,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":247,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":314,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":639,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":146,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":367,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":543,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":598,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":175,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":736,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":329,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":658,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":697,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":300,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":464,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":538,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":396,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":407,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":573,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":304,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":515,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":776,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":69,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":524,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":710,"org.apache.commons.collections4.CollectionUtilsTest.get1":180,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":76,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":164,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":121,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":454,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":449,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":229,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":222,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":488,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":557,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":684,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":774,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":109,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":471,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":182,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":295,"org.apache.commons.collections4.CollectionUtilsTest.exists":7,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":705,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":677,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":328,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":410,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":722,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":93,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":279,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":520,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":672,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":73,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":749,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":739,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":716,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":382,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":680,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":352,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":718,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":4,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":437,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":495,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":650,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":610,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":376,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":703,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":284,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":150,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":603,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":288,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":497,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":232,"org.apache.commons.collections4.map.HashedMapTest.testClone":595,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":17,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":15,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":644,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":659,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":564,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":168,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":490,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":158,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":282,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":142,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":570,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":313,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":165,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":31,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":738,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":516,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":97,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":10,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":693,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":692,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":689,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":688,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":691,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":690,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":685,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":269,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":687,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":125,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":686,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":235,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":455,"org.apache.commons.collections4.ListUtilsTest.testSelect":237,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":732,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":273,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":323,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":372,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":224,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":509,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":531,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":215,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":544,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":656,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":463,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":616,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":549,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":612,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":67,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":397,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":575,"org.apache.commons.collections4.CollectionUtilsTest.find":179,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":752,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":733,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":420,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":712,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":260,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":503,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":251,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":709,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":760,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":759,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":181,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":734,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":75,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":701,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":765,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":627,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":491,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":444,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":563,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":589,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":257,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":369,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":228,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":728,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":613,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":725,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":395,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":386,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":30,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":467,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":166,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":12,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":301,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":366,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":394,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":297,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":661,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":236,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":105,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":476,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":299,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":694,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":212,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":624,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":773,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":737,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":140,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":365,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":117,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":481,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":542,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":107,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":477,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":141,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":199,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":331,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":753,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":414,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":754,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":249,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":110,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":498,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":526,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":766,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":706,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":508,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":113,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":68,"org.apache.commons.collections4.CollectionUtilsTest.transform2":144,"org.apache.commons.collections4.CollectionUtilsTest.transform1":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":441,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":341,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":211,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":306,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":597,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":391,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":45,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":731,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":43,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":118,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":721,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":248,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":608,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":112,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":506,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":567,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":400,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":152,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":289,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":139,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":682,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":588,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":413,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":253,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":434,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":116,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":392,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":600,"org.apache.commons.collections4.map.CompositeMapTest.testGet":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":667,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":666,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":190,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":527,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":633,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":57,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":419,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":156,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":720,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":529,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":719,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":287,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.CollectionUtilsTest.union":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":518,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":405,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":643,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":41,"org.apache.commons.collections4.list.TreeListTest.testRemove":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":433,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":474,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":769,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":401,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":775,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":541,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":539,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":223,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":78,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":46,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":256,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":363,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":711,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":609,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":574,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":270,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":389,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":250,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":625,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":707,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":442,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":171,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":501,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":193,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":641,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":74,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":747,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":226,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":717,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":100,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":6,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":371,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":225,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":207,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":528,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":440,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":742,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":201,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":91,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":485,"org.apache.commons.collections4.CollectionUtilsTest.filter":153,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":311,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":310,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":387,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":423,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":606,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":347,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":131,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":654,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":254,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":439,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":204,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":77,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":744,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":104,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":771,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":119,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":670,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":210,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":653,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":281,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":590,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":695,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":714,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":145,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":632,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":148,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":422,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":727,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":770,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":581,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":312,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":582,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":675,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":763,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":649,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":133,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":740,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":72,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":108,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":652,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":271,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":188,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":514,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":729,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":615,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":159,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":446,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":565,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":708,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":213,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":9,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":196,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":378,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":406,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":170,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":197,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":465,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":8,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":174,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":492,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":326,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":566,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":637,"org.apache.commons.collections4.set.CompositeSetTest.testContains":132,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":231,"org.apache.commons.collections4.CollectionUtilsTest.isFull":155,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":259,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":390,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":428,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":626,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":699,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":187,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":209,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":63,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":646,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":1,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":601,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":115,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":702,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":375,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":221,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":283,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":696,"org.apache.commons.collections4.CollectionUtilsTest.reverse":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":461,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":459,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":261,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":384,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":450,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":59,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":715,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":421,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":298,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":296,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":555,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":587,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":554,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":62,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":473,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":762,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":402,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":547,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":321,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":579,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":580,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":345,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":578,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":617,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":635,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":267,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":480,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":290,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":571,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":713,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":618,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":513,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":0,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":379,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":447,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":648,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":561,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":751,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":558,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":743,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":569,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":500,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":315,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":14,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":137,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":638,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":772,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":620,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":411,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":523,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":502,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":438,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":318,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":60,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":704,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":436,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":426,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":332},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"d4307fb3-3f3a-11e6-8f98-17fa014f62e7","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5],"tindex":"d430cdd4-3f3a-11e6-8f98-45b925feade6","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index == (-1)) {\n        {\n            if (index == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = index - (int);\n                    if (indexRelativeToMe <= 0) {\n                        return insertOnLeft(indexRelativeToMe, obj);\n                    } \n                    return insertOnRight(indexRelativeToMe, obj);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtVariableReadImpl"},"failures":[],"tindex":"d430cdd5-3f3a-11e6-8f98-f77711a3e8bf","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtFieldReadImpl"},"failures":[6],"tindex":"d430f4e6-3f3a-11e6-8f98-7fa0f09bef45","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (doLoop) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"doLoop"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[7],"tindex":"d4316a17-3f3a-11e6-8f98-55d5430b486c","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"d4316a18-3f3a-11e6-8f98-cf9583f54f7a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d431b839-3f3a-11e6-8f98-fdf7f32d0642","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl"},"failures":[57],"tindex":"d431b83a-3f3a-11e6-8f98-f93ee814d172","method":{"position":"org.apache.commons.collections4.set.CompositeSet:367","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Set<E> set1, final java.util.Set<E> set2) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set1, set2).size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComposited(set1);\n            addComposited(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set2","existingSet":"set1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl"},"failures":[58],"tindex":"d431b83b-3f3a-11e6-8f98-9df09d325c59","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"offsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[59,60,61,62],"tindex":"d43317cc-3f3a-11e6-8f98-a74b80195283","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[63,64,65,66,67,68,69,70,71],"tindex":"d4333edd-3f3a-11e6-8f98-1799cc159239","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d43365ee-3f3a-11e6-8f98-f59f8a447e59","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d43365ef-3f3a-11e6-8f98-a54cdea9df6d","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl"},"failures":[],"tindex":"d43365f0-3f3a-11e6-8f98-ddceab215db4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl"},"failures":[72,73],"tindex":"d43365f1-3f3a-11e6-8f98-d177ad0a7c21","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"d43365f2-3f3a-11e6-8f98-2fd2aeb92eb1","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (null == key) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4338d03-3f3a-11e6-8f98-7765346a9898","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4338d04-3f3a-11e6-8f98-a9ed4f415a44","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[91,92,93,94,95],"tindex":"d4338d05-3f3a-11e6-8f98-3d97f7deed4a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4338d06-3f3a-11e6-8f98-c1b28d344cb9","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4338d07-3f3a-11e6-8f98-b3b6d7c5f718","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[96,49],"tindex":"d433b418-3f3a-11e6-8f98-f158d62ae7a0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d433b419-3f3a-11e6-8f98-037d0f0dba8a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d433b41a-3f3a-11e6-8f98-df298ca91c77","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl"},"failures":[97],"tindex":"d433b41b-3f3a-11e6-8f98-8bc6ab2e8166","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl"},"failures":[98,99],"tindex":"d433b41c-3f3a-11e6-8f98-f31cc1eee245","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (transformerFactory == null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"transformerFactory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d433b41d-3f3a-11e6-8f98-1d6bcd491e7c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl"},"failures":[100],"tindex":"d433db2e-3f3a-11e6-8f98-0ff06e802bee","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[101],"tindex":"d433db2f-3f3a-11e6-8f98-5b74ea55f6c4","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d433db30-3f3a-11e6-8f98-8dfd1c6aa974","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl"},"failures":[102],"tindex":"d433db31-3f3a-11e6-8f98-5f9a81808bfa","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[103],"tindex":"d433db32-3f3a-11e6-8f98-83d3a12c6fbc","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                        while (i.hasNext()) {\n                            final java.lang.Object java.lang.Object = i.next();\n                            final boolean boolean = remove(obj, getCount(obj));\n                            result = result || changed;\n                        }\n                        return result;\n                    } else {\n                        return decorated().removeAll(null);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl"},"failures":[104],"tindex":"d4342953-3f3a-11e6-8f98-7778da3e1bfe","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4342954-3f3a-11e6-8f98-cf644bdfc135","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.lang.Short) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4342955-3f3a-11e6-8f98-9f0d190ab0fc","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                        while (i.hasNext()) {\n                            final java.lang.Object java.lang.Object = i.next();\n                            final boolean boolean = remove(obj, getCount(obj));\n                            result = result || changed;\n                        }\n                        return result;\n                    } else {\n                        return decorated().removeAll(null);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4342956-3f3a-11e6-8f98-c9b0498e61f6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b instanceof java.util.Set<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[72,73,100,105],"tindex":"d4345067-3f3a-11e6-8f98-cbcc9d051ae4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (null != key4) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[106],"tindex":"d4345068-3f3a-11e6-8f98-89a90fe57130","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4345069-3f3a-11e6-8f98-f375caee8c64","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"hashCode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,57,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,7,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,66,22,232,50,233,234,235,71,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"d434777a-3f3a-11e6-8f98-69ec55f68d01","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl"},"failures":[341,342],"tindex":"d434777b-3f3a-11e6-8f98-7f7293e3ddeb","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (currentSize <= currentSize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"currentSize","newCapacity":"currentSize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"d4349e8c-3f3a-11e6-8f98-f7ea6eb14105","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:162","type":"CtVariableReadImpl"},"failures":[],"tindex":"d4349e8d-3f3a-11e6-8f98-45c86e6af266","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"makeClone":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[362,363,364],"tindex":"d4349e8e-3f3a-11e6-8f98-cbb7494e2a74","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl"},"failures":[365],"tindex":"d434c59f-3f3a-11e6-8f98-8569321111e0","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d434c5a0-3f3a-11e6-8f98-5b9c388cf3d0","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object instanceof java.lang.Byte) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                        return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d434c5a1-3f3a-11e6-8f98-c9d96ed65008","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if ((elements.size()) > (elements.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"elements","list2":"elements"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d434c5a2-3f3a-11e6-8f98-c16fa63cfd1b","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"normalMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d434c5a3-3f3a-11e6-8f98-3305ecec79d5","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[366],"tindex":"d434ecb4-3f3a-11e6-8f98-699b4ced5a76","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl"},"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404],"tindex":"d434ecb5-3f3a-11e6-8f98-a7998c145c21","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[],"tindex":"d434ecb6-3f3a-11e6-8f98-914e83a20c50","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl"},"failures":[405,406],"tindex":"d434ecb7-3f3a-11e6-8f98-413b2c2f582b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > index) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,362,426,427,428,429,430,363,364],"tindex":"d434ecb8-3f3a-11e6-8f98-e5e4f1c0d6bc","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[431],"tindex":"d434ecb9-3f3a-11e6-8f98-ffcbf4f45273","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d43513ca-3f3a-11e6-8f98-816352722f9b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[432,433,434,435,436],"tindex":"d43513cb-3f3a-11e6-8f98-6ba4bee11f29","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (!(key instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl"},"failures":[437,438,439],"tindex":"d43513cc-3f3a-11e6-8f98-31edb31dd34a","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 4) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtBinaryOperatorImpl"},"failures":[440,441,442,443,444],"tindex":"d43513cd-3f3a-11e6-8f98-5111a27e6cf0","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cur":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d43513ce-3f3a-11e6-8f98-7fbe15a29377","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl"},"failures":[],"tindex":"d43513cf-3f3a-11e6-8f98-01d3556cd6d1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[445,446,447,448,8,449,450,91,92,451,452,9,10,453,11,12,454,13,14,15,455,16,17,456,457,458,459,18,19,20,21,96,460,461,22,462,463,464,23,465,24,25,26,466,467,27,468,469,93,94,470,95,28,471,472,29,473,30,31,32,474,33,34,475,35,36,37,476,38,39,477,40,478,479,41,42,480,481,482,43,44,45,46,47,48,49,483,484,50,51,485,486,52,53,54,55,56],"tindex":"d4353ae0-3f3a-11e6-8f98-f1d8960812cc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4353ae1-3f3a-11e6-8f98-e5c83fd18447","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4353ae2-3f3a-11e6-8f98-3588a878c200","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object instanceof java.lang.Byte) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                        return true;\n                    } \n                    if (null == object) {\n                        return false;\n                    } \n                    if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                        final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                        return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[487],"tindex":"d4353ae3-3f3a-11e6-8f98-f169391c1805","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4353ae4-3f3a-11e6-8f98-c317d078463e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b instanceof java.util.Set<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d43561f5-3f3a-11e6-8f98-8f11e6b34c4e","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[488],"tindex":"d43561f6-3f3a-11e6-8f98-9d7ffd431281","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d43561f7-3f3a-11e6-8f98-a1907a51e263","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl"},"failures":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,72,105,73,100,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,316,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,319,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,322,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,334,671,672,673,674,675,676,677,678],"tindex":"d43561f8-3f3a-11e6-8f98-3faf48122fa2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:535","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode >= hashCode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode","threshold":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[679],"tindex":"d43561f9-3f3a-11e6-8f98-9de5443df297","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"d435890a-3f3a-11e6-8f98-35420412fb87","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (!forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435890b-3f3a-11e6-8f98-37b207e79b31","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435890c-3f3a-11e6-8f98-0baa03b281b7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl"},"failures":[431,0],"tindex":"d435890d-3f3a-11e6-8f98-c759fbe995d1","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[680],"tindex":"d435890e-3f3a-11e6-8f98-33be80a67714","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435890f-3f3a-11e6-8f98-7f24e0c44383","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index == (-1)) {\n        {\n            if (index == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = index - (int);\n                    if (indexRelativeToMe <= 0) {\n                        return insertOnLeft(indexRelativeToMe, obj);\n                    } \n                    return insertOnRight(indexRelativeToMe, obj);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[508,584,681,624,668,682,683,684],"tindex":"d4358910-3f3a-11e6-8f98-f7a79ba42ef1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435b021-3f3a-11e6-8f98-874f3283448c","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl"},"failures":[685,686,687,688,689,690,691,692,693,694,695,696,155,200],"tindex":"d435b022-3f3a-11e6-8f98-836885ae36c1","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index <= 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435b023-3f3a-11e6-8f98-c7a79c45eb90","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[697,698,699,700,701,702,703,704,705,103],"tindex":"d435b024-3f3a-11e6-8f98-1d842311c0a0","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[706,707,390,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,697],"tindex":"d435b025-3f3a-11e6-8f98-6388e1db89ca","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:310","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435b026-3f3a-11e6-8f98-85c8af6ae989","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loop":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,348,739,740,741,742,743,744,745,746,747,748,749,750,751],"tindex":"d435d737-3f3a-11e6-8f98-454094a11417","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435d738-3f3a-11e6-8f98-25004d51ae54","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (defaultValue != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d435d739-3f3a-11e6-8f98-4fc2a7dc19ed","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Integer) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"d435d73a-3f3a-11e6-8f98-d79fab2453e7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (!toInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previousObjectSet":"toInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl"},"failures":[752],"tindex":"d435d73b-3f3a-11e6-8f98-bf19d2a6ac3f","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl"},"failures":[753,754,555,553,563,570,573,581,582,583,587,590,591,592,593,594],"tindex":"d435fe4c-3f3a-11e6-8f98-f7708516fc37","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Integer) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[755,756,757,758,759,760,761,762],"tindex":"d435fe4d-3f3a-11e6-8f98-c545243d3df2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[763],"tindex":"d435fe4e-3f3a-11e6-8f98-91630fb7aa75","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (trueTransformer == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"trueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"d436255f-3f3a-11e6-8f98-4986ae4c18eb","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4362560-3f3a-11e6-8f98-0f9cd392103b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4362561-3f3a-11e6-8f98-75c2c649c36a","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4362562-3f3a-11e6-8f98-43faf96d5dd3","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4362563-3f3a-11e6-8f98-0b16887e4b2e","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[764,765,766,767,768,769,770,771,772,773,774,775],"tindex":"d4362564-3f3a-11e6-8f98-db1dca3c0354","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"d4364c75-3f3a-11e6-8f98-33e4b1ad04b9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:733","type":"CtMethodImpl","sourcecode":"protected void setNextNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next) {\n    if (next == next) {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"next","header":"next"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[776],"tindex":"d4364c76-3f3a-11e6-8f98-0d0a82998470","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:446","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}