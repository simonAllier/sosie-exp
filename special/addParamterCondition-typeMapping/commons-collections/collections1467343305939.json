{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":181,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":541,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":1081,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":337,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":104,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSimpleSerialization":996,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":229,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":829,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":977,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":461,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":574,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":23,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":896,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":190,"org.apache.commons.collections4.CollectionUtilsTest.collect":511,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":961,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":871,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":629,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":382,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":890,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":140,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":278,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":864,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":609,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":1074,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":473,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":59,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":925,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":1069,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":641,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":73,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":542,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":556,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":130,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":279,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":1025,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":128,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":621,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":744,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":945,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":960,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":820,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":888,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":863,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":218,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":341,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":356,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":227,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":391,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":485,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":576,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":497,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":760,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":957,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":15,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":691,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":967,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":12,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":144,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":1030,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":594,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":825,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":946,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":781,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":780,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":233,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":256,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":779,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":310,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":401,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":912,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":439,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":272,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":476,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":148,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":906,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":369,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":745,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":1062,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":1026,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":483,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":914,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":93,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":198,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":659,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":259,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":855,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":423,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":102,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":2,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":644,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":876,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":749,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":751,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":750,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":824,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":469,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":434,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":795,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":1082,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":22,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":715,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":168,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":944,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":886,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":658,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":317,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":1102,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":529,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":931,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":550,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":850,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":1021,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":371,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":458,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":257,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":792,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":384,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":338,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":1003,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":1032,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":984,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":975,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":1104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":164,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":947,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":1050,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":543,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":545,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":860,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":115,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":634,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":322,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":86,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":368,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":522,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":504,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":69,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":703,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":531,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":1029,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":65,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":1065,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":18,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":1077,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":143,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":719,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":506,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":97,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":1095,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":1075,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":496,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":879,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":826,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":394,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":331,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":228,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":584,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":472,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":375,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":935,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":1002,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":408,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":407,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":406,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":110,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":1010,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":753,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":861,"org.apache.commons.collections4.map.LRUMapTest.testReset":363,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":575,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":664,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":1024,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":270,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":773,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":57,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":1038,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":720,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":791,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":484,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":275,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":276,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":463,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":237,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":510,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":862,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":554,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":175,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":968,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":324,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsSelfHashCode":998,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":774,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":377,"org.apache.commons.collections4.map.LinkedMapTest.testReset":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":601,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":908,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":392,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":527,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":452,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":868,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":788,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":810,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":1039,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":858,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":893,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":735,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":411,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":1054,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":665,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":909,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":783,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":1099,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":297,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":822,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":1093,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":433,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":1070,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":573,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":453,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":892,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":979,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":54,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":450,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":467,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":352,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":1046,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":5,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":902,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":928,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":595,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":633,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":711,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":509,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":1092,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":1048,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":905,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":477,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":662,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":540,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":712,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":873,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":149,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":622,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":1040,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":146,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":964,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":580,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":880,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":899,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":577,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":589,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":590,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":849,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":373,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":250,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":852,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":878,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":1041,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":464,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":910,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":872,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":640,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":971,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426":224,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":1,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":800,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":799,"org.apache.commons.collections4.SetUtilsTest.testHashCode":125,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":798,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":645,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":854,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":660,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":346,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":1100,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":923,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":347,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":185,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":323,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":523,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":326,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":866,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":560,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":680,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":630,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":139,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":835,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":602,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":267,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":357,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testFullIterator":990,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":676,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":689,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":118,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":312,"org.apache.commons.collections4.list.TreeListTest.testBug35258":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":147,"org.apache.commons.collections4.map.LinkedMapTest.testClone":316,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":983,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":782,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":1106,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":904,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":14,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":551,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":519,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":424,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":163,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":254,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":378,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":366,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":784,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":557,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":734,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":611,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":769,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":768,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":167,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":978,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":1080,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectEqualsSelf":992,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":1058,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":103,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":265,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":532,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":499,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":336,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":870,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":796,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":1107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":790,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":155,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":900,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":479,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":422,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":804,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":593,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":266,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":764,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":991,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":981,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":587,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":1108,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":379,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":508,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":1031,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":932,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":962,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":626,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":643,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":1053,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":955,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":493,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":898,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":492,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":942,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":491,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":918,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":623,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":1068,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":721,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":776,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":639,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":1036,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":934,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":1042,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":325,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":585,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":973,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":638,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":959,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":642,"org.apache.commons.collections4.map.LRUMapTest.testLRU":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":613,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":778,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":839,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":646,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":1017,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":121,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":940,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":696,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":111,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":261,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":301,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":803,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":24,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":604,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":298,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":402,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":897,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":686,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":108,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":856,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":284,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":980,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":741,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":184,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":442,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":171,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":400,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":152,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":142,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":84,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":976,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":929,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":786,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":425,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":399,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":81,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":869,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsContract":997,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":17,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":661,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":558,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":515,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":410,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":194,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":765,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":733,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":600,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":596,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":462,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":933,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":742,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":705,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":421,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":238,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":1089,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":966,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":882,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":204,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":549,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":50,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":454,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":196,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":700,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":117,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":197,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":329,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":333,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":823,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":614,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":793,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":837,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":816,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":300,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":951,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":827,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":859,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":1023,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":1049,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":533,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":730,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":901,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":247,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":1087,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":513,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":950,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":828,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":26,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":137,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":448,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":647,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":965,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":982,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":922,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":702,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":694,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":656,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":920,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":207,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":1007,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":208,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":269,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":206,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalFullCollectionExists":993,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":415,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":949,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":1056,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":495,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":562,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":865,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":808,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":72,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":809,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":807,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":579,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":770,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":332,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":41,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":273,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":650,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":61,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":1103,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":757,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":568,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":930,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":754,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":82,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":831,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":503,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":1014,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":853,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":334,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":986,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":895,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":306,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":71,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":1055,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":867,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":534,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":291,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":707,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":843,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":343,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":380,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":440,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalEmptyCollectionExists":995,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":536,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":95,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":801,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":89,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":818,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":785,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":1000,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":903,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":525,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":457,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":1015,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":921,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":1009,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":628,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":318,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":1057,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":526,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":845,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":500,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":919,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":195,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":126,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":246,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":857,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":1097,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":201,"org.apache.commons.collections4.list.TreeListTest.testRemove":444,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":748,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":729,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":113,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":887,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":21,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":727,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":1028,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":610,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":695,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":838,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":548,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":339,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":546,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":1094,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":1016,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":1083,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":608,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":758,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":455,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":564,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":211,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":210,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":209,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":100,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":926,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":958,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":669,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":668,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":819,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":667,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":418,"org.apache.commons.collections4.map.LRUMapTest.testClone":376,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":907,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":637,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":814,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":813,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":812,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":954,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":963,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":952,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":381,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":802,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":938,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":953,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":553,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":244,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":681,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":1004,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":1022,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":943,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":588,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":794,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":1052,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":481,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":713,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":1033,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":737,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":617,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":1013,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":35,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":60,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":76,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":913,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":7,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":516,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":683,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":684,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":1105,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":1073,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":817,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":535,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":619,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":285,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":119,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":915,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":465,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":217,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":916,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":1085,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":874,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":603,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":263,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":353,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":40,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":445,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":582,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":972,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":1005,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":1101,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":833,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":91,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":1067,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":848,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":3,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":388,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":449,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":192,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":1019,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":428,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":841,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":1044,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":655,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":299,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":1064,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":677,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":731,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":738,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":10,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":1096,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":739,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":293,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":281,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":722,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":723,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":174,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":832,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":948,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":350,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":303,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":342,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":672,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":1045,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":252,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":552,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":460,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":151,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":283,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":840,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":970,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":561,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":289,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":688,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":1078,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":79,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":881,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":386,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":435,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":1098,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":844,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":726,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":1008,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":514,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":292,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":307,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":884,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":766,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":714,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":740,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":572,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEqualsNull":994,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":759,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":728,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":251,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":438,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":232,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":396,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":419,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":736,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":85,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":1006,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":692,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":122,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":755,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":521,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":235,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":666,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":652,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":956,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":127,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":877,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":1072,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":52,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":836,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":569,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":138,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":1060,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":109,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":116,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":693,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":567,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":124,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":243,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":305,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":710,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":654,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":697,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":708,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":1001,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":166,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":132,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":1043,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":937,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":789,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":1061,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":1020,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":6,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":625,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":443,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":478,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":627,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":821,"org.apache.commons.collections4.set.CompositeSetTest.testContains":842,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":295,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":1071,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":398,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":1034,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":1063,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":571,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":1027,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":851,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":671,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":446,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":830,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":1011,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":883,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":606,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":45,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":53,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":31,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":939,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":917,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":153,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":679,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":787,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":248,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":969,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":927,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":133,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":941,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":42,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":44,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":43,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":732,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":974,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":834,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":806,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":239,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":583,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":112,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":777,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":746,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":936,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":162,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":486,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":675,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":632,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":202,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":811,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":183,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":502,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":230,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":555,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":797,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":87,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":271,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":466,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":1059,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":1084,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":488,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":489,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":490,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":894,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":203,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":280,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":1018,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":88,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":586,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":1076,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":498,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":885,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":512,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":1079,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":924,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":395,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSerializeDeserializeThenCompare":999,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":135,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":762,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":234,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":987,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":129,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":1035,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":598,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":1086,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":286,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":1088,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":4,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":507,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":891,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":240,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator":988,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":1051,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":616,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":367,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":704,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":846,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":911,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":145,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":847,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":90,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":405,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":1091,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":815,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":889,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":311,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":403,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":404,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":1090,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":262,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":74,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":68,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":27,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEmptyIterator":989,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":530,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":1047,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":9,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":365,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":1066,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":620,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":875,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":1012,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":1037,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":772,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":985},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a7a3c8-3f3a-11e6-ba30-7bc34fe0b6cb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:801","type":"CtMethodImpl","sourcecode":"void setRemoved(final boolean flag) {\n    if (flag == true) {\n        {\n            org.apache.commons.collections4.map.Flat3Map.FlatMapEntry.this.boolean = flag;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"flag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a7f1e9-3f3a-11e6-ba30-9d167e98470c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl"},"failures":[0,1,2],"tindex":"f0a7f1ea-3f3a-11e6-ba30-b1afc9b0e3ab","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index == 0) {\n                {\n                    validate(object);\n                    decorated().add(index, object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a7f1eb-3f3a-11e6-ba30-6583e7ae1741","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a7f1ec-3f3a-11e6-ba30-a10fe266fd2b","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a818fd-3f3a-11e6-ba30-adefa2ed0c8c","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a818fe-3f3a-11e6-ba30-1fd7298d924b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[3,4],"tindex":"f0a818ff-3f3a-11e6-ba30-ab32a779209c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"f0a81900-3f3a-11e6-ba30-b15f1e421fff","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a84011-3f3a-11e6-ba30-fdd878f2b88f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a84012-3f3a-11e6-ba30-55b7804a6ecd","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[31],"tindex":"f0a84013-3f3a-11e6-ba30-a5ec62b3e731","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtBinaryOperatorImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"f0a84014-3f3a-11e6-ba30-730cdb770b12","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[81],"tindex":"f0a86725-3f3a-11e6-ba30-4f6cbcc9235e","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl"},"failures":[82,83],"tindex":"f0a86726-3f3a-11e6-ba30-516ee6e302c0","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a86727-3f3a-11e6-ba30-af895d5c42e0","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                {\n                    return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a86728-3f3a-11e6-ba30-9db7f44b83e2","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    return java.util.Collections.synchronizedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[84,84,85,85,86],"tindex":"f0a88e39-3f3a-11e6-ba30-116b13248f37","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a88e3a-3f3a-11e6-ba30-09dd15a24570","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl"},"failures":[],"tindex":"f0a88e3b-3f3a-11e6-ba30-afc9709d14fc","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[87],"tindex":"f0a88e3c-3f3a-11e6-ba30-b1f9db704b08","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl"},"failures":[88],"tindex":"f0a88e3d-3f3a-11e6-ba30-df4ea8dc78f1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a8b54e-3f3a-11e6-ba30-2dd98af7e786","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[89],"tindex":"f0a8b54f-3f3a-11e6-ba30-c5ec5e95c64f","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if ((list == null) || (list == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a8b550-3f3a-11e6-ba30-0126d36ba2aa","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl"},"failures":[90,91],"tindex":"f0a8b551-3f3a-11e6-ba30-d152611981f0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a8dc62-3f3a-11e6-ba30-89cdbdb19d26","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (a instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[92,82,83,93,94,95,96,97,98,20,27],"tindex":"f0a8dc63-3f3a-11e6-ba30-e3ef91d235cd","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a8dc64-3f3a-11e6-ba30-6150a5d3bc6e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a90375-3f3a-11e6-ba30-312dedbeadc0","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a90376-3f3a-11e6-ba30-27959bddc0bd","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"f0a90377-3f3a-11e6-ba30-cbd561b35a23","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[125],"tindex":"f0a90378-3f3a-11e6-ba30-e3fd2cb76e13","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f0a92a89-3f3a-11e6-ba30-47b6287fcad4","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"key","o2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[126],"tindex":"f0a92a8a-3f3a-11e6-ba30-cf24b1280499","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            org.apache.commons.collections4.Put<K, V>.putAll(t);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"tindex":"f0a92a8b-3f3a-11e6-ba30-dfbe863bcbee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a92a8c-3f3a-11e6-ba30-a536d73b4632","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[224,225,226,227],"tindex":"f0a9519d-3f3a-11e6-ba30-0bcd3efe2f7c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (decorated().contains(next)) {\n                            collectionRetainAll.add(next);\n                        } \n                    }\n                    if ((collectionRetainAll.size()) == (decorated().size())) {\n                        return false;\n                    } \n                    if ((collectionRetainAll.size()) == 0) {\n                        clear();\n                    } else {\n                        for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                            if (!(collectionRetainAll.contains(it.next()))) {\n                                it.remove();\n                            } \n                        }\n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[228,229,230],"tindex":"f0a9519e-3f3a-11e6-ba30-4b3051406ca2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index == (-1)) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl"},"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"f0a9519f-3f3a-11e6-ba30-29481b6c2274","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound > len) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len","bound":"bound"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl"},"failures":[126,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420],"tindex":"f0a951a0-3f3a-11e6-ba30-e19f339571a9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl"},"failures":[421,422,46],"tindex":"f0a978b1-3f3a-11e6-ba30-bf45c0ddc465","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Long) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtVariableReadImpl"},"failures":[],"tindex":"f0a978b2-3f3a-11e6-ba30-f7e14e536ae4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1802","type":"CtMethodImpl","sourcecode":"protected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        {\n            final K K = getFromKey();\n            final boolean boolean = isFromInclusive();\n            final int int = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\n                return ret >= 0;\n            } else {\n                return ret > 0;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xWasLeftChild":"forceInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a978b3-3f3a-11e6-ba30-4d327ff2df9f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl"},"failures":[315],"tindex":"f0a978b4-3f3a-11e6-ba30-e72f771ba78d","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 1) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[423],"tindex":"f0a99fc5-3f3a-11e6-ba30-0f82d242b81f","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl"},"failures":[],"tindex":"f0a99fc6-3f3a-11e6-ba30-91d3478308dd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[424],"tindex":"f0a99fc7-3f3a-11e6-ba30-5d96976be213","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0a99fc8-3f3a-11e6-ba30-01dc4ebf6d2e","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtBinaryOperatorImpl"},"failures":[231],"tindex":"f0a9ede9-3f3a-11e6-ba30-453f9b45cd82","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start == 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapSize":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa14fa-3f3a-11e6-ba30-0f4dc105f0cd","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa14fb-3f3a-11e6-ba30-cd1ecaf5934e","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[425,106,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442],"tindex":"f0aa14fc-3f3a-11e6-ba30-df72c5bf0c83","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa14fd-3f3a-11e6-ba30-cd0620014cdf","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[443],"tindex":"f0aa14fe-3f3a-11e6-ba30-011e3188460e","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa14ff-3f3a-11e6-ba30-0942acd207ea","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa3c10-3f3a-11e6-ba30-9ddb8b3f7f05","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl"},"failures":[444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"f0aa3c11-3f3a-11e6-ba30-fbe9af578371","method":{"position":"org.apache.commons.collections4.list.TreeList:709","type":"CtMethodImpl","sourcecode":"private int setOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final int newOffest) {\n    if (newOffest == 0) {\n        {\n            if (node == null) {\n                return 0;\n            } \n            final int int = getOffset(node);\n            node.int = newOffest;\n            return oldOffset;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"newOffest"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa3c12-3f3a-11e6-ba30-ab31dda74aac","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl"},"failures":[],"tindex":"f0aa3c13-3f3a-11e6-ba30-135ff7e0c365","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl"},"failures":[459],"tindex":"f0aa3c14-3f3a-11e6-ba30-877adf66ac4b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa6325-3f3a-11e6-ba30-23da4f5b66fb","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"tindex":"f0aa6326-3f3a-11e6-ba30-65e48a12f8ec","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits > lengthInBits) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"lengthInBits","bound":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[506],"tindex":"f0aa6327-3f3a-11e6-ba30-513ed1cbeac5","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa8a38-3f3a-11e6-ba30-8df7fd4c6838","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:43","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa8a39-3f3a-11e6-ba30-7f192e03058a","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    if (listIterator == null) {\n        {\n            if (listIterator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aa8a3a-3f3a-11e6-ba30-4dd96e1875c1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (decorated().contains(next)) {\n                            collectionRetainAll.add(next);\n                        } \n                    }\n                    if ((collectionRetainAll.size()) == (decorated().size())) {\n                        return false;\n                    } \n                    if ((collectionRetainAll.size()) == 0) {\n                        clear();\n                    } else {\n                        for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                            if (!(collectionRetainAll.contains(it.next()))) {\n                                it.remove();\n                            } \n                        }\n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[506],"tindex":"f0aa8a3b-3f3a-11e6-ba30-458b086f8b1f","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[317],"tindex":"f0aa8a3c-3f3a-11e6-ba30-990e0069c271","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (null == key) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[507],"tindex":"f0aab14d-3f3a-11e6-ba30-df0d975fcf47","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[508],"tindex":"f0aab14e-3f3a-11e6-ba30-b932d31065fc","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[509,510],"tindex":"f0aab14f-3f3a-11e6-ba30-fb2683b9554f","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aab150-3f3a-11e6-ba30-137c4f94e5d3","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if ((1 <= n) && (otherCount <= n)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"n","otherCount":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[232],"tindex":"f0aab151-3f3a-11e6-ba30-ef3ac3f03243","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aad862-3f3a-11e6-ba30-cd27b89649fb","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                {\n                    return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aad863-3f3a-11e6-ba30-5939c478d814","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:126","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex > fromIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"fromIndex","newCapacity":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aad864-3f3a-11e6-ba30-356472ae270a","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index == 0) {\n                {\n                    validate(object);\n                    decorated().add(index, object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[511],"tindex":"f0aad865-3f3a-11e6-ba30-7da332e6f9ff","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aad866-3f3a-11e6-ba30-3f8b857d3b42","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aad867-3f3a-11e6-ba30-13fbca314257","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aaff78-3f3a-11e6-ba30-21acba5a1c27","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl"},"failures":[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560],"tindex":"f0aaff79-3f3a-11e6-ba30-93d43db88c6d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0aaff7a-3f3a-11e6-ba30-453061fcc3dc","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl"},"failures":[561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"f0ab268b-3f3a-11e6-ba30-63a03dbf751e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[439,5,6,441,587,588],"tindex":"f0ab268c-3f3a-11e6-ba30-4d0b08aa7360","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,183,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"tindex":"f0ab268d-3f3a-11e6-ba30-3ff47e5e5c49","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Object[]) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[589],"tindex":"f0ab268e-3f3a-11e6-ba30-8b34d825bbb5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0ab268f-3f3a-11e6-ba30-69c2c9dce51f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0ab4da0-3f3a-11e6-ba30-23ab76ccbb05","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    if (listIterator == null) {\n        {\n            if (listIterator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0ab4da1-3f3a-11e6-ba30-3d17c8e9728d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"nodeToInsert"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[513,590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"f0ab4da2-3f3a-11e6-ba30-6bf04d462a08","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Dictionary) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (value == null) {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if ((entry.getValue()) == null) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    } else {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if (isEqualValue(value, entry.getValue())) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0ab74b3-3f3a-11e6-ba30-7dc1af2377cb","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617],"tindex":"f0ab74b4-3f3a-11e6-ba30-ff9614e46d77","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:162","type":"CtMethodImpl","sourcecode":"protected void addNodeToCache(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isCacheFull()) {\n                return ;\n            } \n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nextCachedNode;\n            node.setValue(null);\n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0ab74b5-3f3a-11e6-ba30-075f4811f4d6","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[618,619,620,621,622,623,624,625,626,627,144,167,168,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,435,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,436,689,690,691,692,693,694,695,696,697,698,699,700,437,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,513,735,528,535,546,547,548,553,556,557,558,559,560,228,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,230,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,438,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822],"tindex":"f0ab9bc6-3f3a-11e6-ba30-658c4d7b2a4e","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtBinaryOperatorImpl"},"failures":[823],"tindex":"f0ab9bc7-3f3a-11e6-ba30-5572585371a5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtBinaryOperatorImpl"},"failures":[824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,4,893,894,895,896,138,141,142,144,145,146,147,149,154,161,165,897,898,899,628,900,901,902,903,904,905,906,631,632,633,907,908,909,634,910,911,912,913,91,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,589,936,937,938,939,940,941,942,943,663,944,945,946,947,948,949,950,951,952,953,954,955,676,956,677,957,958,959,678,960,961,962,679,963,964,965,966,967,695,968,969,970,971,972,973,974,733,975,976,977,978,979,980,981,982,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,80,983,789,790,791,792,794,984,985,986,795,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,13,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,18,1031,1032,1033,1034,1035,1036,1037,1038,1039],"tindex":"f0ab9bc8-3f3a-11e6-ba30-ddb1706b4a0e","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306],"tindex":"f0abc2d9-3f3a-11e6-ba30-b39ba4db00c0","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[1057,1058,1059,1060,1061,1062,1063,1064,1065,0,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1,1077,1078,1079,1080,2,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,433,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108],"tindex":"f0abc2da-3f3a-11e6-ba30-b357d5d6871e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f0abc2db-3f3a-11e6-ba30-f1a9e82f0e3d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Dictionary) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (value == null) {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if ((entry.getValue()) == null) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    } else {\n                        for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                            while (entry != null) {\n                                if (isEqualValue(value, entry.getValue())) {\n                                    return true;\n                                } \n                                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            }\n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340416480/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}