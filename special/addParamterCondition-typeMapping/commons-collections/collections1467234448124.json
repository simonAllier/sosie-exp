{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":8,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":379,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":489,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":658,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":587,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":684,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":321,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":533,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":318,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":171,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":709,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":21,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":212,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":707,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":358,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":134,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":206,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":161,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":413,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":512,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":338,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":553,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":252,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":481,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":485,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":109,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":248,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":576,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":127,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":487,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":311,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":454,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":16,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":55,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":711,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":97,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":693,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":683,"org.apache.commons.collections4.CollectionUtilsTest.select":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":291,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":552,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":362,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":385,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":507,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":399,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":714,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":320,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":521,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":38,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":39,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":255,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":37,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":651,"org.apache.commons.collections4.CollectionUtilsTest.intersection":204,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":659,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":369,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":113,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":564,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":667,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":573,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":406,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":326,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":426,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":253,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":464,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":697,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":176,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":271,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":6,"org.apache.commons.collections4.map.CompositeMapTest.testPut":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":76,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":375,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":228,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":654,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":685,"org.apache.commons.collections4.map.CompositeMapTest.testGet":210,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":602,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":13,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":407,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":637,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":394,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":544,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":639,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":638,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":458,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":390,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":119,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":636,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":189,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":495,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":582,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":183,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":522,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":686,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":396,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":263,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":305,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":618,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":626,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.CollectionUtilsTest.union":203,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":44,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":144,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":465,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":467,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":111,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":342,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":694,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":26,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":217,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":516,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":124,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":114,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":32,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":336,"org.apache.commons.collections4.list.TreeListTest.testRemove":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":135,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":462,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":614,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":165,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":613,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":18,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":234,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":417,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":297,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":615,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":633,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":490,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":236,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":350,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":30,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":128,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":130,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":167,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":341,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":356,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":473,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":239,"org.apache.commons.collections4.map.LRUMapTest.testClone":580,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":370,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":460,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":496,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":676,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":288,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":107,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":450,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":392,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":363,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":226,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":506,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":374,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":24,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":720,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":101,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":260,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":353,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":371,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":391,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":715,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":240,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":432,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":283,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":598,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":597,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":596,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":246,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":242,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":214,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":196,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":213,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":278,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":400,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":11,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":146,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":524,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":475,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":441,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":574,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":325,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":439,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":435,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":537,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":641,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":149,"org.apache.commons.collections4.map.LinkedMapTest.testReset":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":566,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":585,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":299,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":612,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":567,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":159,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":557,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":388,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":437,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":561,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":712,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":359,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":395,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":502,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":428,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":494,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":383,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":344,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":652,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":79,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":153,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":504,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":186,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":346,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":445,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":195,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":660,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":197,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":584,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":698,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":578,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":680,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":215,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":681,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":682,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":629,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":408,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":713,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":575,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":99,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":410,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":518,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":448,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":514,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":649,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":568,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":319,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":74,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":625,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":389,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":381,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":515,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":268,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":673,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":205,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":106,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":430,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":541,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":700,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":433,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":292,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":352,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":309,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":300,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":398,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":416,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":498,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":497,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":604,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":216,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":499,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":373,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":710,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":474,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":201,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":108,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":669,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":478,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":555,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":58,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":331,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":277,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":509,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":508,"org.apache.commons.collections4.set.CompositeSetTest.testContains":188,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":520,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":425,"org.apache.commons.collections4.CollectionUtilsTest.isFull":687,"org.apache.commons.collections4.list.TreeListTest.testBug35258":148,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":591,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":289,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":75,"org.apache.commons.collections4.ListUtilsTest.testSelect":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":301,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":704,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":343,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":605,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":209,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":529,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":540,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":102,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":366,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":655,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":269,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":136,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":393,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":179,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":333,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":463,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":315,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":298,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":691,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":488,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":519,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":559,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":257,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":608,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":4,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":238,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":340,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":525,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":367,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":705,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":170,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":581,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":357,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":424,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":678,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":642,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":677,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":273,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":706,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":337,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":397,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":365,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":663,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":672,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":294,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":590,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":56,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":701,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":628,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":671,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":724,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":661,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":699,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":692,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":427,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":452,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":185,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":545,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":259,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":536,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":571,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":281,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":438,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":593,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":1,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":431,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":80,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":115,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":422,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":316,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":235,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":360,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":592,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":456,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":143,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":237,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":327,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":446},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"7c61a5f9-3e3d-11e6-95ca-6f9fc84a1d7c","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"7c62905a-3e3d-11e6-95ca-6d47cdc17ca9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"7c62b76b-3e3d-11e6-95ca-5b3d8263f6bb","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"7c62b76c-3e3d-11e6-95ca-c32d5c1a5027","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"7c632c9d-3e3d-11e6-95ca-675d204fbf8f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"7c643e0e-3e3d-11e6-95ca-9dfa0d6f7892","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        {\n            return node == null ? -1 : node.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[166,167,168,169,170,171],"tindex":"7c64651f-3e3d-11e6-95ca-19dd23b73688","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input != null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[172],"tindex":"7c648b30-3e3d-11e6-95ca-f7862b180d09","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtVariableReadImpl","sourcecode":"hasNext"},"failures":[],"tindex":"7c648b31-3e3d-11e6-95ca-f900742cb55f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (fromInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"fromInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[173,174,175,176],"tindex":"7c648b32-3e3d-11e6-95ca-69ec28fe1018","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Float) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[177,178,179,180,181,182,183,184],"tindex":"7c64b243-3e3d-11e6-95ca-f51a43d34dfc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[185],"tindex":"7c64b244-3e3d-11e6-95ca-25cc8c078ca3","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"7c64d955-3e3d-11e6-95ca-f13820641954","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtFieldReadImpl","sourcecode":"iDoLoop"},"failures":[],"tindex":"7c64d956-3e3d-11e6-95ca-e3e03d868789","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1945","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iDoLoop":"toInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[],"tindex":"7c64d957-3e3d-11e6-95ca-7343c8d0bcf0","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((set.isEmpty()) == false) {\n                {\n                    return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[0,1,2,3,4,10,11,12,13,5,6,7,8,9,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,17,55,54,56,57,58,59,63,64,65,66,60,61,62,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,67],"tindex":"7c650068-3e3d-11e6-95ca-6564923a67b9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[218,219],"tindex":"7c650069-3e3d-11e6-95ca-57b91e9b5411","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"7c65277a-3e3d-11e6-95ca-7f6ac2860fa5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if ((coll == null) || ((collection.size()) != 1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7c65277b-3e3d-11e6-95ca-6936e2ebced0","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end1 < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"end1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"7c665ffc-3e3d-11e6-95ca-b7799f299862","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"7c66870d-3e3d-11e6-95ca-ef4f0cba1f30","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index == (-1)) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[276],"tindex":"7c66870e-3e3d-11e6-95ca-a55b3f6cfa14","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"7c66870f-3e3d-11e6-95ca-8bd6a500d720","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:713","type":"CtMethodImpl","sourcecode":"protected void setPreviousNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> previous) {\n    if (previous == previous) {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = previous;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"previous","header":"previous"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl","sourcecode":"(pos != (-1)) && (pos != index)"},"failures":[],"tindex":"7c66ae20-3e3d-11e6-95ca-a9c0fff942bd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((index != (-1)) && (pos != index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410],"tindex":"7c66ae21-3e3d-11e6-95ca-1d112c13cf20","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7c66d532-3e3d-11e6-95ca-774613b8a876","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[411,93,412,413,414,415],"tindex":"7c66d533-3e3d-11e6-95ca-75e03754fa83","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"7c66d534-3e3d-11e6-95ca-7dee7fb6b082","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"7c66fc45-3e3d-11e6-95ca-69e16d3db1ca","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[146,416,160,161,417,418,419,164,420],"tindex":"7c66fc46-3e3d-11e6-95ca-c5c8bf9b6418","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7c66fc47-3e3d-11e6-95ca-5de88283fb45","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"7c672358-3e3d-11e6-95ca-db9024fb672f","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[],"tindex":"7c672359-3e3d-11e6-95ca-abdb41ff925e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[288,289,304,305,307,308,310,312,313,316,381,382,395,396,398,399,401,403,404,407],"tindex":"7c67235a-3e3d-11e6-95ca-91d6c1255ec1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:415","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (value1 == value2) || (value1 == null ? false : value1.equals(value2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"value2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"7c674a6b-3e3d-11e6-95ca-cd3a8dd4eafa","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator2 instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"7c674a6c-3e3d-11e6-95ca-01087125ab03","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((set.isEmpty()) == false) {\n                {\n                    return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[148,149,147,154,155,156,157,158,162,163,164,165],"tindex":"7c674a6d-3e3d-11e6-95ca-47ad082bf18e","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index > index) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[421,422,423,424,425,426,427,428,429,430,431,432],"tindex":"7c67717e-3e3d-11e6-95ca-d3cdaf152a09","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex < 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtFieldReadImpl","sourcecode":"removeAllowed"},"failures":[],"tindex":"7c67717f-3e3d-11e6-95ca-27911176799a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (forceInclusive) {\n                {\n                    final K K = getToKey();\n                    final boolean boolean = isToInclusive();\n                    final int int = getKeyAnalyzer().compare(key, toKey);\n                    if (toInclusive || forceInclusive) {\n                        return ret <= 0;\n                    } else {\n                        return ret < 0;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeAllowed":"forceInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[277,433,278,280,281,279,293,296,297,298,299,311,312,313,314,322,321,323,330,368,359,363,365,357,325,329,331,332,333,334,335,336,337,340,341,342,343,344,346,347,352,434,371,373,374,372,386,389,390,391,392,397,402,403,404,405],"tindex":"7c679890-3e3d-11e6-95ca-e1846ff4ce6c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:508","type":"CtMethodImpl","sourcecode":"protected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            (int)--;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[435],"tindex":"7c679891-3e3d-11e6-95ca-b71e5a6135cb","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[436],"tindex":"7c679892-3e3d-11e6-95ca-ffa7d0227212","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[],"tindex":"7c67bfa3-3e3d-11e6-95ca-5fea89ef1b2a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtBinaryOperatorImpl","sourcecode":"iterator != (currentIterator)"},"failures":[],"tindex":"7c67bfa4-3e3d-11e6-95ca-918f29c0e682","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator","currentIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"7c67bfa5-3e3d-11e6-95ca-e7c9958b672f","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[100,437,101,438],"tindex":"7c67e6b6-3e3d-11e6-95ca-ffaa28500772","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 instanceof java.lang.Float) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7c67e6b7-3e3d-11e6-95ca-792e2b759f12","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[439],"tindex":"7c680dc8-3e3d-11e6-95ca-29e5a3a1390b","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7c680dc9-3e3d-11e6-95ca-e1e8b68d054e","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"7c680dca-3e3d-11e6-95ca-65076e4cb877","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:51","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lengthInBits(final java.lang.String key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key != null ? (key.length()) * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[440],"tindex":"7c680dcb-3e3d-11e6-95ca-4d736e898c38","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[441,442],"tindex":"7c6834dc-3e3d-11e6-95ca-db432ea5f190","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[443],"tindex":"7c6834dd-3e3d-11e6-95ca-0faad8a877c9","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[],"tindex":"7c6834de-3e3d-11e6-95ca-b3f656512b33","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7c685bef-3e3d-11e6-95ca-7bff9caee374","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7c685bf0-3e3d-11e6-95ca-9b156bb29cb9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[444,445,446,447,448,449,450,425,426,451,452,453,454,427,455,428,456,457,458,459,460,461,429,462,430,431,432,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],"tindex":"7c688301-3e3d-11e6-95ca-49bf97da87cd","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (next == null) {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"next","before":"next"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"7c688302-3e3d-11e6-95ca-75a113f1d778","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value instanceof java.util.Enumeration) {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[],"tindex":"7c688303-3e3d-11e6-95ca-99ef96b39755","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534],"tindex":"7c688304-3e3d-11e6-95ca-b34129bdfbae","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[],"tindex":"7c68aa15-3e3d-11e6-95ca-dde9f3a8374b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index == (-1)) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.set.CompositeSet.this.mutator) == null"},"failures":[191,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559],"tindex":"7c68aa16-3e3d-11e6-95ca-b3db30110f33","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[560,561,562,563,564,565,566,567,568,569,570,571],"tindex":"7c68d127-3e3d-11e6-95ca-a343580713de","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtVariableReadImpl","sourcecode":"hasNext"},"failures":[],"tindex":"7c68d128-3e3d-11e6-95ca-3f41fa39db98","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (forceInclusive) {\n                {\n                    final K K = getToKey();\n                    final boolean boolean = isToInclusive();\n                    final int int = getKeyAnalyzer().compare(key, toKey);\n                    if (toInclusive || forceInclusive) {\n                        return ret <= 0;\n                    } else {\n                        return ret < 0;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"7c68d129-3e3d-11e6-95ca-4b5a12f79b43","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"7c68f83a-3e3d-11e6-95ca-d3921bbaaee3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if ((k instanceof java.util.List) == false) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl","sourcecode":"to != null"},"failures":[4,5,7,8,14,15,16,29,33,40,41,43,17,46,49,50,51,52,53],"tindex":"7c68f83b-3e3d-11e6-95ca-859844e26296","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:948","type":"CtMethodImpl","sourcecode":"private void doRedBlackDelete(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> deletedNode) {\n    if (deletedNode != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n                if (((deletedNode.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n                    swapPosition(nextGreater(deletedNode, dataElement), deletedNode, dataElement);\n                } \n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (deletedNode.getLeft(dataElement)) != null ? deletedNode.getLeft(dataElement) : deletedNode.getRight(dataElement);\n                if (replacement != null) {\n                    replacement.setParent(deletedNode.getParent(dataElement), dataElement);\n                    if ((deletedNode.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = replacement;\n                    } else if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                        deletedNode.getParent(dataElement).setLeft(replacement, dataElement);\n                    } else {\n                        deletedNode.getParent(dataElement).setRight(replacement, dataElement);\n                    }\n                    deletedNode.setLeft(null, dataElement);\n                    deletedNode.setRight(null, dataElement);\n                    deletedNode.setParent(null, dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                        doRedBlackDeleteFixup(replacement, dataElement);\n                    } \n                } else {\n                    if ((deletedNode.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = null;\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                            doRedBlackDeleteFixup(deletedNode, dataElement);\n                        } \n                        if ((deletedNode.getParent(dataElement)) != null) {\n                            if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                deletedNode.getParent(dataElement).setLeft(null, dataElement);\n                            } else {\n                                deletedNode.getParent(dataElement).setRight(null, dataElement);\n                            }\n                            deletedNode.setParent(null, dataElement);\n                        } \n                    }\n                }\n            }\n            shrink();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"deletedNode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[572],"tindex":"7c691f4c-3e3d-11e6-95ca-add315b54b97","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[573,574],"tindex":"7c691f4d-3e3d-11e6-95ca-f31e9fa743ce","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[575,576],"tindex":"7c691f4e-3e3d-11e6-95ca-a91b41250c08","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[577],"tindex":"7c69465f-3e3d-11e6-95ca-affe5feea3ff","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[],"tindex":"7c694660-3e3d-11e6-95ca-9f2bff6f5e32","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode < hashCode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"hashCode","currentIndex":"hashCode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[578],"tindex":"7c694661-3e3d-11e6-95ca-7dc183f215b8","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[579,580,461,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,472,473,479,480,482,483,484,487,489,492,493,497,498,499,500,501,502,510,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,560,561,562,563,564,643,566,567,568,569,644,645,646,647,648,649,650,651,652,570,571,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,110,111,113,114,115,118,120,123,124,128,129,130,131,132,133,142],"tindex":"7c696d72-3e3d-11e6-95ca-f926d50fb6ab","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (null == key) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7c699483-3e3d-11e6-95ca-c3a51eeabb58","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"7c699484-3e3d-11e6-95ca-3fd1c99b75d8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[684,685,686],"tindex":"7c699485-3e3d-11e6-95ca-79c0f47bbcc0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"7c69bb96-3e3d-11e6-95ca-218c50a371fe","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n    for (int int = 0 ; i < size ; ++i) {\n        if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n            return map;\n        } \n    }\n    return null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[687,688],"tindex":"7c69bb97-3e3d-11e6-95ca-d51b29f1c639","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"7c69e2a8-3e3d-11e6-95ca-d5686bbd4859","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if ((index < index) || (index > index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"7c69e2a9-3e3d-11e6-95ca-cbb02d67e335","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : o1.equals(o2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"obj","o2":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtFieldReadImpl","sourcecode":"iDoLoop"},"failures":[],"tindex":"7c6a09ba-3e3d-11e6-95ca-3b9c008d3a69","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iDoLoop":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (list != null)) && ((list.size()) > 0)"},"failures":[],"tindex":"7c6a09bb-3e3d-11e6-95ca-530f9994707d","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"7c6a30cc-3e3d-11e6-95ca-017363ce1d6b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"7c6a30cd-3e3d-11e6-95ca-5b4611f932e8","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof java.util.List) == false) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"7c6a30ce-3e3d-11e6-95ca-3f7346ed9c2d","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:203","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O> coerce(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            return ((org.apache.commons.collections4.Transformer<I, O>)(transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"7c6a30cf-3e3d-11e6-95ca-ff221605495e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:504","type":"CtMethodImpl","sourcecode":"protected void nodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            if ((node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                boolean = false;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n                (int)--;\n            } else {\n                boolean = false;\n                boolean = false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"7c6a57e0-3e3d-11e6-95ca-5f809d20e03f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[689,690,691,685,692],"tindex":"7c6a7ef1-3e3d-11e6-95ca-396eb8ecfe57","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[693],"tindex":"7c6a7ef2-3e3d-11e6-95ca-871bb34be873","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7c6a7ef3-3e3d-11e6-95ca-5bf7f307b8fe","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"7c6a7ef4-3e3d-11e6-95ca-21af61150714","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n    if ((map.size()) > 0) {\n        final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n        decorated.clear();\n        decorated.decorated().putAll(transformed);\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"7c6aa605-3e3d-11e6-95ca-43b144c94f02","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"7c6aa606-3e3d-11e6-95ca-37e8c5099c14","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (((value == null) && (value == null)) || ((object != null) && (object.equals(current)))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"value","object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[694],"tindex":"7c6aa607-3e3d-11e6-95ca-7308fbfc0717","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[695],"tindex":"7c6aa608-3e3d-11e6-95ca-f5172dd310fa","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if ((list.size()) > (list.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtInvocationImpl","sourcecode":"isAtFullCapacity()"},"failures":[],"tindex":"7c6acd19-3e3d-11e6-95ca-4f424e579562","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724],"tindex":"7c6acd1a-3e3d-11e6-95ca-c9c4b3f8cd0c","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[160,161,417,418,419,164,420],"tindex":"7c6acd1b-3e3d-11e6-95ca-572cd5e2629d","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[99,100],"tindex":"7c6acd1c-3e3d-11e6-95ca-f90e52d7e9c3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229022180/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}