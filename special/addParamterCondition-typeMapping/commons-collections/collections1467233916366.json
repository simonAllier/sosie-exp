{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":141,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":633,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":737,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":482,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":34,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":195,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":196,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":567,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":665,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":149,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":20,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":28,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":732,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":574,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":362,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":29,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":109,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":490,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":203,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":764,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":145,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":478,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":87,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":268,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":537,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":659,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":611,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":172,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":556,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":345,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":640,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":738,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":524,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":576,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":724,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":539,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":610,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":711,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":189,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":693,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":761,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":158,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":219,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":512,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":329,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":380,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":206,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":485,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":644,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":660,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":703,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":628,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":747,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":142,"org.apache.commons.collections4.map.CompositeMapTest.testPut":19,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":107,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":741,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":357,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":594,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":767,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":461,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":451,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":437,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":492,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":713,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":474,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":32,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":652,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":414,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":455,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":658,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":169,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":631,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":52,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":25,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":418,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":476,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":377,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":245,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":41,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":784,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":649,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":495,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":315,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":565,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":157,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":744,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":178,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":695,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":599,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":299,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":544,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":273,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":531,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":602,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":514,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":656,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":102,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":0,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":390,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":367,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":657,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":120,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":118,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":450,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":140,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":204,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":44,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":288,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":648,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":48,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":135,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":671,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":343,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":707,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":637,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":200,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":427,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":742,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":43,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":283,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":511,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":263,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":778,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":253,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":678,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":462,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":551,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":589,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":743,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":460,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":779,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":638,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":40,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":776,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":607,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":616,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":759,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":654,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":5,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":608,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":486,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":449,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":131,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":108,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":105,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":582,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":756,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":685,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":487,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":244,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":359,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":247,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":745,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":682,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":275,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":529,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":674,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":526,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":249,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":488,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":24,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":457,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":144,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":300,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":98,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":694,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":419,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":475,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":740,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":714,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":351,"org.apache.commons.collections4.list.TreeListTest.testBug35258":771,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":106,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":751,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":294,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":516,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":470,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":295,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":593,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":122,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":600,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":568,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":113,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":265,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":280,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":115,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":114,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":270,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":621,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":396,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":424,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":729,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":198,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":580,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":406,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":755,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":686,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":445,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":634,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":344,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":586,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":45,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":578,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":534,"org.apache.commons.collections4.map.LRUMapTest.testLRU":202,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":543,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":425,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":653,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":601,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":410,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":617,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":251,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":522,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":569,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":588,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":130,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":502,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":360,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":548,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":175,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":566,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":504,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":583,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":552,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":364,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":407,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":448,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":153,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":730,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":564,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":431,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":689,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":626,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":221,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":590,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":696,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":518,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":49,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":232,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":535,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":217,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":435,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":780,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":443,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":680,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":464,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":663,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":254,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":515,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":758,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":330,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":272,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":96,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":775,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":691,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":752,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":570,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":55,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":446,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":194,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":662,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":497,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":30,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":260,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":505,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":230,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":456,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":433,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":636,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":409,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":223,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":139,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":598,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":520,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":75,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.CompositeMapTest.testGet":18,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":137,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":316,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":207,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":317,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":675,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":229,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":615,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":262,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":238,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":735,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":215,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":432,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":706,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":77,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":642,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":547,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":632,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":509,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":554,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":783,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":769,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":757,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":341,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":162,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":510,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":154,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":74,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":252,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":597,"org.apache.commons.collections4.list.TreeListTest.testRemove":774,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":573,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":736,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":453,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":452,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":146,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":749,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":454,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":422,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":302,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":378,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":721,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":278,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":618,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":781,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":312,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":532,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":168,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":277,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":710,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":166,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":676,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":577,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":372,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":392,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":715,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":361,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":306,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":183,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":619,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":697,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":650,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":350,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":405,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":688,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":210,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":51,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":152,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":612,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":559,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":313,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":222,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":606,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":748,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":6,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":39,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":276,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":216,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":766,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":533,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":199,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":507,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":620,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":750,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":93,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":508,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":629,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":553,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":171,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":768,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":22,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":506,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":21,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":442,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":279,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":212,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":770,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":723,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":415,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":465,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":772,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":151,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":466,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":176,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":480,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":575,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":623,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":326,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":528,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":26,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":134,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":347,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":411,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":679,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":546,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":728,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":328,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":110,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":235,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":673,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":57,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":664,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":233,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":753,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":765,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":393,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":394,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":733,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":239,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":179,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":467,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":731,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":550,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":699,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":587,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":722,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":521,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":177,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":716,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":298,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":86,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":491,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":494,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":68,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":763,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":436,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":719,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":700,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":358,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":125,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":90,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":646,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":473,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":639,"org.apache.commons.collections4.set.CompositeSetTest.testContains":237,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":11,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":560,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":7,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":430,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":438,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":681,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":267,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":246,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":773,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":214,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":218,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":734,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":112,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":191,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":581,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":192,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":672,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":92,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":500,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":614,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":739,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":416,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":447,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":605,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":625,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":519,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":121,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":523,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":441,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":133,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":327,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":545,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":557,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":725,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":160,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":641,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":412,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":785,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":527,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":684,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":148,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":94,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":726,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":479,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":585,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":704,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":666,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":391,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":561,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":185,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":174,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":35,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":186,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":413,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":211,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":356,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":683,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":241,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":104,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":242,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":36,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":622,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":197,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":709,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":201,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":187,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":71,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":188,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":84,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":513,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":501,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":692,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":651},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"3f6badb9-3e3c-11e6-afc8-d712e058c645","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[0],"tindex":"3f6df7aa-3e3c-11e6-afc8-dd5e04e17fa5","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[1,2,3,4,5],"tindex":"3f6e1ebb-3e3c-11e6-afc8-9b730d16b308","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[6],"tindex":"3f6e45cc-3e3c-11e6-afc8-63f55538a003","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[7],"tindex":"3f6e6cdd-3e3c-11e6-afc8-a56fdad60fe3","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)"},"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"3f6e93ee-3e3c-11e6-afc8-8715218fc859","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(to, dataElement)) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"to","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3f6e93ef-3e3c-11e6-afc8-cf227c006c0e","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[18,19,20,21,22,23,24,25],"tindex":"3f6ebb00-3e3c-11e6-afc8-6bd5c94f24ce","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map.isEmpty()) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[],"tindex":"3f6ee211-3e3c-11e6-afc8-8338ab9ffd6d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:312","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeChanged(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"3f6f0922-3e3c-11e6-afc8-55f34de2a895","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(currentSize)) {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"currentSize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[26,27,28],"tindex":"3f6f5743-3e3c-11e6-afc8-cbdc28e4e43d","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[29,30],"tindex":"3f6f7e54-3e3c-11e6-afc8-59394904d2e7","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 instanceof java.util.ListIterator) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[31,32,33,34,35,36],"tindex":"3f6f7e55-3e3c-11e6-afc8-d5f4f1a3b530","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if (start1 == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"start1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[37],"tindex":"3f6fa566-3e3c-11e6-afc8-f5a075de7cad","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtInvocationImpl","sourcecode":"currentNode.isLeftChild(dataElement)"},"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"3f6fa567-3e3c-11e6-afc8-854288a54d84","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if (node.isLeftChild(dataElement)) {\n                {\n                    boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[38],"tindex":"3f6fcc78-3e3c-11e6-afc8-a9afdfd52826","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)"},"failures":[9,10,11,8,12,13,14,15,16,17],"tindex":"3f6fcc79-3e3c-11e6-afc8-4362a058ad4c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[39,40],"tindex":"3f6ff38a-3e3c-11e6-afc8-15f878c5f173","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"3f6ff38b-3e3c-11e6-afc8-87259635e45d","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i > i) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"i","bound":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[53,54,55,56,57,58,59,60],"tindex":"3f701a9c-3e3c-11e6-afc8-3924f14079a6","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[21,22,23,24,61,62,63,64,65,66,67,68,69,70,71],"tindex":"3f701a9d-3e3c-11e6-afc8-f50d28423513","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (null == key) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[25,72],"tindex":"3f701a9e-3e3c-11e6-afc8-0bb34501a4f1","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[73,74],"tindex":"3f7041af-3e3c-11e6-afc8-6741cb7bcaec","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[75,76,77,78,79,80,81,82,83,84,85],"tindex":"3f7041b0-3e3c-11e6-afc8-cd118805d037","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (object == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtBinaryOperatorImpl","sourcecode":"rval != null"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,9,157,158,159,10,160,161,162,163,164,165,166,167,168,11,169,170,8,12,171,172,13,14,15,16,17],"tindex":"3f7068c1-3e3c-11e6-afc8-1b3a501c1a7c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1281","type":"CtMethodImpl","sourcecode":"private void insertValue(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> newNode) throws java.lang.IllegalArgumentException {\n    if (newNode != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n            while (true) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(newNode.getValue(), node.getValue());\n                if (cmp == 0) {\n                    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (newNode.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n                } else if (cmp < 0) {\n                    if ((node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setLeft(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                } else {\n                    if ((node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setRight(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"newNode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[173],"tindex":"3f70b6e2-3e3c-11e6-afc8-99970a8b8019","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[],"tindex":"3f70ddf3-3e3c-11e6-afc8-c95a964977bd","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[174],"tindex":"3f70ddf4-3e3c-11e6-afc8-5379fc7a5514","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"3f70ddf5-3e3c-11e6-afc8-7b5300516cd8","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"3f710506-3e3c-11e6-afc8-f7b297a45120","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[175,175,176,177,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"3f710507-3e3c-11e6-afc8-0157e37c9436","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"3f710508-3e3c-11e6-afc8-11cf69e4c682","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[201,202,203,204],"tindex":"3f712c19-3e3c-11e6-afc8-e78d1559e578","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"3f712c1a-3e3c-11e6-afc8-cdd2bfe66a4f","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"indexRelativeToMe"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[205,206,207,208,209,210,211,61,212,213,62,63,64,214,215,65,66,216,217,67,68,218,219,220,221,222,223,69,224,225,72,70,226,71,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"3f71532b-3e3c-11e6-afc8-31632ab7c252","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"booleanObject == null"},"failures":[266,267,268,269,270,271,272,273,274],"tindex":"3f717a3c-3e3c-11e6-afc8-1f92aa4ed830","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[0],"tindex":"3f717a3d-3e3c-11e6-afc8-9b4791f13f82","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[275,276],"tindex":"3f71a14e-3e3c-11e6-afc8-b150e34c0610","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == 0) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3f71a14f-3e3c-11e6-afc8-efce9b6bf34b","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[277],"tindex":"3f71a150-3e3c-11e6-afc8-ffd88c1777c9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[278,80],"tindex":"3f71c861-3e3c-11e6-afc8-d502b026d5ff","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[],"tindex":"3f71c862-3e3c-11e6-afc8-5fc33204a30d","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if ((defaultList.isEmpty()) && (defaultList.isEmpty())) {\n        {\n            return list == null ? defaultList : list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"defaultList","pendingInsertions":"defaultList"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"3f71c863-3e3c-11e6-afc8-d3c10b1e5fb2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    if (compositeCollection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"compositeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[],"tindex":"3f71ef74-3e3c-11e6-afc8-9f7a38aaba2f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3f71ef75-3e3c-11e6-afc8-2134430a666c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"3f71ef76-3e3c-11e6-afc8-e19d2b76e144","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((k instanceof java.util.Map) == false) {\n                {\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n                    return entry != null ? entry.getValue() : null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3f721687-3e3c-11e6-afc8-43312e842448","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[279],"tindex":"3f721688-3e3c-11e6-afc8-018846b8f267","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl","sourcecode":"entry == (header)"},"failures":[280,281,282,283,284,285,286,287,288,289,290,291,292,293,201,6,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,202,356,357,203,358,359,360,204,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"3f723d99-3e3c-11e6-afc8-2d0576d8bb70","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[412],"tindex":"3f723d9a-3e3c-11e6-afc8-77451a408c52","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"3f7264ab-3e3c-11e6-afc8-e7a8f866a806","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"3f7264ac-3e3c-11e6-afc8-c797c917d74d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[431,432],"tindex":"3f728bbd-3e3c-11e6-afc8-d5fcde80d651","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[433,280,281,282,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,283,449,450,451,452,453,454,284,285,455,286,456,457,287,288,458,459,289,290,291,292,293],"tindex":"3f728bbe-3e3c-11e6-afc8-f397e981433e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash != 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (hash < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return referent;\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    throw new java.lang.Error();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"hash"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[435,436,438,439,440,443,445,448,283,452,453,454,284,285,455,290,460,461,462,463,464,329,465,466,467,330,468,469,470,331,332,471,337],"tindex":"3f72b2cf-3e3c-11e6-afc8-79a22a2a91d7","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Boolean) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[472],"tindex":"3f72d9e0-3e3c-11e6-afc8-abb6292b1131","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtBinaryOperatorImpl","sourcecode":"deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))"},"failures":[],"tindex":"3f72d9e1-3e3c-11e6-afc8-67ba194744f6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[190],"tindex":"3f72d9e2-3e3c-11e6-afc8-971f1cd404fe","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3f7300f3-3e3c-11e6-afc8-ff62755132b7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[473],"tindex":"3f7300f4-3e3c-11e6-afc8-f9d908244242","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"3f7300f5-3e3c-11e6-afc8-c9e4d563d23d","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1115","type":"CtVariableReadImpl","sourcecode":"yWasLeftChild"},"failures":[],"tindex":"3f732806-3e3c-11e6-afc8-69ea8e1f01d8","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (defaultValue) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yWasLeftChild":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[],"tindex":"3f732807-3e3c-11e6-afc8-3fcda8761f20","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"3f732808-3e3c-11e6-afc8-0948015febc5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[],"tindex":"3f734f19-3e3c-11e6-afc8-677c001dc83d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:535","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode >= hashCode) {\n        {\n            return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode","index":"hashCode"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[],"tindex":"3f734f1a-3e3c-11e6-afc8-b11e713a0899","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"3f734f1b-3e3c-11e6-afc8-79a4800c5831","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:610","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[474,475],"tindex":"3f73762c-3e3c-11e6-afc8-51107050e6c4","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[183,184],"tindex":"3f73762d-3e3c-11e6-afc8-e50034798445","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[],"tindex":"3f73762e-3e3c-11e6-afc8-5365aeb55710","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash != 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (hash < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return referent;\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    throw new java.lang.Error();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"hash"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[435,436,438,439,440,443,445,448,283,453,454,285,455,286,287,290,476,477,304,305,478,479,480,318,319,481,482,348,349,483,484,367,368,485,486,381,382,487,488,395,396],"tindex":"3f73c44f-3e3c-11e6-afc8-57b2d89c4549","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:425","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (null != value1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (value1 == value2) || (value1.equals(value2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"value1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"3f73c450-3e3c-11e6-afc8-5b38f9a63711","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((k instanceof java.util.Map) == false) {\n                {\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n                    return entry != null ? entry.getValue() : null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[],"tindex":"3f73c451-3e3c-11e6-afc8-8d8d3718aa44","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[489,490],"tindex":"3f73eb62-3e3c-11e6-afc8-91c1eb9cd29d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Boolean) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"tindex":"3f73eb63-3e3c-11e6-afc8-253906ce667d","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (indent < indent) {\n        {\n            for (int int = 0 ; i < indent ; i++) {\n                out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"indent","index":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtBinaryOperatorImpl","sourcecode":"(start.predecessor) == null"},"failures":[],"tindex":"3f73eb64-3e3c-11e6-afc8-af07ec898264","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"h","predecessor":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:424","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"3f746095-3e3c-11e6-afc8-e9b5f90d43b3","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"inverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"3f746096-3e3c-11e6-afc8-1189976f6a7c","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"3f7487a7-3e3c-11e6-afc8-d3aa4ef6bb5c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (object == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[74],"tindex":"3f7487a8-3e3c-11e6-afc8-853d725fb6e2","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"3f74aeb9-3e3c-11e6-afc8-ffc06ba8c297","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[181],"tindex":"3f74aeba-3e3c-11e6-afc8-0d20885f28ff","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[509,510,511,512,476,513,514,515,477,516,301,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,100,101,103,104,105,106,108,752,753,754,755,756,757,270,758,759,760,761,762,763],"tindex":"3f74d5cb-3e3c-11e6-afc8-c3c959b05fbc","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"3f74fcdc-3e3c-11e6-afc8-7b135705760a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if ((o instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[184],"tindex":"3f74fcdd-3e3c-11e6-afc8-8ba310176ed2","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"3f7523ee-3e3c-11e6-afc8-c34035da3d6b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            if (node.isLeftChild(dataElement)) {\n                {\n                    boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[138],"tindex":"3f7523ef-3e3c-11e6-afc8-7d6ba413ee1b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[764],"tindex":"3f7523f0-3e3c-11e6-afc8-5174f5f1e065","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"3f754b01-3e3c-11e6-afc8-1539c3dfd501","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtBinaryOperatorImpl","sourcecode":"(comparatorChain.size()) == 0"},"failures":[],"tindex":"3f754b02-3e3c-11e6-afc8-b7261dee3e6c","method":{"position":"org.apache.commons.collections4.ComparatorUtils:103","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E extends java.lang.Comparable<? super E>>java.util.Comparator<E> chainedComparator(final java.util.Collection<java.util.Comparator<E>> comparators) {\n    if ((comparators.size()) == 0) {\n        {\n            return org.apache.commons.collections4.ComparatorUtils.chainedComparator(((java.util.Comparator<E>[])(comparators.toArray(new java.util.Comparator[comparators.size()]))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparatorChain":"comparators"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[],"tindex":"3f754b03-3e3c-11e6-afc8-89c2fb7171c6","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[765],"tindex":"3f757214-3e3c-11e6-afc8-83912cddf160","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"3f757215-3e3c-11e6-afc8-634fb67b3a39","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[766],"tindex":"3f759926-3e3c-11e6-afc8-cd75d91a04ca","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[767],"tindex":"3f759927-3e3c-11e6-afc8-7f3d236633e3","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 0"},"failures":[],"tindex":"3f759928-3e3c-11e6-afc8-17a7aa5aeb7d","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[768,769],"tindex":"3f76aa99-3e3c-11e6-afc8-8b64d5120970","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784],"tindex":"3f76d1aa-3e3c-11e6-afc8-177781aff703","method":{"position":"org.apache.commons.collections4.list.TreeList:699","type":"CtMethodImpl","sourcecode":"private int getOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return 0;\n            } \n            return node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[0],"tindex":"3f76d1ab-3e3c-11e6-afc8-8be1288e9c67","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[785],"tindex":"3f76f8bc-3e3c-11e6-afc8-cd25fac11a70","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228544563/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}