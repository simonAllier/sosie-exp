{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":91,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":1146,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":114,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":177,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":499,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":934,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":809,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":496,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":801,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":981,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":518,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":585,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":898,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":899,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":365,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":769,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":901,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":900,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":283,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":915,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":394,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":535,"org.apache.commons.collections4.CollectionUtilsTest.get":936,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":142,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":219,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":545,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":757,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":918,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":92,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":553,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":155,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":873,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":523,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":822,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":735,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":767,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":778,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":439,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":1157,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":148,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":639,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":728,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":613,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":1058,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":1082,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":181,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":196,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":797,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":1023,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":1026,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":1159,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":403,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":958,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":363,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":1102,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":498,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":761,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":734,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":945,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":1169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":661,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":752,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":1083,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":1018,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":78,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":910,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":229,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":586,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":231,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":781,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":539,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":878,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":471,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":212,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":1168,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":736,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":1021,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":413,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":543,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":1052,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":381,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":120,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":819,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":874,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":709,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":923,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":943,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":339,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":621,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":447,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":669,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":743,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":154,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":312,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":971,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":117,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":973,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":972,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":273,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":724,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":956,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":851,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":317,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":318,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":254,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":292,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":1055,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":732,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":456,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":482,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":608,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":987,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":152,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":113,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":346,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":739,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":1155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":89,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":246,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":100,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":444,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":723,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":869,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":774,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":662,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":648,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":842,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":267,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":396,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":727,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":912,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":178,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":857,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":847,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":805,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":559,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":738,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":903,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":692,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":15,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":812,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":990,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":962,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":72,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":932,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":1114,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":502,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":42,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":327,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":454,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":877,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":434,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":623,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":879,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":1151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":538,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":1132,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":527,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":746,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":239,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":115,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":786,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":999,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":421,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":730,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":830,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":573,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":839,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":556,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":1144,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":952,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":554,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":171,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":1030,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":511,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":1029,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":575,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":387,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":1028,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":856,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":420,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":419,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":864,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":937,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":1080,"org.apache.commons.collections4.map.LRUMapTest.testReset":375,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":653,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":497,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":846,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":737,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":872,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":355,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":881,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":841,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":924,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":660,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":691,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":351,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":673,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":1020,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":570,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":783,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":1059,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":164,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":907,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":980,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":788,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":1154,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":141,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":389,"org.apache.commons.collections4.map.LinkedMapTest.testReset":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":689,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":404,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":309,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":424,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":77,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":832,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":282,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":883,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":508,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":1101,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":340,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":953,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":1048,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":423,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":1125,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":690,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":703,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":944,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":705,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":704,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":955,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":334,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":494,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":345,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":450,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":1061,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":814,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":627,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":1156,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":680,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":946,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":192,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":24,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":1112,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":259,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":657,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":350,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":218,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":891,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":682,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":886,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":310,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":1040,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":1019,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":740,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":211,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":360,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":26,"org.apache.commons.collections4.map.HashedMapTest.testClone":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":361,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":567,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":90,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":1041,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":544,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":260,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":541,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":708,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":906,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":507,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":652,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":268,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":954,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":122,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":385,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":1136,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":19,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":1088,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":693,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":1004,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":787,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":1110,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":1105,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":440,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":14,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":453,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":186,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":185,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":187,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":207,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":4,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":580,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":73,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":240,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":629,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":963,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":1070,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":463,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":1024,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":534,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":455,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":446,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":197,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":755,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":1106,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":157,"org.apache.commons.collections4.list.TreeListTest.testBug35258":437,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":542,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":1057,"org.apache.commons.collections4.map.LinkedMapTest.testClone":158,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":464,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":452,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":829,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":827,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":1064,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":479,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":718,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":719,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":807,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":65,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":88,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":664,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":1164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":357,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":68,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":66,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":558,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":795,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":224,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":1124,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":390,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":377,"org.apache.commons.collections4.SetUtilsTest.testEquals":1005,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1012,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":1131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":810,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":220,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":977,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":976,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":916,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":562,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":82,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":849,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":975,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":549,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":929,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":176,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":291,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":646,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":838,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":552,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":550,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":354,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":947,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":474,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":1091,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":131,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":817,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":802,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":919,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":560,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":1117,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":391,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":1016,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":880,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":770,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":32,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":750,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":927,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":926,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":925,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":991,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":835,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":733,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":984,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":1081,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":348,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":305,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":20,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":1113,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":1149,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":512,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":935,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":790,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":121,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":146,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":638,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":765,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":1121,"org.apache.commons.collections4.map.LRUMapTest.testLRU":376,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":6,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":985,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":885,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":866,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":221,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":994,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":665,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":666,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":667,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":49,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":505,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":414,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":649,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":760,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":1097,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":815,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":469,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":461,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":959,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":997,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":579,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":893,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":210,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":566,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":386,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":537,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":625,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":808,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":762,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":796,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":1051,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":411,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":729,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":270,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":1098,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":38,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":308,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":62,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":658,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":589,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":803,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":235,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":232,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":325,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":650,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":459,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":1038,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":1017,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":911,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":1075,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":780,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":630,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":1031,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":295,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":722,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":1096,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":1123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":368,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":942,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":591,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":592,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":173,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":519,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":845,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":965,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":698,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":843,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":1139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":745,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":685,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":982,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":83,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":619,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":656,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":1108,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":1033,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":60,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":744,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":341,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":467,"org.apache.commons.collections4.CollectionUtilsTest.transform1":1008,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":457,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":1073,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":532,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":1,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":462,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":775,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":356,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":818,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":1039,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":1042,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":205,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":710,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":1137,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":1013,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":1150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":602,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":861,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":966,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":603,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":1167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":601,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":996,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":306,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":427,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":216,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":742,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":35,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":428,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":902,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":125,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":481,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":1043,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":520,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":1122,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":320,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":289,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":521,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":1152,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":506,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":172,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":299,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":754,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":574,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":974,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":884,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":831,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":290,"org.apache.commons.collections4.map.CompositeMapTest.testGet":882,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":931,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":961,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":564,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":850,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":948,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":1022,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":820,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":84,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":39,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":1032,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":892,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":183,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":392,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":1103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":571,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":1069,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":922,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":86,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":1076,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":964,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":758,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":1163,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":1143,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":854,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1010,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.CollectionUtilsTest.union":986,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":1054,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":863,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":654,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":1049,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":153,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":1170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":252,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":590,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":17,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":1099,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":714,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":1126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":596,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":1127,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":1128,"org.apache.commons.collections4.list.TreeListTest.testRemove":2,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":1104,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":637,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":314,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":313,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":1093,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":776,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":1165,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":582,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":876,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":1074,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":315,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":441,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":647,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":96,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":442,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":222,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":1002,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":249,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":483,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":1116,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":490,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":604,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":764,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":466,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":1153,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":468,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":700,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":430,"org.apache.commons.collections4.map.LRUMapTest.testClone":388,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":687,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":217,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":1027,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":130,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":184,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":1135,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":1134,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":1133,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":749,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":772,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":747,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":393,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":342,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":894,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":620,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":858,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":870,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":1145,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":233,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":1072,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":1148,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":686,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":721,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":804,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":909,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":844,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":30,"org.apache.commons.collections4.list.TreeListTest.testListEquals":438,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":779,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":1044,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":588,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":1062,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":250,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":672,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":905,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":696,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":792,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":793,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":853,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":706,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":791,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":1071,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":697,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":445,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":642,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":64,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":1129,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":1050,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":1006,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":1142,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":940,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":1119,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":429,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":1063,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":85,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":215,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":715,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":967,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":852,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":889,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":476,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":995,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":529,"org.apache.commons.collections4.map.SingletonMapTest.testClone":979,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":933,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":1053,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":1056,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":612,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":1066,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":302,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":753,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":840,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":193,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":509,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":949,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":789,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":859,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":914,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":676,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":763,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":432,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":332,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":347,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":587,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":349,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":867,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":477,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":47,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":495,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":759,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":335,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":1109,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":503,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":823,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":41,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":1084,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":1085,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":1086,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":569,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":741,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":897,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":51,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":182,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":189,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":890,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":180,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":337,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":546,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":369,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":785,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":1120,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":147,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":449,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":480,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":37,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":473,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":364,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":628,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":635,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":398,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":670,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":258,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":1090,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":992,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":862,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":61,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":1034,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":40,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":56,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":632,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":352,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":617,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":1045,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":493,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":1094,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":408,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":431,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":860,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":261,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":71,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":824,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":223,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":826,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":825,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":1140,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":1161,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":167,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":756,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":522,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":123,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":644,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":7,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":957,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":443,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":684,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":296,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":939,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":384,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":487,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":53,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":1037,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":855,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":1035,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":1036,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":561,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":1087,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":526,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":21,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":1068,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":124,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":836,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":868,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":248,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":16,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":921,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":1158,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":43,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":768,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":234,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":410,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":161,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":938,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1011,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":607,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":433,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":1065,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":298,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":875,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":1141,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":887,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":255,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":435,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":865,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":988,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":1000,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":631,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":983,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":888,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":1077,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":1015,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":1078,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":536,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":1014,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":1079,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":1115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":555,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":904,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":920,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":1162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":548,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":771,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":1025,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":941,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":784,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":1111,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":1092,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":528,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":484,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":799,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":500,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":397,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":1166,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":798,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":908,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":913,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":112,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":794,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":993,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":144,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":307,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":510,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":557,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":989,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":813,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":1147,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":707,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1009,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":1100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":681,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":1089,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":609,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":597,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":300,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":1130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":930,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":837,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":105,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":1003,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":1060,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":135,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":136,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":333,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":598,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":1160,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":816,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":128,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":998,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":256,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":960,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":610,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":1046,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":475,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":1107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":928,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":226,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":227,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":70,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":530,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":970,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":1001,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":524,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":834,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":257,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":119,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":821,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":731,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":777,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":116,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":127,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":1067,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":29,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":951,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":950,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":968,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":378,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":540,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":624,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":417,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":1138,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":640,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":1007,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":247,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":1047,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":69,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":415,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":896,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":416,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":228,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":170,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":80,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":833,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":1118,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":5,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":712,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":969,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":978,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":1095,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":848},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31ad0e3f-3f05-11e6-bbad-1bf67efcdc2a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31ad8370-3f05-11e6-bbad-a55b399b6c2b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"31adaa81-3f05-11e6-bbad-4f6bb3e6ebc9","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (node != null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[14,15],"tindex":"31adaa82-3f05-11e6-bbad-81489b8a541e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31add193-3f05-11e6-bbad-2fc7861e7450","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[16],"tindex":"31adf8a4-3f05-11e6-bbad-9bee2fedae0b","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,14,128,129,15,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432],"tindex":"31adf8a5-3f05-11e6-bbad-0145acd86748","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            (int)++;\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n            addEntry(entry, hashIndex);\n            (int)++;\n            checkCapacity();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl"},"failures":[433],"tindex":"31ae1fb6-3f05-11e6-bbad-1965b8904db8","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31ae1fb7-3f05-11e6-bbad-fb7ec3ce94ab","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[434],"tindex":"31ae1fb8-3f05-11e6-bbad-d1fc3cc0570f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[435,436,437,2,3,438,439,440,441,442,443,444,445,4,446,447,5,6,7,8,448,449,450,9,451,452,453,454,10,11,12,13,455],"tindex":"31ae46c9-3f05-11e6-bbad-99aedc187d1f","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 1) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtBinaryOperatorImpl"},"failures":[17,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,456,457,458,459,460,56,57,58,59,69,158,152,153,461,157,156,155,154,161,162,159,160,163,164,165,166,167,168,169,170,171,172,173,174,175,462,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,463,464,465,466,467,468,469,470,388,376,377,378,379,380,381,382,383,384,385,386,387,375,391,392,389,390,393,394,395,396,397,398,399,400,401,402,403,404,405,471,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,472,473,474,475,476,477,478,479],"tindex":"31ae46ca-3f05-11e6-bbad-a1d604dabeb8","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == hashCode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"hashCode","currentIndex":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl"},"failures":[480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"tindex":"31ae6ddb-3f05-11e6-bbad-d9c083ca0994","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index >= index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl"},"failures":[514,515,516,517],"tindex":"31ae6ddc-3f05-11e6-bbad-81c477529d21","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[518,519,520,521],"tindex":"31ae6ddd-3f05-11e6-bbad-a528581d06d8","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618],"tindex":"31ae94ee-3f05-11e6-bbad-755aed9011ba","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:565","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T extends java.lang.Comparable<T>>org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookup(final java.lang.Object data, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (data == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n            while (node != null) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(data)), ((T)(node.getData(dataElement))));\n                if (cmp == 0) {\n                    rval = node;\n                    break;\n                } else {\n                    node = cmp < 0 ? node.getLeft(dataElement) : node.getRight(dataElement);\n                }\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"data"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[619,620,621],"tindex":"31ae94ef-3f05-11e6-bbad-9333de301598","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        {\n                            if (closures == null) {\n                                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                            } \n                            for (int int = 0 ; i < (closures.int) ; i++) {\n                                if ((closures[i]) == null) {\n                                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                                } \n                            }\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[622],"tindex":"31ae94f0-3f05-11e6-bbad-2182e6a3c96c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aebc01-3f05-11e6-bbad-63289686f1f7","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[623],"tindex":"31aebc02-3f05-11e6-bbad-b7f156c2e75b","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n                    if ((queue.size()) > 0) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(queue.toArray()));\n                        queue.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aebc03-3f05-11e6-bbad-0ff98e34849e","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((object[count]) == null) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"count","preds":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[624],"tindex":"31aebc04-3f05-11e6-bbad-5532242ea029","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[625],"tindex":"31aebc05-3f05-11e6-bbad-77a5b929e96f","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aebc06-3f05-11e6-bbad-35a0fb4786b8","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aee317-3f05-11e6-bbad-05c8d29eaa5e","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aee318-3f05-11e6-bbad-15698429dc74","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aee319-3f05-11e6-bbad-79cb6031ae57","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n                    if (doubleObject == null) {\n                        return 0.0;\n                    } \n                    return doubleObject.doubleValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aee31a-3f05-11e6-bbad-f5f01706a3ff","method":{"position":"org.apache.commons.collections4.list.TreeList:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if ((fromIndex < fromIndex) || (index > fromIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(fromIndex, 0, size());\n            return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(org.apache.commons.collections4.list.TreeList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"fromIndex","endIndex":"fromIndex","index":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[620,621],"tindex":"31aee31b-3f05-11e6-bbad-45a640886be8","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (defaultClosure == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"defaultClosure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af0a2c-3f05-11e6-bbad-450a0253fbf9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,526,527,524,525,533,534,536,537,538,539,540,541,542,543,544,648,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881],"tindex":"31af0a2d-3f05-11e6-bbad-c793841881e5","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af0a2e-3f05-11e6-bbad-832e43d2a5b9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[882,883,884,885],"tindex":"31af0a2f-3f05-11e6-bbad-23a25f7bce02","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af3140-3f05-11e6-bbad-1b1c102e4062","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af3141-3f05-11e6-bbad-33382591e0e6","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl"},"failures":[],"tindex":"31af3142-3f05-11e6-bbad-9b6ebcbd7479","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null ? obj == null : nextElement.equals(p)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"obj","nextElement":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[886],"tindex":"31af3143-3f05-11e6-bbad-e3fc7c9cf77b","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl"},"failures":[887,888,889],"tindex":"31af3144-3f05-11e6-bbad-63ab53029cdd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (!(start.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af5855-3f05-11e6-bbad-99ba514ec14c","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af5856-3f05-11e6-bbad-33ed918f3f4f","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        {\n                            if (closures == null) {\n                                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                            } \n                            for (int int = 0 ; i < (closures.int) ; i++) {\n                                if ((closures[i]) == null) {\n                                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                                } \n                            }\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af7f67-3f05-11e6-bbad-27261de25d57","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl"},"failures":[888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933],"tindex":"31af7f68-3f05-11e6-bbad-ed0f54fae7d2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k instanceof java.lang.Object[]) {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31af7f69-3f05-11e6-bbad-5f397eb9c541","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl"},"failures":[934,935,936,937,938,939,940],"tindex":"31af7f6a-3f05-11e6-bbad-51c98c073ada","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object == null) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31afa67b-3f05-11e6-bbad-835d0124bcbd","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n                    if (doubleObject == null) {\n                        return 0.0;\n                    } \n                    return doubleObject.doubleValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:87","type":"CtBinaryOperatorImpl"},"failures":[941,942,943,944,945,946,947,948],"tindex":"31afa67c-3f05-11e6-bbad-7f7683203f2c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies > nCopies) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"object","length":"nCopies","end":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtBinaryOperatorImpl"},"failures":[2,435,436,437,1,0,949,3,4,448,450,9,10,11,12,13],"tindex":"31afa67d-3f05-11e6-bbad-199fdab363ec","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? -1 : node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31afa67e-3f05-11e6-bbad-a3171ef7144e","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (coll != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll","transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31afa67f-3f05-11e6-bbad-b1d0021636bd","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n                    if ((queue.size()) > 0) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(queue.toArray()));\n                        queue.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31afa680-3f05-11e6-bbad-17bf6fd7c9ed","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (inputCollection instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[950,951,952,953],"tindex":"31afcd91-3f05-11e6-bbad-1f0da588bd78","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969],"tindex":"31afcd92-3f05-11e6-bbad-f9adab01857d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[295,296,298,299,300,302,303,305,308,309,328,329],"tindex":"31afcd93-3f05-11e6-bbad-a1e06cbbf89d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31afcd94-3f05-11e6-bbad-93b62b480f2f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"31afcd95-3f05-11e6-bbad-af9c0614f709","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31afcd96-3f05-11e6-bbad-8722347ba645","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aff4a7-3f05-11e6-bbad-4929468a5301","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[970],"tindex":"31aff4a8-3f05-11e6-bbad-756c62a84e9a","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (null == o) {\n        {\n            if (o != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                        throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n                    } \n                    java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aff4a9-3f05-11e6-bbad-f1e56802f1ca","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31aff4aa-3f05-11e6-bbad-6b5811e8a1d7","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:74","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.util.Map.Entry<K, V> object) {\n    if ((object == p) && (object != object)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"object","parent":"object","h":"object","predecessor":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"31aff4ab-3f05-11e6-bbad-abe19411584e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"key","o2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[971,972,973,974,975,976,977,978],"tindex":"31b01bbc-3f05-11e6-bbad-2322c6621d48","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b01bbd-3f05-11e6-bbad-c59c636888c0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b01bbe-3f05-11e6-bbad-8522eb62145c","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl"},"failures":[979,783,788,980],"tindex":"31b042cf-3f05-11e6-bbad-d99c1264bc0a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b042d0-3f05-11e6-bbad-2799a2c7c0fc","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl"},"failures":[480,481,483,486,489,981,490,493,494,982,983],"tindex":"31b042d1-3f05-11e6-bbad-bfd7c4303a2d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b042d2-3f05-11e6-bbad-eff177176ae4","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == nodeToInsert) {\n        {\n            super.addNode(nodeToInsert, insertBeforeNode);\n            broadcastNodeInserted(nodeToInsert);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"nodeToInsert","header":"nodeToInsert"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[984,985],"tindex":"31b042d3-3f05-11e6-bbad-9f5d845d8bd4","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[986,987,988],"tindex":"31b042d4-3f05-11e6-bbad-e9f65221e533","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b069e5-3f05-11e6-bbad-b9ab091978ca","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl"},"failures":[989,990,991,992,993,994,995,996,506,512,997],"tindex":"31b069e6-3f05-11e6-bbad-db7c281d3b48","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b069e7-3f05-11e6-bbad-51659b0875a4","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b069e8-3f05-11e6-bbad-e3a8692c0c87","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"elements"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b069e9-3f05-11e6-bbad-f3a51a306e34","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (null == o) {\n        {\n            if (o != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                        throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n                    } \n                    java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[998],"tindex":"31b090fa-3f05-11e6-bbad-4dc0e2160865","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[999],"tindex":"31b090fb-3f05-11e6-bbad-8da6fb42ede7","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b090fc-3f05-11e6-bbad-d91393968f49","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[1000,1001,1002,1003,1004],"tindex":"31b090fd-3f05-11e6-bbad-1b71fff81452","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:199","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (fromIndexInclusive < 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndexInclusive , toIndexExclusive);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"fromIndexInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b090fe-3f05-11e6-bbad-27c09e94d98d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b0b80f-3f05-11e6-bbad-8926ce6cb44d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[1005],"tindex":"31b0b810-3f05-11e6-bbad-b14047a34ac3","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"set1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtBinaryOperatorImpl"},"failures":[522,523,524,525,527,526,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,568,567,569,570,571,572,573,574,575,576,577,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618],"tindex":"31b0b811-3f05-11e6-bbad-fd4b66fb5fec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","yFormerParent":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl"},"failures":[1006,1007],"tindex":"31b0b812-3f05-11e6-bbad-39e3bea1ab05","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[1008],"tindex":"31b0b813-3f05-11e6-bbad-6568ec98806d","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b0df24-3f05-11e6-bbad-f93fd3747a40","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"31b0df25-3f05-11e6-bbad-6dc41519fad9","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[954,1009,955,956,957,958,959,1010,961,962,1011,963,964,965,966,967,1012,969],"tindex":"31b0df26-3f05-11e6-bbad-eb1fc41493f0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:415","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value1 != null) {\n        {\n            return (value1 == value2) || (value1 == null ? false : value1.equals(value2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b0df27-3f05-11e6-bbad-f91b9b74648b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        {\n                            if (closures == null) {\n                                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                            } \n                            for (int int = 0 ; i < (closures.int) ; i++) {\n                                if ((closures[i]) == null) {\n                                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                                } \n                            }\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b0df28-3f05-11e6-bbad-f52ae016568f","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[1013,1014,1015,1016,1017,1018],"tindex":"31b10639-3f05-11e6-bbad-c10591b6580e","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[1019,1020],"tindex":"31b1063a-3f05-11e6-bbad-43206796ad1c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl"},"failures":[],"tindex":"31b1063b-3f05-11e6-bbad-e17c087dcdb4","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b1063c-3f05-11e6-bbad-d9adbfac5669","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b1063d-3f05-11e6-bbad-d754d0bcfd65","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n    } \n    return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {    };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"sortedMap"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b1063e-3f05-11e6-bbad-4b1a1185e267","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if (a instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[1021],"tindex":"31b1063f-3f05-11e6-bbad-27a673752c72","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (trueClosure == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"trueClosure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[1022],"tindex":"31b12d50-3f05-11e6-bbad-d5f2644794d5","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170],"tindex":"31b12d51-3f05-11e6-bbad-afd32bc1fa71","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"31b12d52-3f05-11e6-bbad-0b9f2ede5788","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if ((bitIndex != (-1)) && (pos != bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467317342470/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"bitIndex","index":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}