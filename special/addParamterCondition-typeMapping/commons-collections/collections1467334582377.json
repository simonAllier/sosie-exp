{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":6,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":417,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":623,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":602,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":270,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":651,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":361,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":638,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":637,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":504,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":53,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":77,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsSelfHashCode":225,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":204,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":329,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":372,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":327,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":45,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":110,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":594,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":131,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":439,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":629,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":682,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":698,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":516,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":274,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":694,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":44,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":355,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":38,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":444,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":256,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":311,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":665,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":547,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":198,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":235,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":537,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":677,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":453,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":612,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":192,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":433,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":620,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":452,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":350,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":398,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":632,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":557,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":680,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":137,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":166,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":13,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":39,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":653,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":683,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":422,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":654,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":423,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":118,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":564,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":635,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":709,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":676,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":546,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":567,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":334,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":175,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":252,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":408,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":172,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":542,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":291,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":486,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":378,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":286,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":558,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":34,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":367,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":513,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":649,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":288,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":336,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":338,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":357,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":488,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":299,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":672,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":650,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":262,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":163,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":463,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":247,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":643,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":385,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":2,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":570,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":476,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":138,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":666,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":428,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":184,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":337,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":303,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":559,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":37,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":195,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":290,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":664,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":663,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":550,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":613,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":539,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":445,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":493,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":600,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":616,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":295,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":215,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":320,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":614,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":134,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":183,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":591,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":342,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":84,"org.apache.commons.collections4.list.TreeListTest.testRemove":429,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":139,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":633,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":531,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":321,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":441,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":287,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":109,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":554,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":99,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":353,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":69,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":565,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":272,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":592,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":271,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":461,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":572,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":352,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":517,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":634,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":505,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":645,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":151,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":83,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":536,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":316,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":190,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":425,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":223,"org.apache.commons.collections4.map.LRUMapTest.testClone":690,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":188,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":605,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":589,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":394,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":60,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":388,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":509,"org.apache.commons.collections4.ListUtilsTest.testSubtract":443,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":149,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":543,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":250,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":669,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":332,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":462,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":535,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":540,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":314,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":363,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":364,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":238,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":697,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":470,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":319,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":396,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":193,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":646,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":312,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":512,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":296,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":485,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":292,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":349,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":451,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":685,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":583,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":159,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":340,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":479,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":401,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":154,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":11,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":711,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":424,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":264,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":10,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":56,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":383,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":40,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":324,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":459,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":294,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":415,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":414,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":413,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":667,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":460,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":494,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":330,"org.apache.commons.collections4.map.LRUMapTest.testReset":379,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":343,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":699,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":538,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":178,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":450,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":657,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":98,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":710,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":328,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":285,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":268,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":341,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":434,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":618,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":87,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":368,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":475,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":661,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":103,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":25,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":339,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":384,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":395,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":432,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":530,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":652,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":323,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":399,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":628,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":210,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":549,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":662,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":284,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":436,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":521,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":279,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":515,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":255,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":136,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":21,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":673,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":263,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":480,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":165,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":212,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":249,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":418,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":297,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":346,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":119,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":631,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":259,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":622,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":621,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":174,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":684,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":92,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":207,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalFullCollectionExists":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":675,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":437,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":232,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":322,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":72,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":155,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":245,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":302,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":273,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":642,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":393,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":466,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":578,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":606,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":607,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":655,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":331,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":65,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":490,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":678,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":703,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":491,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":679,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":95,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":525,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":373,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":86,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":670,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":129,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":226,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":216,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":403,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":426,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":176,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":477,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":627,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalEmptyCollectionExists":222,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":27,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":454,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":544,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":701,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":381,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":588,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":227,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":421,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":160,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":73,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":145,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":700,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":545,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":702,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":30,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":482,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":185,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":571,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":435,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":569,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":617,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":380,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":590,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":641,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":497,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":501,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":601,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":446,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":693,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":467,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":187,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":122,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":265,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":229,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":59,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":96,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":344,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":522,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":448,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":251,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":269,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":405,"org.apache.commons.collections4.list.TreeListTest.testBug35258":431,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":556,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":369,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":574,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":52,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":362,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":14,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":211,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":553,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":489,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":584,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":430,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":18,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":695,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":577,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":582,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":465,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":281,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":310,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":586,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":585,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":91,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":658,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":80,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":181,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":19,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":61,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":508,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":112,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":17,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":386,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":114,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":221,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":150,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":370,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":691,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":280,"org.apache.commons.collections4.SetUtilsTest.testEquals":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":598,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":275,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":472,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":498,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":146,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":127,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":668,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":63,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":170,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":704,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":307,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":608,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":610,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":197,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":348,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":659,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":8,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":503,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":82,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":58,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":534,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":298,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":456,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":104,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":356,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":26,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":205,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":609,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":93,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":455,"org.apache.commons.collections4.CollectionUtilsTest.find":442,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":696,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":674,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":24,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":152,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":404,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":317,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":182,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":371,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":387,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":49,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":194,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":240,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":283,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":276,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":168,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":510,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":365,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":267,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":519,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":179,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":282,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":576,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":54,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":142,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":639,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":228,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":148,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":619,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":325,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":469,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":402,"org.apache.commons.collections4.map.LRUMapTest.testLRU":688,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":90,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":23,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":575,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":206,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":487,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":173,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":518,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":351,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":62,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":671,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":257,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":359,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":604,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":457,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":561,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":254,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":409,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":237,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":132,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":528,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":209,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":686,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":32,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":529,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":374,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":410,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":411,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":167,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":407,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":706,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":15,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":382,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":548,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":358,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":233,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":705,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":239,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":707,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":560,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":708,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":376,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":520,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":647,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":511,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":579,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":158,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":345,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":130,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":133,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":473,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":214,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":599,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":246},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1022c72-3f26-11e6-8061-81b6363abd44","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final E[] E[] = ((E[])(bag.toArray()));\n        bag.clear();\n        for (final E E : values) {\n            decorated.decorated().add(transformer.transform(value));\n        }\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl"},"failures":[0,1],"tindex":"a1027a93-3f26-11e6-8061-5f576634977b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:343","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a102a1a4-3f26-11e6-8061-d1c925b20400","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if ((key != null) && (answer instanceof java.util.Map)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[2,3,4,5],"tindex":"a102a1a5-3f26-11e6-8061-1f36038cb608","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a102a1a6-3f26-11e6-8061-73d75fb87d74","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,4,5,22],"tindex":"a102c8b7-3f26-11e6-8061-b97a69ee69c5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a102c8b8-3f26-11e6-8061-a1d5f8bd68b5","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a102efc9-3f26-11e6-8061-7f6bf73f2f5d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index >= index) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[23],"tindex":"a102efca-3f26-11e6-8061-b37f9fe0f901","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a102efcb-3f26-11e6-8061-5bc0449f8c6a","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    final java.util.Properties java.util.Properties = new java.util.Properties();\n    if (map != null) {\n        for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            answer.put(key, value);\n        }\n    } \n    return answer;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[24],"tindex":"a10316dc-3f26-11e6-8061-55a5accba523","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[25,26],"tindex":"a10316dd-3f26-11e6-8061-2174868f93ba","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"a1033dee-3f26-11e6-8061-13c532709f70","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value != null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[43,44],"tindex":"a1033def-3f26-11e6-8061-2fd157cde59d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl"},"failures":[45,46],"tindex":"a1033df0-3f26-11e6-8061-f7ec56443529","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"a1033df1-3f26-11e6-8061-55e4fabf18e8","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n        final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n        if ((intersect.size()) != 0) {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n        } \n    }\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n    temp[((temp.int) - 1)] = map;\n    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"a1036502-3f26-11e6-8061-ff274b130afb","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[65],"tindex":"a1036503-3f26-11e6-8061-abae95d6657f","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1038c14-3f26-11e6-8061-27b996074a12","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1038c15-3f26-11e6-8061-696aaee93fcc","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n    if ((map.size()) > 0) {\n        final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n        decorated.clear();\n        decorated.decorated().putAll(transformed);\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[66],"tindex":"a1038c16-3f26-11e6-8061-815fb474f5b2","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1038c17-3f26-11e6-8061-fd43aae7cd9e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"a1038c18-3f26-11e6-8061-7fda0b999db5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[67,68,69,70,71,72,73,103,104,105,106,107,108],"tindex":"a103b329-3f26-11e6-8061-c5ada4cec401","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"a103b32a-3f26-11e6-8061-0d5ce175de27","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[157],"tindex":"a103b32b-3f26-11e6-8061-2bf98d137894","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection == null) || (inputCollection == null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"inputCollection","b":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[158],"tindex":"a103b32c-3f26-11e6-8061-61d95e501f48","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"elements"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a103b32d-3f26-11e6-8061-21d67f4425cd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < index) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a103da3e-3f26-11e6-8061-9122ae81c47f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a103da3f-3f26-11e6-8061-7396db3a6d80","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[159,160],"tindex":"a103da40-3f26-11e6-8061-2b75bdfba9f3","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl"},"failures":[161],"tindex":"a103da41-3f26-11e6-8061-09e666a65965","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl"},"failures":[162,163,164],"tindex":"a1040152-3f26-11e6-8061-d73f86f34cbb","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if ((index % 2) == 0) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[],"tindex":"a1040153-3f26-11e6-8061-e9faf44aaaca","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1040154-3f26-11e6-8061-77363e4d661a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl"},"failures":[165,166,167],"tindex":"a1040155-3f26-11e6-8061-b5d90914eb58","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    return decorated().lastIndexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[168,169],"tindex":"a1042866-3f26-11e6-8061-478f9d7cd6e0","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (a != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[170,171,172,173,174,175,176,177,178,179],"tindex":"a1044f77-3f26-11e6-8061-31b323999b82","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1044f78-3f26-11e6-8061-9f5f13a9ae43","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1047689-3f26-11e6-8061-27fd301aa104","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    return decorated().lastIndexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a104768a-3f26-11e6-8061-893ed64d33d2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index == 0) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[180,181,182,183,184,185,186,187],"tindex":"a104768b-3f26-11e6-8061-ed32fdd33118","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[188,189,190,191],"tindex":"a104768c-3f26-11e6-8061-755e112c4688","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"value","position2":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl"},"failures":[192],"tindex":"a104768d-3f26-11e6-8061-a93847008e3b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > count) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[193,194,161],"tindex":"a104768e-3f26-11e6-8061-5378ca7fc90c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                {\n                    if (transformers == null) {\n                        return null;\n                    } \n                    return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl"},"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,48,212,213,49,51,214,58,59,215,216,60,61,62,63,217,218,64,219,220,221,222,223,224,225],"tindex":"a1049d9f-3f26-11e6-8061-e1a29bd3302f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl"},"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"a1049da0-3f26-11e6-8061-0315fff14369","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        {\n            entry.setValue(newValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[285],"tindex":"a1049da1-3f26-11e6-8061-8f17328986b1","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1049da2-3f26-11e6-8061-c782b948a340","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl"},"failures":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"tindex":"a104c4b3-3f26-11e6-8061-5301df678fc9","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[188,304,305,189,190,191],"tindex":"a104c4b4-3f26-11e6-8061-c7151ea1cddf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.lang.Byte) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[306],"tindex":"a104c4b5-3f26-11e6-8061-2d8db717b07b","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a104c4b6-3f26-11e6-8061-91c880ed1312","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            if ((set.isEmpty()) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl"},"failures":[307,308,309],"tindex":"a104c4b7-3f26-11e6-8061-f92f22179d3b","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count >= count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","threshold":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[194],"tindex":"a104c4b8-3f26-11e6-8061-418323d6810d","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[310],"tindex":"a104ebc9-3f26-11e6-8061-4368f50052d2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a104ebca-3f26-11e6-8061-7505ae8ba33f","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[311,312,313,314,315,316,317],"tindex":"a104ebcb-3f26-11e6-8061-c9469d38ed44","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a104ebcc-3f26-11e6-8061-1db5805f412b","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a104ebcd-3f26-11e6-8061-0793dbc70e8f","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a10512de-3f26-11e6-8061-fb105953768c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                {\n                    if (transformers == null) {\n                        return null;\n                    } \n                    return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a10512df-3f26-11e6-8061-39542deef6e8","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl"},"failures":[],"tindex":"a10512e0-3f26-11e6-8061-0fb2dc9406b0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a10512e1-3f26-11e6-8061-611777173480","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[318],"tindex":"a10512e2-3f26-11e6-8061-35cdc8f00ba2","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a10512e3-3f26-11e6-8061-214660ce4c50","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a10512e4-3f26-11e6-8061-edbc113e1ba4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtBinaryOperatorImpl"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"a10539f5-3f26-11e6-8061-958fb32c48cf","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != iterator) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator","currentIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[339],"tindex":"a10539f6-3f26-11e6-8061-97e046db2720","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"a10539f7-3f26-11e6-8061-a1e0bec59b11","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[370,371,372],"tindex":"a1056108-3f26-11e6-8061-056cf8b9d4e6","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1056109-3f26-11e6-8061-e336792fd30c","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105610a-3f26-11e6-8061-a1d7323767ad","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[373],"tindex":"a105610b-3f26-11e6-8061-7dddcf025d55","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl"},"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"a105610c-3f26-11e6-8061-813f650567cc","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (((hashIndex % hashIndex) != 0) || ((hashIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"hashIndex","lengthInBits":"hashIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl"},"failures":[],"tindex":"a105881d-3f26-11e6-8061-c34b8f6ad78e","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[],"tindex":"a105881e-3f26-11e6-8061-93d31ccdd4db","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl"},"failures":[428],"tindex":"a105881f-3f26-11e6-8061-85f593104d29","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[371],"tindex":"a105ae30-3f26-11e6-8061-6d05909f9e06","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105ae31-3f26-11e6-8061-e3f502c528bb","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105ae32-3f26-11e6-8061-61293474f60c","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if ((value instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl"},"failures":[429,430,431,432,433,434,435,436,437,438,439,440,441],"tindex":"a105ae33-3f26-11e6-8061-cfb9624c6749","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (next == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (next == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean = node == null;\n                    org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n                    recalcHeight();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"next"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105ae34-3f26-11e6-8061-4b685b812877","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (next == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (next == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean = node == null;\n                    org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n                    recalcHeight();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"next"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105d545-3f26-11e6-8061-21631e5d4739","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (array instanceof java.lang.Double) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[442],"tindex":"a105d546-3f26-11e6-8061-e9ee9e5f117f","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[443,444,445,446,447,448,449,450,451,452,453,454,286,287,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,288,289,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,290,291,487,488,489,490,491,492,493,494,495,309,496,497,498,499,500,501,292,293,502,503,504,505,506,507,508,509,510,192,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,294,295,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,296,297,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,298,299,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582],"tindex":"a105d547-3f26-11e6-8061-9b10c21f8078","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n                    while (i.hasNext()) {\n                        final boolean boolean = add(i.next());\n                        changed = changed || added;\n                    }\n                    return changed;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105fc58-3f26-11e6-8061-2b19159ffd13","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105fc59-3f26-11e6-8061-69038050b048","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105fc5a-3f26-11e6-8061-5b602205969f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a105fc5b-3f26-11e6-8061-b556c2f35288","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a106236c-3f26-11e6-8061-333d4961d380","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Short) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[583,584,585,586,587,374,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,375,378,689,380,381,382,383,388,389,390,406,413,414,416,419,420,423,424,425,426,427],"tindex":"a106236d-3f26-11e6-8061-0bbc4b977fbe","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[690,691,689,398,425,426],"tindex":"a106236e-3f26-11e6-8061-f91802ab0245","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[692],"tindex":"a1064a7f-3f26-11e6-8061-c1110635e183","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if ((set1.size()) != (set2.size())) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"set1","b":"set2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[693,694],"tindex":"a1064a80-3f26-11e6-8061-4fb7767e6711","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1064a81-3f26-11e6-8061-3b1894e3fb9a","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            if ((set.isEmpty()) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1064a82-3f26-11e6-8061-cf605fcd667d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n                    while (i.hasNext()) {\n                        final boolean boolean = add(i.next());\n                        changed = changed || added;\n                    }\n                    return changed;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1064a83-3f26-11e6-8061-693a2c2a33fd","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[447,287,457,458,459,463,289,473,474,475,479,291,489,490,491,495,293,504,505,506,510,516,517,518,695,696,697,300,698],"tindex":"a1064a84-3f26-11e6-8061-dfb135ce4624","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl"},"failures":[699,700,701,702,703,704,705,706,707,708,709,710,711],"tindex":"a1067195-3f26-11e6-8061-c11666fe42d1","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (indent == 0) {\n        {\n            for (int int = 0 ; i < indent ; i++) {\n                out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331713229/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}