{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":55,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":527,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":195,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":637,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":714,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":493,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":770,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":892,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":692,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":850,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":314,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":839,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":593,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":592,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":882,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":229,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":721,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":519,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":868,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":475,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":896,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":15,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":572,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":285,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":23,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":800,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":246,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.ListUtilsTest.testLazyList":125,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":58,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":117,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":397,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":534,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":650,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":312,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":736,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":835,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":203,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":673,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":543,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":329,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":762,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":72,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":511,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":731,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":238,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":265,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":137,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":295,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":197,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":287,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":614,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":47,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":784,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":324,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":14,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":659,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":860,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":251,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":70,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":539,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":708,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":261,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":894,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":513,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":322,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":452,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":825,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":823,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":540,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":147,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":450,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":449,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":85,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":482,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":211,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":717,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":621,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":216,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":875,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":266,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":286,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":376,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":418,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":778,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":88,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":876,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":661,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":729,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":754,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":699,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":806,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":433,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":666,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":638,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":865,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":844,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":625,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":719,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":164,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":853,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":658,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":563,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":374,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":897,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":342,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":669,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":112,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":344,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":602,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":304,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":306,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":776,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":120,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":495,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":826,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":523,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":769,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":198,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":388,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":335,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":707,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":303,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":821,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":676,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":781,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":520,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":631,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":323,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":473,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":879,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":687,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":479,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":321,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.map.LRUMapTest.testReset":653,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":751,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":442,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":709,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":628,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":883,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":49,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":780,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":403,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":297,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":507,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":662,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":803,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":350,"org.apache.commons.collections4.map.LinkedMapTest.testReset":617,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":437,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":413,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":674,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":878,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":448,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":481,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":276,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":288,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":358,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":346,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":262,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":689,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":759,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":603,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":468,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":855,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":508,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":277,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":793,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":320,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":648,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":359,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":877,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":132,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":801,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":222,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":756,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":795,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":561,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":535,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":888,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":462,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":463,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":21,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":529,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":612,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":740,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":503,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":738,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426":309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":576,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":645,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":761,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":644,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":375,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":426,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":626,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":799,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":328,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":553,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":824,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":819,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":208,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":651,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":618,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":13,"org.apache.commons.collections4.map.LinkedMapTest.testClone":616,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":735,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":728,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":847,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":369,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":571,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":372,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":838,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":370,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":833,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":663,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":737,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":590,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":655,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":851,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":574,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":244,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":711,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":852,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":767,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":862,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":848,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":338,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":636,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":870,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":353,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":394,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":696,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":858,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":499,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":802,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":840,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":664,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":506,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":362,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":255,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":744,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":333,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":822,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":166,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":119,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":541,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":505,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":828,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":209,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":880,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":570,"org.apache.commons.collections4.map.LRUMapTest.testLRU":654,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":581,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":712,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":578,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":697,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":818,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":457,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":366,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":555,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":755,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":604,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":683,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":856,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":43,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":681,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":812,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":25,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":17,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":849,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":741,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":814,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":834,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":432,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":797,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":142,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":99,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":176,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":363,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":598,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":115,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":688,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":408,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":863,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":59,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":841,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":436,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":528,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":702,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":315,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":298,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":884,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":239,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":629,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":633,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":296,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":635,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":777,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":264,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":606,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":881,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":786,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":207,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":231,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":732,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":270,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":291,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":734,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":753,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":151,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":566,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":290,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":859,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":417,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":722,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":80,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":693,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":691,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":101,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":808,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":334,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":713,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":895,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":815,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":191,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":886,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":548,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":632,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":310,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":365,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":524,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":226,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":444,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":634,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":435,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":727,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":610,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":428,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":599,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":223,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":642,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":665,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":250,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":580,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":595,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":546,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":345,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":726,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":501,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":339,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":60,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":497,"org.apache.commons.collections4.list.TreeListTest.testRemove":273,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":866,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":146,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":573,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":796,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":186,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":352,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":565,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":377,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":283,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":698,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":772,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":569,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":217,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":500,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":83,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":122,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":81,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":739,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":196,"org.apache.commons.collections4.map.LRUMapTest.testClone":652,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":390,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":643,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":381,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":773,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":294,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":515,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":237,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":504,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":706,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":567,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":874,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":431,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":162,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":118,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":763,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":752,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":768,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":830,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":215,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":831,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":785,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":829,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":368,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":259,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":547,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":798,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":816,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":182,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":845,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":585,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":559,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":318,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":302,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":885,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":347,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":820,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":864,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":89,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":749,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":554,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":579,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":649,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":827,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":704,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":212,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":299,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":103,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":267,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":268,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":537,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":459,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":135,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":355,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":130,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":280,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":730,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":48,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":560,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":532,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":228,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":647,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":367,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":407,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":641,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":220,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":531,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":893,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":313,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":640,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":24,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":502,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":597,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":357,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":172,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":427,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":668,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":391,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":392,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":788,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":509,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":440,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":550,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":809,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":600,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":611,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":456,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":678,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":720,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":804,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":373,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":779,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":568,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":627,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":0,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":348,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":242,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":243,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":805,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":105,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":542,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":871,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":522,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":470,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":609,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":158,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":757,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":133,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":171,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":869,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":364,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":131,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":680,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":564,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":496,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":843,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":114,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":703,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":577,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":179,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":292,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":765,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":743,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":213,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":282,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":556,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":787,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":538,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":742,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":204,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":488,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":494,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":613,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":492,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":26,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":846,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":98,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":163,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":774,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":891,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":7,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":810,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":837,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":667,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":867,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":205,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":236,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":241,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":836,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":723,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":832,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":284,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":144,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":854,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":530,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":794,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":258,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":775,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":460,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":789,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":705,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":219,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":679,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":123,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":746,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":715,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":254,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":498,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":857,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":192,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":517,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":861,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":525,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":293,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":872,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":758,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":3,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":389,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":889,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":588,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":516,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":686,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":792,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":557,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":615,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":684,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":685,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":890,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":111,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":630,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":701,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":725,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":811,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":591,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":813,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":657,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":608,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":675},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl"},"failures":[],"tindex":"304d2469-3f34-11e6-8050-f9f7afbff4ad","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"304d999a-3f34-11e6-8050-d3aa063f57db","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[7,8,9,96,97,98,99,100,101],"tindex":"304dc0ab-3f34-11e6-8050-eb75014850e3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304dc0ac-3f34-11e6-8050-73342cb9a051","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"304de7bd-3f34-11e6-8050-977400a837b1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304de7be-3f34-11e6-8050-eb0ee601a4e5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[114],"tindex":"304de7bf-3f34-11e6-8050-7be548144baf","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input instanceof java.util.List<?>) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304e0ed0-3f34-11e6-8050-cb4efa037f81","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304e0ed1-3f34-11e6-8050-25a8a53e3a0e","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[115,116],"tindex":"304e35e2-3f34-11e6-8050-8d5d10c98993","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (null != key4) {\n        {\n            if (key2 == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n                    return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[117,118,119,120,121,122,123],"tindex":"304e5cf3-3f34-11e6-8050-e348b35acc0a","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304e5cf4-3f34-11e6-8050-69d5b7234e34","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304e8405-3f34-11e6-8050-f1eaf58f60b0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (null != key4) {\n        {\n            if (key2 == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n                    return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key4"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl"},"failures":[124],"tindex":"304ed226-3f34-11e6-8050-3f67b86bde4e","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl"},"failures":[125],"tindex":"304ef937-3f34-11e6-8050-bd8b0c6f67e8","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl"},"failures":[126,127,128,129,130,131],"tindex":"304ef938-3f34-11e6-8050-d304a6d632a4","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[124],"tindex":"304ef939-3f34-11e6-8050-e3107ea3b5b9","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304ef93a-3f34-11e6-8050-353c3ca6ff07","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl"},"failures":[132,133,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"304f204b-3f34-11e6-8050-c95904c4c0c2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count >= count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"304f475c-3f34-11e6-8050-d3ba081edd3d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl"},"failures":[211,212,213,214,215,216,217,218,219],"tindex":"304f475d-3f34-11e6-8050-9511211a5054","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[220],"tindex":"304f6e6e-3f34-11e6-8050-d5d81ba267b9","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"304f6e6f-3f34-11e6-8050-83b9acc406bc","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if (b == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((b instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return a == null ? b == null : a.equals(b);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304f6e70-3f34-11e6-8050-97c6ae8a4cab","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtInvocationImpl"},"failures":[],"tindex":"304f6e71-3f34-11e6-8050-2d929484583b","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl"},"failures":[259,260],"tindex":"304f9582-3f34-11e6-8050-fb22c490caca","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304f9583-3f34-11e6-8050-255c556d5cbf","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304f9584-3f34-11e6-8050-d9f59868a669","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl"},"failures":[261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"304f9585-3f34-11e6-8050-110869bf34c5","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl"},"failures":[273,274,275,276,277],"tindex":"304fbc96-3f34-11e6-8050-7712d4ff9a98","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[8,9,278,49,50],"tindex":"304fbc97-3f34-11e6-8050-e1539551d9a3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304fbc98-3f34-11e6-8050-0b0e51fcd426","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304fe3a9-3f34-11e6-8050-a50551769eae","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304fe3aa-3f34-11e6-8050-b3b44ae44940","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl"},"failures":[279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"tindex":"304fe3ab-3f34-11e6-8050-1904fee67585","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((set.isEmpty()) == false) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"304fe3ac-3f34-11e6-8050-1fe0ffa670b4","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[308],"tindex":"30500abd-3f34-11e6-8050-6b7869b6ac5d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30500abe-3f34-11e6-8050-29d2be08e6ee","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[112],"tindex":"30500abf-3f34-11e6-8050-2dcc54307b3d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[309,310,311,312],"tindex":"305031d0-3f34-11e6-8050-ed470e57e337","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305031d1-3f34-11e6-8050-9965c9006de2","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if (b == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((b instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return a == null ? b == null : a.equals(b);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[313,314,315,316,317,318,319,320,321,322,244,245,323,246,247,248,324,325,249,326,250,327,328,251,252,329,330,331,332,253,254,333,255,256,257,334,335,336,337,338,339,340,258,341,342,343],"tindex":"305031d2-3f34-11e6-8050-6bd008bb11e9","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:51","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lengthInBits(final java.lang.String key) {\n    if (key == null) {\n        {\n            return key != null ? (key.length()) * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) : 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"305058e3-3f34-11e6-8050-db6a39d5fe05","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[344,345,346],"tindex":"305058e4-3f34-11e6-8050-d59ee506c8c9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[347,348,349,350,351],"tindex":"305058e5-3f34-11e6-8050-07c60b13d764","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (null == label) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[52,54,55,56,57,58,70,74,81,82,84,87,88,91,92,93,94,95],"tindex":"305058e6-3f34-11e6-8050-371524b5cbd2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[352],"tindex":"30507ff7-3f34-11e6-8050-3f46656286f4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[353],"tindex":"30507ff8-3f34-11e6-8050-efb72a7ee31f","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[354,355,356,357,358],"tindex":"30507ff9-3f34-11e6-8050-29031a6a5357","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl"},"failures":[],"tindex":"30507ffa-3f34-11e6-8050-9da3696decbb","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(fromIndex)) {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:257","type":"CtBinaryOperatorImpl"},"failures":[359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,265,270,462,463,464,465,466,467,468,271,272,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"3050a70b-3f34-11e6-8050-c716f9e6e692","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[488,489,490,491],"tindex":"3050ce1c-3f34-11e6-8050-7580b70ec639","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3050ce1d-3f34-11e6-8050-b5d50fd2e28a","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[492],"tindex":"3050f52e-3f34-11e6-8050-e76ebb59661c","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[493],"tindex":"3050f52f-3f34-11e6-8050-af3621ce10e9","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3050f530-3f34-11e6-8050-d178deb16d50","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3050f531-3f34-11e6-8050-53bba55ecbb0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"h","left":"h","h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"tindex":"30514352-3f34-11e6-8050-dfc8cafa29e7","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:504","type":"CtMethodImpl","sourcecode":"protected void nodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                boolean = false;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n                (int)--;\n            } else {\n                boolean = false;\n                boolean = false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30514353-3f34-11e6-8050-a9f7c6efb774","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30514354-3f34-11e6-8050-4f964a555625","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30514355-3f34-11e6-8050-0f4163209e43","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (((coll2 == null) || (coll2 == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll2","list2":"coll2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[518,124],"tindex":"30516a66-3f34-11e6-8050-952fea368cff","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (defaultTransformer == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"defaultTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,512,513,514,515,538,539,540,541,542,543,544,545,516,546,517,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594],"tindex":"30516a67-3f34-11e6-8050-57bb08a59d98","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[595],"tindex":"30516a68-3f34-11e6-8050-538f602ffdc2","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if ((list == null) || (list == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl"},"failures":[596,363,597,598,599,600,601,602,364,365,603,604,605,606,366,607,367,608,609,610,611,612,613,614,615,616,617,618,619,620,621,401,622,623,624,625,402,403,404,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,405,641,642,643,644,645,646,406,407,647,408,648,649,409,410,650,651,411,412,413,414,415,652,653,654,655,656,657,658,659,660,661,470,471,472,473,662,663,664,665,474,475,476,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,477,681,682,683,684,685,686,478,479,687,480,688,689,481,482,690,691,483,484,485,486,487],"tindex":"30516a69-3f34-11e6-8050-f9e826541ff5","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((hashIndex == 0) || (hashIndex == 0)) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"hashIndex","n":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3051917a-3f34-11e6-8050-9fa535347cda","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,132,133,751,752,753,754,755,127,128,756,757,758,759,760,134,135,761,762,763,764,765,136,137,766,767,768,769,770,140,145,146,149,151,154,155],"tindex":"3051917b-3f34-11e6-8050-5d9e1de59f92","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3051917c-3f34-11e6-8050-29fdf5468d67","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3051b88d-3f34-11e6-8050-691fcd38ffa0","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:359","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection1, final java.util.Collection<E> compositeCollection2) {\n    if ((compositeCollection1.size()) > 0) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection1);\n            java.util.List<java.util.Collection<E>>.add(compositeCollection2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"compositeCollection1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl"},"failures":[771,772],"tindex":"3051b88e-3f34-11e6-8050-433fe642327d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl"},"failures":[773,774,775,776,777,778,779,780,781,782,783],"tindex":"3051b88f-3f34-11e6-8050-dbe6685c0a10","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[784,785,786,787,788,789,790,791,792,136,137,766,767,768,769,770],"tindex":"3051b890-3f34-11e6-8050-8d2a489eb1ab","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[793,794,795,796,797,798,799,800,801,802,803,348,349,804,805,806,807,808,350,809,810,811,812,813,814,815,351,816,347,817,818,819,820,821,822,176,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868],"tindex":"3051b891-3f34-11e6-8050-d782d4a6c081","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[869,870],"tindex":"3051dfa2-3f34-11e6-8050-05b47414ae14","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl"},"failures":[308,871,872],"tindex":"3051dfa3-3f34-11e6-8050-23cd65b742fe","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Short) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3051dfa4-3f34-11e6-8050-3daaaaef71fd","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if ((indexRelativeToMe >= 0) && (bitIndex < indexRelativeToMe)) {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"indexRelativeToMe","bitIndex":"indexRelativeToMe"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3051dfa5-3f34-11e6-8050-c5b9f3a53ecd","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:610","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305206b6-3f34-11e6-8050-dd1b9e031f79","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305206b7-3f34-11e6-8050-2d1c94074671","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[873],"tindex":"305206b8-3f34-11e6-8050-092448ac86d2","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305206b9-3f34-11e6-8050-892a136338c7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305206ba-3f34-11e6-8050-d9c4b025976d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[874,875,876,877,878,879,880,881,882,883,884,885],"tindex":"305206bb-3f34-11e6-8050-1961609220e3","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30522dcc-3f34-11e6-8050-13121e80e4d6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1582","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior == h) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(prior);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"prior","left":"prior","h":"prior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30522dcd-3f34-11e6-8050-d1e1da7d3915","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl"},"failures":[132,133,751,752,753,754,755,127,128,756,757,758,759,760,134,135,761,762,763,764,765,136,137,766,767,768,769,770,140,145,146,149,151,154,155],"tindex":"30522dce-3f34-11e6-8050-c5b436e75237","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30522dcf-3f34-11e6-8050-67f1b5db94fc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl"},"failures":[886,887],"tindex":"30522dd0-3f34-11e6-8050-17d5bf219972","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl"},"failures":[888],"tindex":"30522dd1-3f34-11e6-8050-bb215256273b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == (-1)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[518],"tindex":"305254e2-3f34-11e6-8050-67b63ea53197","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:162","type":"CtVariableReadImpl"},"failures":[],"tindex":"305254e3-3f34-11e6-8050-bdb84f065de3","method":{"position":"org.apache.commons.collections4.map.Flat3Map:801","type":"CtMethodImpl","sourcecode":"void setRemoved(final boolean flag) {\n    if (flag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.Flat3Map.FlatMapEntry.this.boolean = flag;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"makeClone":"flag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305254e4-3f34-11e6-8050-39dc675d43fc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[889,890,891,892,124,893,894],"tindex":"305254e5-3f34-11e6-8050-191a24965dd6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"305254e6-3f34-11e6-8050-851691227a3a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtBinaryOperatorImpl"},"failures":[895,896],"tindex":"30527bf7-3f34-11e6-8050-ed0544cfa76a","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator2 != iterator2) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator2","currentIterator":"iterator2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[349,804,806,808,810,812,814,815,816],"tindex":"30527bf8-3f34-11e6-8050-b3dacf418c8c","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label instanceof java.util.Enumeration) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[897],"tindex":"30527bf9-3f34-11e6-8050-b90c31d76e22","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"30527bfa-3f34-11e6-8050-5bcd62a049e6","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[0,1,3,2,4,5,7,8,9,10,11,12,6,15,16,17,18,19,20,21,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,43,45,46,48,49,50,51,52,53,54,55,47,278,56,57,58,61,62,63,64,65,66,67,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"30527bfb-3f34-11e6-8050-e79f659afb2a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570053/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3052a30c-3f34-11e6-8050-398cf29959bc","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}