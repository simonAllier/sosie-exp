{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":728,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":627,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":765,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":438,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":420,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":274,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":545,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":706,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":705,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":736,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":46,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":583,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":587,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":682,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":718,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":552,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":715,"org.apache.commons.collections4.ListUtilsTest.testLazyList":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":110,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":713,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":287,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":208,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":249,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":78,"org.apache.commons.collections4.CollectionUtilsTest.select":31,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":201,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":7,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":764,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":632,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":648,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":567,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":207,"org.apache.commons.collections4.CollectionUtilsTest.intersection":36,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":746,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":9,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":737,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":96,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":433,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":343,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":209,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":392,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":729,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":423,"org.apache.commons.collections4.map.CompositeMapTest.testPut":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":100,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":378,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":284,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":371,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":339,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":744,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":467,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":142,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":637,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":645,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":120,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":759,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":39,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":73,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":440,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":212,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":413,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":51,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":196,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":762,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":247,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":441,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":135,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":102,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":307,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":136,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":322,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":116,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":498,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":745,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":483,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":769,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":165,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":674,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":570,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":519,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":640,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":393,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":625,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":90,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":219,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":375,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":253,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":617,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":540,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":725,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":304,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":662,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":727,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":382,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":444,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":549,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":608,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":210,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":337,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":158,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":396,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":346,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":306,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":559,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":133,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":146,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":6,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":480,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":590,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":368,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":464,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":538,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":352,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":475,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":297,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":660,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":508,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":578,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":688,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":163,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":621,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":582,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":604,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":594,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":153,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":548,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":442,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":494,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":457,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":130,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":155,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":633,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":213,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":496,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":403,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":430,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":722,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":707,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":246,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":181,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":636,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":629,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":511,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":380,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":489,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":666,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":615,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":697,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":686,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":2,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":50,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":731,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":434,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":692,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":92,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":663,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":369,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.list.TreeListTest.testBug35258":471,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":99,"org.apache.commons.collections4.ListUtilsTest.testSelect":42,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":294,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":292,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":41,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":191,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":192,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":272,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":573,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":459,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":720,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":681,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":566,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":115,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":703,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":700,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":684,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":119,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":314,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":455,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":605,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":367,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":345,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":589,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":502,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":563,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":300,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":616,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":646,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":588,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":680,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":77,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":238,"org.apache.commons.collections4.map.LRUMapTest.testLRU":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":694,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":689,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":331,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":665,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":534,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":523,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":233,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":280,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":293,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":730,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":721,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":381,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":94,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":273,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":235,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":579,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":405,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":711,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":439,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":592,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":740,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":268,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":580,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":535,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":447,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":453,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":69,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":750,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":38,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":743,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":26,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":402,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":171,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":699,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":525,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":218,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":445,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":4,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":156,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":336,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":497,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":129,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":466,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":217,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":585,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":473,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":248,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":283,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":183,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":572,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":397,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":752,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":409,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":215,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":364,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":521,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":227,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":726,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":610,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":389,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":296,"org.apache.commons.collections4.map.CompositeMapTest.testGet":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":656,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":468,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":531,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":504,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":516,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":23,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":460,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":767,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":557,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":693,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":620,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":652,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":132,"org.apache.commons.collections4.CollectionUtilsTest.union":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":141,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":328,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":127,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":543,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":401,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":25,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":741,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":3,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":422,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":187,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":747,"org.apache.commons.collections4.list.TreeListTest.testRemove":348,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":76,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":733,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":683,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":86,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":613,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":679,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":351,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":755,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":237,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":575,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":160,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":512,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":222,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":245,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":220,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":221,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":465,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":323,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":157,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":639,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":269,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":586,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":671,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":593,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":739,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":702,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":145,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":10,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":169,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":436,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":318,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":179,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":256,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":424,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":170,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":654,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":766,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":638,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":698,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":669,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":172,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":448,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":477,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":763,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":48,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":664,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":691,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":305,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":537,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":469,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":254,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":324,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":236,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":175,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":0,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":738,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":332,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":21,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":635,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":524,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":232,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":723,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":670,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":450,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":449,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":493,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":634,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":544,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":103,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":20,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":609,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":412,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":514,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":27,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":67,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":29,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":143,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":49,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":595,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":657,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":659,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":517,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":768,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":507,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":539,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":325,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":37,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":291,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":290,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":386,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":678,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":712,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":82,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":408,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":8,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":647,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":159,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":622,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":416,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":415,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":530,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":596,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":301,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":333,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":556,"org.apache.commons.collections4.set.CompositeSetTest.testContains":22,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":241,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":690,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":758,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":687,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":576,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":384,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":470,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":330,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":611,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":667,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":641,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":112,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":105,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":361,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":244,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":714,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":414,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":263,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":709,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":114,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":630,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":61,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":154,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":479,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":302,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":400,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":487,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":547,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":749,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":602,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":281,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":355,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":761,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":484,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":735,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":87,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":299,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":286,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":204,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":252,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":452,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":358,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":499,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":701,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":377,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":482,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":581,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":14,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":360,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":359,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":185,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":704,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":398,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":417,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":529,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":313},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"0f8cb263-3f19-11e6-aa68-3df834dbffce","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8d0084-3f19-11e6-aa68-1745c4cf3107","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if ((start == null) || (start != start)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"start","start":"start","predecessor":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[17],"tindex":"0f8d2795-3f19-11e6-aa68-3f42046eb1ca","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8d2796-3f19-11e6-aa68-07ea2a7d2be3","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl"},"failures":[18],"tindex":"0f8d4ea7-3f19-11e6-aa68-b3c934d20148","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl"},"failures":[19],"tindex":"0f8d4ea8-3f19-11e6-aa68-45080d55cff5","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 1) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl"},"failures":[],"tindex":"0f8d4ea9-3f19-11e6-aa68-b123b4eb4fea","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"0f8d4eaa-3f19-11e6-aa68-9f0d60ab73b0","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"0f8d75bb-3f19-11e6-aa68-c15b152a7612","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"key","position2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8d75bc-3f19-11e6-aa68-b943e3d8e297","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,52,53,54,55,56,57,253,58,59,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"tindex":"0f8d75bd-3f19-11e6-aa68-db838d1a5524","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8d9cce-3f19-11e6-aa68-c554210e6a80","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl"},"failures":[347],"tindex":"0f8d9ccf-3f19-11e6-aa68-ab474540dab9","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.lang.String) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl"},"failures":[348,349,350,351,352,353,354],"tindex":"0f8d9cd0-3f19-11e6-aa68-a5b2f13f0da3","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[355],"tindex":"0f8dc3e1-3f19-11e6-aa68-b3e1541be00a","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8dc3e2-3f19-11e6-aa68-8f6d0b173a3c","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8dc3e3-3f19-11e6-aa68-851a310d4f00","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtBinaryOperatorImpl"},"failures":[356],"tindex":"0f8dc3e4-3f19-11e6-aa68-1ff0d154ca01","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates || includeDuplicates) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"includeDuplicates","beforeFirst":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[357,358,359,360,361,362,363,364,365,366,367,368,369,369,370,371,371,372,373,374],"tindex":"0f8deaf5-3f19-11e6-aa68-0f1fc2ac4861","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        {\n                            if (predicates == null) {\n                                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n                            } \n                            @java.lang.SuppressWarnings(value = \"unchecked\")\n                            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n                            int int = 0;\n                            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                                preds[i] = predicate;\n                                if ((preds[i]) == null) {\n                                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                                } \n                                i++;\n                            }\n                            return preds;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8deaf6-3f19-11e6-aa68-ed35d194f9c5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8deaf7-3f19-11e6-aa68-795eb799b0a0","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Float) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[375],"tindex":"0f8deaf8-3f19-11e6-aa68-d1c714bb1df4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((remove.size()) != (remove.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"remove","b":"remove"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8deaf9-3f19-11e6-aa68-fd97c30e193f","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e120a-3f19-11e6-aa68-ed9b3ff66111","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl"},"failures":[18,376,377,378,379,380,381,382],"tindex":"0f8e120b-3f19-11e6-aa68-1f13453d814f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex < 1) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtBinaryOperatorImpl"},"failures":[383,384],"tindex":"0f8e120c-3f19-11e6-aa68-271aa17a35c5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == parentOfSubtree) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"node","left":"node","h":"parentOfSubtree"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl"},"failures":[385,386,387,388,79,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"0f8e120d-3f19-11e6-aa68-fdbee1191a04","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll.isEmpty()) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl"},"failures":[412,413,414,415,416,417,418,419],"tindex":"0f8e120e-3f19-11e6-aa68-33cae77dd022","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[420],"tindex":"0f8e391f-3f19-11e6-aa68-4f896680730b","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl"},"failures":[421,422],"tindex":"0f8e3920-3f19-11e6-aa68-55c4959dd25c","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            if (object instanceof java.lang.String) {\n                {\n                    if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e3921-3f19-11e6-aa68-3bad1cfeae37","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e3922-3f19-11e6-aa68-9db043fa616c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl"},"failures":[423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"0f8e3923-3f19-11e6-aa68-8feb1b10f1c6","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e3924-3f19-11e6-aa68-9f617890f13c","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[439],"tindex":"0f8e6035-3f19-11e6-aa68-4f10ea6406d1","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"elements"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e6036-3f19-11e6-aa68-83a0142ae8bc","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size >= size) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size","index":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[],"tindex":"0f8e6037-3f19-11e6-aa68-976745c0cce3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[],"tindex":"0f8e6038-3f19-11e6-aa68-e113c2430fab","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e6039-3f19-11e6-aa68-e992a152f2b1","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        {\n                            if (predicates == null) {\n                                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n                            } \n                            @java.lang.SuppressWarnings(value = \"unchecked\")\n                            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n                            int int = 0;\n                            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                                preds[i] = predicate;\n                                if ((preds[i]) == null) {\n                                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                                } \n                                i++;\n                            }\n                            return preds;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[356,440,441,442,443,444,445,446,447,448],"tindex":"0f8e603a-3f19-11e6-aa68-7f6e6d75b859","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e874b-3f19-11e6-aa68-13523fc20728","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8e874c-3f19-11e6-aa68-d5a65137bc9c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        {\n                            if (predicates == null) {\n                                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n                            } \n                            @java.lang.SuppressWarnings(value = \"unchecked\")\n                            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n                            int int = 0;\n                            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                                preds[i] = predicate;\n                                if ((preds[i]) == null) {\n                                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                                } \n                                i++;\n                            }\n                            return preds;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl"},"failures":[449],"tindex":"0f8e874d-3f19-11e6-aa68-1f00c91a7959","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"0f8eae5e-3f19-11e6-aa68-97a27a44b2e6","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[463],"tindex":"0f8eae5f-3f19-11e6-aa68-25a7a7b349ed","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl"},"failures":[],"tindex":"0f8eae60-3f19-11e6-aa68-eb6ac47a5c42","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:587","type":"CtMethodImpl","sourcecode":"protected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(fromIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(subList , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl"},"failures":[464],"tindex":"0f8eae61-3f19-11e6-aa68-219de2c134ef","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > count) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8eae62-3f19-11e6-aa68-61e93489ebb7","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            if (object instanceof java.lang.String) {\n                {\n                    if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                        return true;\n                    } \n                    return decorated().equals(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8eae63-3f19-11e6-aa68-4f17b1d23270","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8ed574-3f19-11e6-aa68-e9e3dccb32cc","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl"},"failures":[465],"tindex":"0f8ed575-3f19-11e6-aa68-e985e087b395","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8ed576-3f19-11e6-aa68-131475b42dcb","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[466,465,467],"tindex":"0f8ed577-3f19-11e6-aa68-bdb9122a2664","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8ed578-3f19-11e6-aa68-f5d43a472c00","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl"},"failures":[468],"tindex":"0f8efc89-3f19-11e6-aa68-81d6156ad23e","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl"},"failures":[348,469,470,471,472,473,474,475,476],"tindex":"0f8efc8a-3f19-11e6-aa68-2b19edfc48b8","method":{"position":"org.apache.commons.collections4.list.TreeList:517","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnRight(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe < (indexRelativeToMe / 2)) {\n        {\n            if ((getRightSubTree()) == null) {\n                setRight(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((+1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode<E> , org.apache.commons.collections4.list.TreeList.AVLNode.this), null);\n            } else {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) < 0) {\n                (int)--;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indexRelativeToMe","index":"indexRelativeToMe"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[357,358,363,374],"tindex":"0f8efc8b-3f19-11e6-aa68-897a5dc058f1","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8efc8c-3f19-11e6-aa68-39fbd85cea38","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8f239d-3f19-11e6-aa68-c51502603064","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl"},"failures":[477,478,479,480,481],"tindex":"0f8f239e-3f19-11e6-aa68-137bb7e13672","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl"},"failures":[482,483,484,485,486,487],"tindex":"0f8f239f-3f19-11e6-aa68-d9fdf4ed7a81","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],"tindex":"0f8f23a0-3f19-11e6-aa68-e1c8b05ea28b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8f4ab1-3f19-11e6-aa68-63b70228b345","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (byteObject == null) {\n                        return 0;\n                    } \n                    return byteObject.byteValue();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8f4ab2-3f19-11e6-aa68-ab3acb5b9e4f","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8f4ab3-3f19-11e6-aa68-f1289f1ac95b","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8f4ab4-3f19-11e6-aa68-4539c4f6b58b","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"0f8f4ab5-3f19-11e6-aa68-cd3c3b8e00d2","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (!(object == null ? object == null : obj1.equals(obj2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"object","obj1":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl"},"failures":[],"tindex":"0f8f4ab6-3f19-11e6-aa68-2fc100addd45","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return K[][index];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[537],"tindex":"0f8f4ab7-3f19-11e6-aa68-91b150a33444","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[538,539,540,437],"tindex":"0f8f71c8-3f19-11e6-aa68-11d7cb2d1b48","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8f71c9-3f19-11e6-aa68-2b976eed596a","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[541],"tindex":"0f8f71ca-3f19-11e6-aa68-69d038a1de41","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[542],"tindex":"0f8f71cb-3f19-11e6-aa68-c1cb9f6673cf","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl"},"failures":[543],"tindex":"0f8f98dc-3f19-11e6-aa68-c32733190bc1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"0f8f98dd-3f19-11e6-aa68-33f57d6ae030","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (!(key == null ? key == null : obj1.equals(obj2))) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"key","obj1":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtBinaryOperatorImpl"},"failures":[544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571],"tindex":"0f8f98de-3f19-11e6-aa68-41152a10e830","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (tree == start) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"tree","previous":"tree","left":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl"},"failures":[],"tindex":"0f8fbfef-3f19-11e6-aa68-0370bcd83836","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator2.hasNext()) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fbff0-3f19-11e6-aa68-273b7335d957","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fbff1-3f19-11e6-aa68-efc2c398a2e2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fbff2-3f19-11e6-aa68-6f3354261e5f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fbff3-3f19-11e6-aa68-4d853f3bb2ce","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (a instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.IndexedCollection:226","type":"CtVariableReadImpl"},"failures":[],"tindex":"0f8fbff4-3f19-11e6-aa68-2f784e18c2e6","method":{"position":"org.apache.commons.collections4.map.Flat3Map:801","type":"CtMethodImpl","sourcecode":"void setRemoved(final boolean flag) {\n    if (flag) {\n        {\n            org.apache.commons.collections4.map.Flat3Map.FlatMapEntry.this.boolean = flag;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"changed":"flag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fe705-3f19-11e6-aa68-fb21b3097bec","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fe706-3f19-11e6-aa68-f3cd0c7f4dd5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fe707-3f19-11e6-aa68-3f80037119b2","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fe708-3f19-11e6-aa68-b727345b93d0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f8fe709-3f19-11e6-aa68-b358e46d44a2","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f900e1a-3f19-11e6-aa68-270cbd3192bf","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:142","type":"CtFieldReadImpl"},"failures":[572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,449,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710],"tindex":"0f900e1b-3f19-11e6-aa68-d7a05bb4c163","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (endMarkerAllowed) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"full":"endMarkerAllowed"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f900e1c-3f19-11e6-aa68-bb0bf80ef3cf","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f900e1d-3f19-11e6-aa68-7db70fb107aa","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.List) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[118,149,187,195,260,293],"tindex":"0f900e1e-3f19-11e6-aa68-3df2158fa773","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f90352f-3f19-11e6-aa68-b9acad25f269","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (byteObject == null) {\n                        return 0;\n                    } \n                    return byteObject.byteValue();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtBinaryOperatorImpl"},"failures":[711],"tindex":"0f903530-3f19-11e6-aa68-173019176787","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f903531-3f19-11e6-aa68-47e089a9a628","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl"},"failures":[],"tindex":"0f903532-3f19-11e6-aa68-c90150d0b0e5","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl"},"failures":[712,713,87,90,88,89,714,477,478,715,716,91,92,717,93,94,95,96,97,98,99,100,101,718,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,719,720,721,722,723,480,481,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769],"tindex":"0f903533-3f19-11e6-aa68-fd82d0267981","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl"},"failures":[],"tindex":"0f905c44-3f19-11e6-aa68-5f742d70a7f4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f905c45-3f19-11e6-aa68-11fcd0e46a49","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0f905c46-3f19-11e6-aa68-8d94a6d52c5a","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325950872/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}