{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":326,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":255,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":587,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":655,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":498,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":297,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":314,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":634,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":277,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":544,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":35,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":552,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":523,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":705,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":522,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":695,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":758,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":282,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":520,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":611,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":252,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":345,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":784,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":672,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.CollectionUtilsTest.intersection":461,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":766,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":308,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":125,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":739,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":58,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":499,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":214,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":711,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":539,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":595,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":577,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":576,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":491,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":732,"org.apache.commons.collections4.map.CompositeMapTest.testPut":451,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":542,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":260,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":658,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":97,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":370,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":334,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":259,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":240,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":342,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":171,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":84,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":561,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":517,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":462,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":267,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":3,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":457,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":126,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":199,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":444,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":686,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":714,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":93,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":505,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":120,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":699,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":802,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":627,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":100,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":423,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":590,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":175,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":691,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":419,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":538,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":310,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":525,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":774,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":668,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":256,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.IteratorUtilsTest.testToList":5,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":473,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":693,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":489,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":22,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":683,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":253,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":137,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":782,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":265,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":484,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":151,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":773,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":301,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":124,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":248,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":417,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":373,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":28,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":787,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":678,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":54,"org.apache.commons.collections4.ListUtilsTest.testPartition":563,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":743,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":467,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":194,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":716,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":475,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":715,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":469,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":161,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":185,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":2,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":330,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":41,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":157,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":772,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":543,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":656,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":700,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":231,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":438,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":27,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":718,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":327,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":751,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":116,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":364,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":367,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":180,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":740,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":459,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":646,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":790,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":638,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":119,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":369,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":456,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":493,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":381,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":763,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":616,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":541,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":148,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":578,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":594,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":770,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":771,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":556,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":652,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":580,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":649,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":560,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":548,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":385,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":734,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":549,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":111,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":316,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":300,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":709,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":193,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":322,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":701,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":7,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":568,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":753,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":76,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":343,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":299,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":599,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":280,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":633,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":762,"org.apache.commons.collections4.map.LRUMapTest.testLRU":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":643,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":660,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":574,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":640,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":421,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":736,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":177,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":618,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":492,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":478,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":799,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":596,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":537,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":801,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":582,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":237,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":384,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":303,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":77,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":501,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":103,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":756,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":244,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":470,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":134,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":292,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":428,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":775,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":509,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":719,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":704,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":503,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":504,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":75,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":735,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":644,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":741,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":648,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":295,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":761,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":439,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":645,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":682,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":511,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":785,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":196,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":262,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":431,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":380,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":712,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":426,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":613,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":302,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":415,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":604,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":608,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":135,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":416,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.CompositeMapTest.testGet":450,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":795,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":486,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":614,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":745,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":562,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":726,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":673,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":243,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":80,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":425,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":195,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":382,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":50,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":358,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":642,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":349,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":318,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":510,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":230,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":781,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":789,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":502,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":372,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":657,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":507,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":690,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":635,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":286,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":696,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":629,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":632,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":615,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":150,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":408,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":730,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":729,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":298,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":203,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":724,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":708,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":689,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":717,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":296,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":624,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":755,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":227,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":697,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":567,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":392,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":393,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":414,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":765,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":679,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":621,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":351,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":130,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":647,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":622,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":519,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":454,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":641,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":397,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":29,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":723,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":722,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":721,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":60,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":500,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":183,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":332,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":152,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":289,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":570,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":661,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":702,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":329,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":184,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":331,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":232,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":355,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":321,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":8,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":110,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":429,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":707,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":458,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":272,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":273,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":455,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":274,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":733,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":251,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":352,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":359,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":19,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":90,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":96,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":792,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":727,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":6,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":206,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":725,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":631,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":521,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":117,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":793,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":409,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":344,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":291,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":388,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":476,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":14,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":0,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":687,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":559,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":759,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":694,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":786,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":524,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":307,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":261,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":685,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":706,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":12,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":710,"org.apache.commons.collections4.set.CompositeSetTest.testContains":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":66,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":628,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":443,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":639,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":465,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":744,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":366,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":681,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":788,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":783,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":619,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":402,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":612,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":760,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":600,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":680,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":597,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":547,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":698,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":776,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":669,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":527,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":780,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":399,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":584,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":797,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":401,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":400,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":588,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":328,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":518,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":482,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":153,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":270,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":271,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":769,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":208,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":350,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":440,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":112,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":749,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":777,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":778,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":779,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":209,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":497,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":742,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":114,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":257,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":263,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":4,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":692,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":650,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":747,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":540,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":665,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":37,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":573,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":422,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":211,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":127,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":764,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":798,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":653,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":800,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":105},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"38b37f6a-3f50-11e6-adc6-49111afcca13","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b442bb-3f50-11e6-adc6-5f8134232304","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6],"tindex":"38b469cc-3f50-11e6-adc6-918d9f9afbe7","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (estimatedSize == 0) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"estimatedSize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl"},"failures":[],"tindex":"38b490dd-3f50-11e6-adc6-1fceb77d2554","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b490de-3f50-11e6-adc6-f18459cca492","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b4b7ef-3f50-11e6-adc6-013431e3f2f2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[7],"tindex":"38b4df00-3f50-11e6-adc6-ffeec62acabd","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b50611-3f50-11e6-adc6-b3ca871cbb98","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"38b50612-3f50-11e6-adc6-a1c8e6cd7a2c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[2],"tindex":"38b52d23-3f50-11e6-adc6-3f051518a155","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                {\n                    return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[34,35,36,37],"tindex":"38b52d24-3f50-11e6-adc6-65c46b78c4cc","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b55435-3f50-11e6-adc6-e1674c35daad","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"38b57b46-3f50-11e6-adc6-cb0a0722b62e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[151,152,153,154,155,63,156,157,158,159,160,161,162,163,164,165,166,167,168,169,78,170,171,172,173,174,175,176,177,178],"tindex":"38b5a257-3f50-11e6-adc6-63081a3e2657","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl"},"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,38,39,40,41,42,43,44,202,45,203,46,204,205,47,48,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,83,84,85,86,87,88,89,231,90,232,91,233,234,92,93,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,113,114,260,115,116,117,261,262,118,263,119,264,265,120,121,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"38b5a258-3f50-11e6-adc6-83692f41ecae","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:535","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl"},"failures":[286],"tindex":"38b5c969-3f50-11e6-adc6-af01a305201a","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b5c96a-3f50-11e6-adc6-4d1a311635aa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (((node.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl"},"failures":[287],"tindex":"38b5f07b-3f50-11e6-adc6-0fab1c41bb99","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:126","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex == 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndex);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[288,289,290,291],"tindex":"38b5f07c-3f50-11e6-adc6-b19935670825","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl"},"failures":[292],"tindex":"38b5f07d-3f50-11e6-adc6-256a30eb4412","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl"},"failures":[293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354],"tindex":"38b6178e-3f50-11e6-adc6-5db9ebfd58de","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:204","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor(final int fromIndex) {\n    if (fromIndex == fromIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>(org.apache.commons.collections4.list.CursorableLinkedList.this , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"fromIndex","end":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,14,434],"tindex":"38b6178f-3f50-11e6-adc6-8189f303c347","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if ((list.size()) > (list.size())) {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[435],"tindex":"38b63ea0-3f50-11e6-adc6-fbc546e26c19","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                        return tmpSet;\n                    } \n                    return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b63ea1-3f50-11e6-adc6-7ffb8c3d49c4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[436,437,438,439],"tindex":"38b63ea2-3f50-11e6-adc6-cba7aa974f7d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (null == obj) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl"},"failures":[440,441,442,443,444,445,446,447,448,449],"tindex":"38b665b3-3f50-11e6-adc6-814f8d35474e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[355,356,357,358,359,360,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"tindex":"38b665b4-3f50-11e6-adc6-21c3e04dbce2","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b665b5-3f50-11e6-adc6-6355793e53c5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"hashCode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b68cc6-3f50-11e6-adc6-4758961ce038","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[464,465,466,467,468,469,470,471,296,299,300,301,305,306,307,308,309,310,311,312,313,316,317,318,321,472,473,474,475,476,477,330,333,334,335,336,343,348,349,350,351],"tindex":"38b68cc7-3f50-11e6-adc6-7b37a2f221ca","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:331","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeRemoved(node);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,440,495,496,497,498,499,500,436,501,502,503,504,441,505,506,507,442,508,509,510,511,512,513,514,515,516,443,517,518,444,519,520,445,446,447,448,449,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,438,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"38b6b3d8-3f50-11e6-adc6-d31395ea9aad","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl"},"failures":[563],"tindex":"38b6b3d9-3f50-11e6-adc6-75e505740605","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > size) {\n        {\n            if (size > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                    } \n                    if (size <= 0) {\n                        throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n                    } \n                    return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[564,565,566],"tindex":"38b6daea-3f50-11e6-adc6-99ed53752ab7","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl"},"failures":[],"tindex":"38b6daeb-3f50-11e6-adc6-f52a990240f2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583],"tindex":"38b6daec-3f50-11e6-adc6-b9ae116b9639","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if ((key instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl"},"failures":[8,9,10,11,584,12,13,14,15,16,17,585,19,20,586,21,22,23,587,588,589,590,591,24,25,26,27,28,30,31,32,33],"tindex":"38b701fd-3f50-11e6-adc6-37ea2e39e6ec","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[565],"tindex":"38b701fe-3f50-11e6-adc6-c7b70805bcec","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl"},"failures":[481,478,479,480,483,484,485,486,487,488,489,490,491,492,493,494,440,495,496,497,498,499,500,436,501,502,503,504,441,505,506,507,442,508,509,510,511,512,513,514,515,516,443,517,518,444,519,520,445,446,447,448,449,521,522,526,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,438,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"38b7290f-3f50-11e6-adc6-0baaf94ef05d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[592],"tindex":"38b72910-3f50-11e6-adc6-ab584866cbf0","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if ((list == null) || (list == null)) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b75021-3f50-11e6-adc6-87293ec22db8","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b75022-3f50-11e6-adc6-c72dff294b13","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cur":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[593],"tindex":"38b77733-3f50-11e6-adc6-83f43cf495ac","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b77734-3f50-11e6-adc6-8385c818f42e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (insertBeforeNode == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"insertBeforeNode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl"},"failures":[594],"tindex":"38b77735-3f50-11e6-adc6-976f796b6f6b","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start <= start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"start","newCapacity":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"38b79e46-3f50-11e6-adc6-f17a445fc12a","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b79e47-3f50-11e6-adc6-07fca1bfe2e6","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[595,596,597,598,599,600,601,602,603,604,605],"tindex":"38b79e48-3f50-11e6-adc6-d5994570bfc5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b7c559-3f50-11e6-adc6-25423b9ccd1b","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[606,329],"tindex":"38b7ec6a-3f50-11e6-adc6-13b39cf88d2c","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[607,473,474,476,477,608,337,338,325,326,609,327,328,610,329,611,330,331,332,333,334,335,336,612,340,342,343,344,345,346,347,348,349,350,351,613,614,352,615,353,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,287,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656],"tindex":"38b7ec6b-3f50-11e6-adc6-455b2ca24e61","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8137c-3f50-11e6-adc6-ef4138cc4c8b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index == 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8137d-3f50-11e6-adc6-6136e0cfbbc5","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[657],"tindex":"38b8137e-3f50-11e6-adc6-15dade29443e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8137f-3f50-11e6-adc6-3f0c0355191d","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                {\n                    return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl"},"failures":[658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"38b83a90-3f50-11e6-adc6-8710c12eaef8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b83a91-3f50-11e6-adc6-893c1a443371","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[674],"tindex":"38b83a92-3f50-11e6-adc6-d575d88ebf1c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl"},"failures":[675],"tindex":"38b861a3-3f50-11e6-adc6-9b2e4e70de3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[676,677,678,679,37],"tindex":"38b861a4-3f50-11e6-adc6-9bfac6357b90","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key1 == null) || (key1 == null)) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"key1","position2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtBinaryOperatorImpl"},"failures":[680,681],"tindex":"38b861a5-3f50-11e6-adc6-4ffc71ddefcf","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (tree != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"tree"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[564],"tindex":"38b8afc6-3f50-11e6-adc6-35f79eb29fe1","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[682,683,684,685,686,687,688,689,690,691],"tindex":"38b8afc7-3f50-11e6-adc6-6ddea3db9de0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8afc8-3f50-11e6-adc6-354e8775d7c8","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            if (n <= n) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.util.EmptyStackException();\n            } else {\n                {\n                    final int int = ((size()) - n) - 1;\n                    if (m < 0) {\n                        throw new java.util.EmptyStackException();\n                    } else {\n                        return get(m);\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"n","newCapacity":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl"},"failures":[],"tindex":"38b8d6d9-3f50-11e6-adc6-03a21bb8e330","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtInvocationImpl"},"failures":[],"tindex":"38b8d6da-3f50-11e6-adc6-e562bcbe0c39","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[692],"tindex":"38b8d6db-3f50-11e6-adc6-65b30d87b64e","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8fdec-3f50-11e6-adc6-8161c00f45c9","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8fded-3f50-11e6-adc6-b9cea65f9d72","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b8fdee-3f50-11e6-adc6-31ca4819dadb","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                        return tmpSet;\n                    } \n                    return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b924ff-3f50-11e6-adc6-09b6e4c67b2e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715],"tindex":"38b92500-3f50-11e6-adc6-45cebea0c258","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:86","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> nonUniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b92501-3f50-11e6-adc6-f7e4e48c3fc3","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtBinaryOperatorImpl"},"failures":[716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766],"tindex":"38b94c12-3f50-11e6-adc6-f361ee095faf","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b94c13-3f50-11e6-adc6-f7e8b8d26884","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b97324-3f50-11e6-adc6-2d301d6d92ce","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits > 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b97325-3f50-11e6-adc6-6b2541ec91f0","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl"},"failures":[767,768],"tindex":"38b99a36-3f50-11e6-adc6-618ed54c4957","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b99a37-3f50-11e6-adc6-23e3254261c3","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > size) {\n        {\n            if (size > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                    } \n                    if (size <= 0) {\n                        throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n                    } \n                    return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size","index":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:424","type":"CtInvocationImpl"},"failures":[],"tindex":"38b99a38-3f50-11e6-adc6-8153dcb1519e","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[479,488,491,492,493,494,440,496,497,499,500,436,502,503,441,507,442,511,512,513,514,515,516,443,444,445,446,447,448,449,524,532,533,534,536,537,539,540,438,542,543,548,549,550,551,558,560,561,562],"tindex":"38b9c149-3f50-11e6-adc6-9bec1f9bb2d4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.getParent(dataElement)) == null) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n                    if (node == null) {\n                        rval = null;\n                    } else if ((node.getRight(dataElement)) != null) {\n                        rval = leastNode(node.getRight(dataElement), dataElement);\n                    } else {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                        while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                            child = parent;\n                            parent = parent.getParent(dataElement);\n                        }\n                        rval = parent;\n                    }\n                    return rval;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38b9c14a-3f50-11e6-adc6-bf9608c19018","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.getParent(dataElement)) == null) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n                    if (node == null) {\n                        rval = null;\n                    } else if ((node.getRight(dataElement)) != null) {\n                        rval = leastNode(node.getRight(dataElement), dataElement);\n                    } else {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                        while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                            child = parent;\n                            parent = parent.getParent(dataElement);\n                        }\n                        rval = parent;\n                    }\n                    return rval;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[769,155,53,54,56,57,58,60,61,62,63,770,771,157,772,158,161],"tindex":"38b9e85b-3f50-11e6-adc6-2b3926eefc47","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:219","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 == null) {\n        {\n            return value1 == value2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtBinaryOperatorImpl"},"failures":[773,774],"tindex":"38b9e85c-3f50-11e6-adc6-ab3308407447","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"intersects":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38ba0f6d-3f50-11e6-adc6-45c4a4ff68d6","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38ba0f6e-3f50-11e6-adc6-159ba357e2fe","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Map<?, ?>) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[775],"tindex":"38ba0f6f-3f50-11e6-adc6-278c0214e1be","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl"},"failures":[776],"tindex":"38ba3680-3f50-11e6-adc6-a73b177c8e61","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl"},"failures":[777,778,779,780,781,782,783,784,785,786,787,788],"tindex":"38ba3681-3f50-11e6-adc6-0f2263a503f9","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38ba3682-3f50-11e6-adc6-0d8d4a932f54","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[569,572,573],"tindex":"38ba5d93-3f50-11e6-adc6-6b911f17ec20","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl"},"failures":[789,790,791],"tindex":"38ba5d94-3f50-11e6-adc6-93d8c1654e10","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38ba5d95-3f50-11e6-adc6-d533157cf34b","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl"},"failures":[792,793,794,795,796,797,798,799,800,801],"tindex":"38ba5d96-3f50-11e6-adc6-0f5a3e113e91","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"label"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38ba84a7-3f50-11e6-adc6-1156daefe863","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtInvocationImpl"},"failures":[],"tindex":"38ba84a8-3f50-11e6-adc6-c5b0b44ce206","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if ((list == null) || (list == null)) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl"},"failures":[],"tindex":"38ba84a9-3f50-11e6-adc6-efa8aa159795","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(hashIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38baabba-3f50-11e6-adc6-9dd39876773f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38baabbb-3f50-11e6-adc6-1d3cff59dcfb","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            if (n <= n) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.util.EmptyStackException();\n            } else {\n                {\n                    final int int = ((size()) - n) - 1;\n                    if (m < 0) {\n                        throw new java.util.EmptyStackException();\n                    } else {\n                        return get(m);\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[802,803],"tindex":"38baabbc-3f50-11e6-adc6-7bf690bad3bb","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"38bad2cd-3f50-11e6-adc6-5908c7a97da5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347148031/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}