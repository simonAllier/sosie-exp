{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":553,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":404,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":441,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":442,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":587,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":237,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":658,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":45,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":655,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":344,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":626,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":353,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":359,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":703,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":320,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":522,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":32,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":787,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":500,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":9,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":300,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":584,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":410,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":426,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":697,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":287,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":657,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":759,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":753,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":175,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":211,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":562,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":285,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":516,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":752,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":784,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":520,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":65,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":415,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":605,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":200,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":83,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":774,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":166,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":190,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":715,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":540,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":705,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":181,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":489,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":484,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":569,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":792,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":184,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":683,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":777,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":230,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":635,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":687,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":456,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":482,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":483,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":625,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":87,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":12,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":661,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":462,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":370,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":504,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":604,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":709,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":633,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":533,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":59,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":396,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":668,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":552,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":608,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":267,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":266,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":609,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":656,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":382,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":698,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":232,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":547,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":674,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":362,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":677,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":794,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":692,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":702,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":461,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":743,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":208,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":593,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":354,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":724,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":398,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":767,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":730,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":384,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":375,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":747,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":366,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":19,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":746,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":757,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":612,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":762,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":617,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":277,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":411,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":220,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":345,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":607,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":755,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":718,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":518,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":666,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":304,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":391,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":324,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":634,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":66,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":241,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":240,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":119,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":128,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":556,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":764,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":457,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":495,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":40,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":301,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":98,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.list.TreeListTest.testBug35258":740,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":519,"org.apache.commons.collections4.ListUtilsTest.testSelect":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":450,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":712,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":219,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":341,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":689,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":539,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":786,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":778,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":636,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":498,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":443,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":361,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":158,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":708,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":424,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":669,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":289,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":33,"org.apache.commons.collections4.map.LRUMapTest.testLRU":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":327,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":37,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":278,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":303,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":664,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":776,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":749,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":227,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":555,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":629,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":142,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":543,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":14,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":514,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":684,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":775,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":355,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":261,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":7,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":101,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":364,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":447,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":565,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":133,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":256,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":405,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":386,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":568,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":620,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":621,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":136,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":157,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":134,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":616,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":745,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":357,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":772,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":349,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":62,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":115,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":575,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":276,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":726,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":706,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":643,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":781,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":606,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":433,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":729,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":154,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":610,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":773,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":549,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":541,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":639,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":788,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":779,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":202,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":735,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":725,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":464,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":728,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":548,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":127,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":292,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":173,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":116,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":574,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":571,"org.apache.commons.collections4.list.TreeListTest.testRemove":737,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":130,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":162,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":558,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":758,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":321,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":163,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":673,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":760,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":185,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":744,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":377,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":436,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":578,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":122,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":624,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":269,"org.apache.commons.collections4.map.LRUMapTest.testClone":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":351,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":769,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":790,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":209,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":473,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":358,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":700,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":432,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":179,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":416,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":307,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":583,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":302,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":427,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":739,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":0,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":213,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":254,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":741,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":563,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":214,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":591,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":413,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":48,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":662,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":770,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":113,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":546,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":409,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":245,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":238,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":523,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":383,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":766,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":642,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":727,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":679,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":253,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":297,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":298,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":435,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":652,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":497,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":598,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":686,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":194,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":660,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":499,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":39,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":152,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":751,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":648,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":647,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":734,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":750,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":466,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":646,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":618,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":132,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":260,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":771,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":328,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":325,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":380,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":756,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":611,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":736,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":272,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":41,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":532,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":525,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":690,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":691,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":675,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":123,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":505,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":102,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":659,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":713,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":347,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":765,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":407,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":592,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":783,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":475,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":599,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":139,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":295,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":206,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":431,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":488,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":628,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":454,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":120,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":259,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":507,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":588,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":501,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":192,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":288,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":106,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":595,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":722,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":517,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":420,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":429,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":793,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":641,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":263,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":720,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":342,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":723,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":144,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":632,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":733,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":791},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"booleanObject == null"},"failures":[],"tindex":"5f1d1593-3e61-11e6-b613-c96d200150bb","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"5f1dfff4-3e61-11e6-b613-873ed9aca38f","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[0,1,2,3],"tindex":"5f1dfff5-3e61-11e6-b613-d3bd696b8066","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl","sourcecode":"(entry.after) != (header)"},"failures":[],"tindex":"5f1e2706-3e61-11e6-b613-57ba1b0fd8e4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"5f1e2707-3e61-11e6-b613-fde65eb0450b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl","sourcecode":"(other.size()) != 1"},"failures":[98,99,100,101],"tindex":"5f1f3878-3e61-11e6-b613-c74e03c86fb8","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 1"},"failures":[],"tindex":"5f1f5f89-3e61-11e6-b613-97aaf4986f4b","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"5f1f5f8a-3e61-11e6-b613-2bf3fc7f85d5","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[102,103,104,105],"tindex":"5f1f5f8b-3e61-11e6-b613-4b0337fba022","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[106],"tindex":"5f1f869c-3e61-11e6-b613-336eaa4a07c1","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[107],"tindex":"5f1f869d-3e61-11e6-b613-0b1905518cac","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[108],"tindex":"5f1f869e-3e61-11e6-b613-3d84866b68f9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"5f1fadaf-3e61-11e6-b613-f3d2f2e33ddf","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtBinaryOperatorImpl","sourcecode":"h == (root)"},"failures":[],"tindex":"5f1fadb0-3e61-11e6-b613-d7657c75daa6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h","h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl","sourcecode":"listIterator == null"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"5f1fd4c1-3e61-11e6-b613-cb6a6da55f45","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"5f1ffbd2-3e61-11e6-b613-b598b6612a98","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"5f2022e3-3e61-11e6-b613-9be6f435f9df","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (endMarkerAllowed == true) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"endMarkerAllowed"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[441,442,443],"tindex":"5f2049f4-3e61-11e6-b613-ddd1a91cef3d","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[444],"tindex":"5f221eb5-3e61-11e6-b613-d3e88ce9f284","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl","sourcecode":"!(excess.isEmpty())"},"failures":[],"tindex":"5f2245c6-3e61-11e6-b613-7f4db2fc5770","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"5f2245c7-3e61-11e6-b613-fb10a771f104","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,173,174,461,175,176,177,462,463,178,464,179,465,466,180,181,467,468,469,182,183,184,185,186,187,470,471,472,473,474,475,476,188,477,478,479,480,481],"tindex":"5f226cd8-3e61-11e6-b613-1960c0c7701a","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"5f226cd9-3e61-11e6-b613-d93aef7f87d6","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(estimatedSize)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"estimatedSize"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"5f2293ea-3e61-11e6-b613-af9fa03aae06","method":{"position":"org.apache.commons.collections4.IteratorUtils:474","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<K, V> mapIterator) {\n    if (mapIterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"mapIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[482,483,484],"tindex":"5f2293eb-3e61-11e6-b613-1f1add55387d","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"5f22bafc-3e61-11e6-b613-cd068315397a","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    map.size();\n    if ((array == null) || ((array.int) == 0)) {\n        return map;\n    } \n    final java.lang.Object java.lang.Object = array[0];\n    if (obj instanceof java.util.Map.Entry) {\n        for (final java.lang.Object java.lang.Object : array) {\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n            map.put(entry.getKey(), entry.getValue());\n        }\n    } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        for (final java.lang.Object java.lang.Object : array) {\n            final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n            map.put(keyval.getKey(), keyval.getValue());\n        }\n    } else if (obj instanceof java.lang.Object[]) {\n        for (int int = 0 ; i < (array.int) ; i++) {\n            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n            if ((sub == null) || ((sub.int) < 2)) {\n                throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n            } \n            map.put(((K)(sub[0])), ((V)(sub[1])));\n        }\n    } else {\n        for (int int = 0 ; i < ((array.int) - 1) ; ) {\n            map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n        }\n    }\n    return map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[485,486,487,488,489,490,491,492,493,494],"tindex":"5f22e20d-3e61-11e6-b613-65aa4ac67946","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[495],"tindex":"5f22e20e-3e61-11e6-b613-4d45d785c2b5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[496],"tindex":"5f22e20f-3e61-11e6-b613-f56ae938f2aa","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"5f230820-3e61-11e6-b613-f5fe6fd15c8f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[497],"tindex":"5f230821-3e61-11e6-b613-d7227e9d2c72","method":{"position":"org.apache.commons.collections4.IteratorUtils:364","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array) {\n    if (array instanceof java.lang.String) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[498],"tindex":"5f230822-3e61-11e6-b613-b1c234a8d4d5","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtBinaryOperatorImpl","sourcecode":"(deletedNode.getParent(dataElement)) == null"},"failures":[499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,485,569,570,571,486,572,573,574,575,576,577,578,579,580,487,581,582,488,489,583,584,490,491,492,493,494],"tindex":"5f232f33-3e61-11e6-b613-7b80a18efa76","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[585],"tindex":"5f232f34-3e61-11e6-b613-e1c0666700e8","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (falseTransformer == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"falseTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[586],"tindex":"5f235645-3e61-11e6-b613-e7cdab778517","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"5f235646-3e61-11e6-b613-4f4ed63b2001","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"5f235647-3e61-11e6-b613-116fe197b308","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5f237d58-3e61-11e6-b613-3f6245c9cd2e","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        return map.get(key);\n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[587],"tindex":"5f237d59-3e61-11e6-b613-5f9c3eef1c55","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"5f237d5a-3e61-11e6-b613-7b61ba000221","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = decorated().size();\n                    if (index >= size) {\n                        decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n                    } \n                    return decorated().set(index, element);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[588,589,590,591],"tindex":"5f23a46b-3e61-11e6-b613-17aeea258d58","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index % 2) == 0) {\n                {\n                    if (index < 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return decorated().remove(index);\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[499,500,503,501,502,504,505,506,507,508,509,510,511,533,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,534,535,536,537,538,539,540,541,544,542,543,545,592,546,547,548,549,550,551,552,553,554,555,556,557,488,558,559,560,561,562,563,564,565,566,567,568,485,569,570,571,486,572,573,574,575,576,577,578,579,580,487,581,582,489,583,584,490,491,492,493,494],"tindex":"5f23a46c-3e61-11e6-b613-b1b22929d4fc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (null == o) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[593,594,595,596],"tindex":"5f23cb7d-3e61-11e6-b613-c5922185bbc7","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[],"tindex":"5f23cb7e-3e61-11e6-b613-5bbbe06683ba","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex > bitIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"5f23cb7f-3e61-11e6-b613-bd1824932e4a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[597,248,259,598,599],"tindex":"5f23f290-3e61-11e6-b613-43af7a59acaf","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"5f23f291-3e61-11e6-b613-0df7accbdc13","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"5f2419a2-3e61-11e6-b613-638202ac938b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[600,601,602],"tindex":"5f2419a3-3e61-11e6-b613-4d58d6740b54","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (a instanceof java.util.Set<?>) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"5f2419a4-3e61-11e6-b613-a734378f34bf","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n    } \n    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:424","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"5f2440b5-3e61-11e6-b613-092679f6be21","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[603],"tindex":"5f2440b6-3e61-11e6-b613-b984d506ccc0","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"5f2440b7-3e61-11e6-b613-e56a7137059b","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[],"tindex":"5f2467c8-3e61-11e6-b613-77f857d64bca","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits != 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[604],"tindex":"5f2467c9-3e61-11e6-b613-4b4e3a372df7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.isEmpty()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[],"tindex":"5f2467ca-3e61-11e6-b613-21f06fc671f9","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:382","type":"CtMethodImpl","sourcecode":"private boolean anyValueSet(final java.util.BitSet set) {\n    if (null != set) {\n        {\n            for (int int = 0 ; i < (set.size()) ; i++) {\n                if (set.get(i)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"5f248edb-3e61-11e6-b613-55123b9c205d","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (bit == 0) {\n        {\n            if ((bit < bit) || (index > bit)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"bit","endIndex":"bit","index":"bit"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[151,152,605,153,154,155,156,157,158,159,160,606,607,608,173,174,461,175,176,177,462,178,179,180,181,609,610,189,190,611,191,192,193,612,194,195,196,197,613,614,615,207,208,616,209,210,211,212,213,214,215,216,617,618,619,231,232,620,233,234,235,621,236,237,238,239,622,623,624,252,253,625,254,255,256,257,258,259,260,261,626,627,628,271,272,629,273,274,275,630,276,277,278,279,631,632,633,287,288,289,290,291,292,634,635,293],"tindex":"5f248edc-3e61-11e6-b613-69e785360d88","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[636],"tindex":"5f24b5ed-3e61-11e6-b613-89d32f5bd107","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[637,638],"tindex":"5f24b5ee-3e61-11e6-b613-2f1f06478929","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(lengthInBits)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[639],"tindex":"5f24dcff-3e61-11e6-b613-e3301ca1cc46","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[640],"tindex":"5f24dd00-3e61-11e6-b613-4b5a8c46e1d4","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if ((list.size()) > (list.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"5f24dd01-3e61-11e6-b613-fbc33a686748","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"5f24dd02-3e61-11e6-b613-5d262e332161","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[445,465],"tindex":"5f250413-3e61-11e6-b613-e13b32a9ccb1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[5,13,41,49,68,76,83,91],"tindex":"5f250414-3e61-11e6-b613-b3b4bf9f96f0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"5f250415-3e61-11e6-b613-b12081a20d8c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k instanceof java.lang.Double) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[641],"tindex":"5f252b26-3e61-11e6-b613-8d1b0ddb3eb2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((map.size()) > 0) {\n                {\n                    if (map == null) {\n                        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n                    } \n                    if ((map.size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n                    } \n                    return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtInvocationImpl","sourcecode":"isAtFullCapacity()"},"failures":[],"tindex":"5f252b27-3e61-11e6-b613-7d86a1d61f7c","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n    if ((queue.size()) > 0) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final E[] E[] = ((E[])(queue.toArray()));\n        queue.clear();\n        for (final E E : values) {\n            decorated.decorated().add(transformer.transform(value));\n        }\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[642,643,644,645,102,646,647,648,104,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,105,668,669,670],"tindex":"5f2663a8-3e61-11e6-b613-6ba7e40a1865","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"5f268ab9-3e61-11e6-b613-17734e4def36","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtBinaryOperatorImpl","sourcecode":"(start.predecessor.right) == start"},"failures":[],"tindex":"5f268aba-3e61-11e6-b613-d3fc61f4750d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"node","predecessor":"node","right":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5f26b1cb-3e61-11e6-b613-61530bce5ef1","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        return map.get(key);\n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"5f26b1cc-3e61-11e6-b613-7dbf470dd3bf","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"5f26b1cd-3e61-11e6-b613-75e66e373171","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"5f26d8de-3e61-11e6-b613-73691b74fea0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"5f26d8df-3e61-11e6-b613-fb212e81ddc8","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (bit == 0) {\n        {\n            if ((bit < bit) || (index > bit)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bit"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"5f26d8e0-3e61-11e6-b613-b50eef2f97e3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((map.size()) > 0) {\n                {\n                    if (map == null) {\n                        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n                    } \n                    if ((map.size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n                    } \n                    return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:116","type":"CtBinaryOperatorImpl","sourcecode":"nonNullComparator == null"},"failures":[],"tindex":"5f26fff1-3e61-11e6-b613-2be9d5812a48","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nonNullComparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[671,672,673,674,675,676,677],"tindex":"5f26fff2-3e61-11e6-b613-eb41e3cc52bc","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[678,679,680,681],"tindex":"5f272703-3e61-11e6-b613-8b61c524bb49","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null != object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[682],"tindex":"5f272704-3e61-11e6-b613-d7588bfee86c","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((inputCollection instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[683],"tindex":"5f272705-3e61-11e6-b613-d32002cc1573","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[],"tindex":"5f28ada6-3e61-11e6-b613-a5e6139a24f5","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = decorated().size();\n                    if (index >= size) {\n                        decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n                    } \n                    return decorated().set(index, element);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","bound":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"5f28ada7-3e61-11e6-b613-a1640c9351f3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n    final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n    while (it.hasNext()) {\n        result.add(it.next());\n    }\n    return result;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[684,684,685,686,686,687,688,689,690,691,692],"tindex":"5f28d4b8-3e61-11e6-b613-2757ea0dc411","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[445,693,694,189,190,191,192,193,194,195,196,197,695,696,204,697,698,699,231,232,233,234,235,236,237,238,239,700,701,246,702,703,704,252,253,254,255,256,258,259,260,261,705,706,268,269,270,707,271,272,273,274,275,276,277,278,279,708,709,286,710,711,712,287,288,289,290,291,292,634,635,293,713,714,300,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735],"tindex":"5f28d4b9-3e61-11e6-b613-f1185555c996","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"5f28fbca-3e61-11e6-b613-87b806fdae05","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[],"tindex":"5f28fbcb-3e61-11e6-b613-8d9dae612953","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"5f28fbcc-3e61-11e6-b613-193db57a7b9f","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[],"tindex":"5f2922dd-3e61-11e6-b613-499f41105b75","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index % 2) == 0) {\n                {\n                    if (index < 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return decorated().remove(index);\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl","sourcecode":"lineageIndex == (-1)"},"failures":[736,737,738,739,740,741,742,743,744,745,746,747],"tindex":"5f2922de-3e61-11e6-b613-2f6c6121703b","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == (-1)) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)"},"failures":[499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,485,569,570,571,486,572,573,574,575,576,577,578,579,580,487,581,582,488,489,583,584,490,491,492,493,494],"tindex":"5f2949ef-3e61-11e6-b613-8395f701c699","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"5f2949f0-3e61-11e6-b613-ab70d49665f1","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792],"tindex":"5f297101-3e61-11e6-b613-bf62cef6830d","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[],"tindex":"5f297102-3e61-11e6-b613-49cc16247c07","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5f299813-3e61-11e6-b613-673393e07cf4","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[793],"tindex":"5f299814-3e61-11e6-b613-ebb7036126b5","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtVariableReadImpl","sourcecode":"result"},"failures":[794],"tindex":"5f299815-3e61-11e6-b613-4d3ab0c888b5","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (doLoop) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"doLoop"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"5f29bf26-3e61-11e6-b613-135522275bc9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index % 2) == 0) {\n                {\n                    if (index < 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return decorated().remove(index);\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244540301/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}