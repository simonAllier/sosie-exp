{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":653,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":115,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":257,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":580,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":349,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":22,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":709,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":126,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":226,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":170,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":206,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":471,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":587,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":228,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":661,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":540,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":213,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":500,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":275,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":515,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":675,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":276,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":565,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":614,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":667,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":668,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":231,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":624,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":138,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":185,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":593,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":361,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":632,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":322,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":604,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":602,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":258,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":529,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":432,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":611,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":688,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":351,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":537,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":11,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":254,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":369,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":694,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":150,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":678,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":677,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":597,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.CollectionUtilsTest.intersection":502,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":584,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":388,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":238,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":671,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":160,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":287,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":395,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":323,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":662,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":618,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":171,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":250,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":572,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":386,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":511,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":248,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":347,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":212,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":480,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":554,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":577,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":181,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":654,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":141,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":652,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":438,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.map.CompositeMapTest.testPut":490,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":622,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":416,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":447,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":61,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":383,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":284,"org.apache.commons.collections4.map.CompositeMapTest.testGet":489,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":725,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":167,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":148,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":18,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":669,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":78,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":225,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":319,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":427,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":315,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":512,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":445,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":312,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":508,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":363,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":134,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":404,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":544,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":707,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":75,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":173,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.CollectionUtilsTest.union":501,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":100,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":683,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":286,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":164,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":518,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":666,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":121,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":293,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":672,"org.apache.commons.collections4.list.TreeListTest.testRemove":35,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":444,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":686,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":559,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":240,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":62,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":658,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":14,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":136,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":309,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":569,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":706,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":297,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":103,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":638,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":740,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":670,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":296,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":693,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":342,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":599,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":247,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":271,"org.apache.commons.collections4.map.LRUMapTest.testClone":360,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":441,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":405,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":558,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":168,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":475,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":570,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":484,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":567,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":718,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":208,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":219,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":482,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":24,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":25,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":617,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":283,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":146,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":235,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":664,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":521,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":249,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":269,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":579,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":73,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":89,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":479,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":47,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":161,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":549,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":633,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":659,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":717,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":291,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":346,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":703,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":690,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":263,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":137,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":418,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":514,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":67,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":252,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":379,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":129,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":377,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":132,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":488,"org.apache.commons.collections4.map.LRUMapTest.testReset":562,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":591,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":739,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":223,"org.apache.commons.collections4.CollectionUtilsTest.exists":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":56,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":253,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":149,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":738,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":492,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":712,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":184,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":127,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":2,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":649,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":29,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":119,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":527,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":596,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":487,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":563,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":317,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":325,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":366,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":734,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":571,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":421,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":568,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":708,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":326,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":40,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":517,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":701,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":592,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":481,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":506,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":462,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":526,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":320,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":581,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":7,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":274,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":516,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":648,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":232,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":722,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":723,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":695,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":357,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":356,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":729,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":355,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":724,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":721,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":523,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":324,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":525,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":205,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":131,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":533,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":588,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":543,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":279,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":539,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":531,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":497,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":108,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":365,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":410,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":494,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":411,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":305,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":486,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":80,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":385,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":735,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":551,"org.apache.commons.collections4.map.HashedMapTest.testClone":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":646,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":623,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":272,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":513,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":423,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":574,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":60,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":552,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":402,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":53,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":106,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":560,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":498,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":128,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":450,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":343,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":601,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":403,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":730,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":732,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":612,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":353,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":352,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":178,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":354,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":495,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":39,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":656,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":417,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":398,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":88,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":251,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":265,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":605,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":5,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":220,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":519,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":278,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":143,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":282,"org.apache.commons.collections4.set.CompositeSetTest.testContains":507,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":545,"org.apache.commons.collections4.list.TreeListTest.testBug35258":37,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":372,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":621,"org.apache.commons.collections4.map.LinkedMapTest.testClone":555,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":720,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":230,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":594,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":79,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":292,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":384,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":468,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":647,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":715,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":0,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":637,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":474,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":705,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":564,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":615,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":634,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":627,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":454,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":135,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":270,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":713,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":607,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":696,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":422,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":453,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":628,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":364,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":163,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":598,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":9,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":172,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":699,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":714,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":631,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":151,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":64,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":684,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":726,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":673,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":182,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":589,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":166,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":575,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":362,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":470,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":281,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":120,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":130,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":407,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":408,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":318,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":156,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":155,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":273,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":26,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":31,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":674,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":105,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":124,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":303,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":685,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":162,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":392,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":459,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":393,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":660,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":401,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":111,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":371,"org.apache.commons.collections4.map.LRUMapTest.testLRU":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":609,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":603,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":400,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":390,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":210,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":429,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":437,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":578,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":419,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":711,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":118,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":415,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":619,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":376,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":655,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":424,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":413,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":375,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":645,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":458,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":483,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":561,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":176,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":499,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":626,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":289,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":736,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":737,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":557,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":528,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":266,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":697,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":97,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":262,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":443,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":455,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":117,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":370,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":728},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[0],"tindex":"2ae85514-3e7a-11e6-8519-f562dfb3e37b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 == null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"2ae93f75-3e7a-11e6-8519-f184e7ba41b3","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[31],"tindex":"2ae96686-3e7a-11e6-8519-9f16db4f43b1","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[],"tindex":"2ae98d97-3e7a-11e6-8519-677925a69bce","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"2ae98d98-3e7a-11e6-8519-3f80d887dea9","method":{"position":"org.apache.commons.collections4.list.TreeList:699","type":"CtMethodImpl","sourcecode":"private int getOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return 0;\n            } \n            return node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[47],"tindex":"2aea9f09-3e7a-11e6-8519-7f0e0b760a0a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (null != value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[48,49],"tindex":"2aea9f0a-3e7a-11e6-8519-8b5ad90bb983","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[50],"tindex":"2aeac61b-3e7a-11e6-8519-911096a2fce9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"2aeac61c-3e7a-11e6-8519-af113cfa10dc","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[51,52],"tindex":"2aeac61d-3e7a-11e6-8519-03a97ba7fda8","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((b.size()) != (b.size())) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[53],"tindex":"2aeaed2e-3e7a-11e6-8519-215e941374a7","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"2aeaed2f-3e7a-11e6-8519-af005bd76659","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key.isAssignableFrom(key.getReturnType())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key","method":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl","sourcecode":"!(excess.isEmpty())"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"2aeb1340-3e7a-11e6-8519-9954d3fc550a","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 1"},"failures":[],"tindex":"2aeb1341-3e7a-11e6-8519-8bcbf9216cff","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[120],"tindex":"2aeb3a52-3e7a-11e6-8519-257caa574b43","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[121],"tindex":"2aeb3a53-3e7a-11e6-8519-19a38e31784b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (t.isEmpty()) {\n                {\n                    org.apache.commons.collections4.Put<K, V>.putAll(t);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"2aeb6164-3e7a-11e6-8519-6be3e922729e","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (!(contains(o))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[122],"tindex":"2aeb6165-3e7a-11e6-8519-4de738811857","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[123],"tindex":"2aeb6166-3e7a-11e6-8519-01e2474257a2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (null == obj) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.left, p)"},"failures":[],"tindex":"2aeb8877-3e7a-11e6-8519-e7e0b5afaa86","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start, p)) {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"start","left":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2aec99e8-3e7a-11e6-8519-231e46958f24","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[124],"tindex":"2aecc0f9-3e7a-11e6-8519-a1d4c6090b42","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"2aece80a-3e7a-11e6-8519-af8da9a68cba","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (bitIndex < 0) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"2aed0f1b-3e7a-11e6-8519-1f2835918939","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (hash > 0) {\n                {\n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return referent;\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    throw new java.lang.Error();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hash"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[212],"tindex":"2aed362c-3e7a-11e6-8519-613161a8f4fe","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[213,159,214],"tindex":"2aed362d-3e7a-11e6-8519-451acdd826db","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"2aed362e-3e7a-11e6-8519-d7d7d2b20e49","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) != (coll.size())) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[215,216,217,218,219,220,221,222,223,224],"tindex":"2aed5d3f-3e7a-11e6-8519-f11c3918c5a7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[177,178,180,181,182,184,185,187,190,191,209,210],"tindex":"2aed5d40-3e7a-11e6-8519-1f97dd3723a0","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[225],"tindex":"2aedab61-3e7a-11e6-8519-9de1c9660667","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[226],"tindex":"2aedd272-3e7a-11e6-8519-63c0ad774c8b","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[227],"tindex":"2aedd273-3e7a-11e6-8519-7bd5653f6d42","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],"tindex":"2aedd274-3e7a-11e6-8519-5ff83440018b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[],"tindex":"2aedf985-3e7a-11e6-8519-756b978d8e4b","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 4) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"2aedf986-3e7a-11e6-8519-c126cf8525c8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (hash > 0) {\n                {\n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return referent;\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                        return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n                    } \n                    throw new java.lang.Error();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"hash"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtFieldReadImpl","sourcecode":"exhausted"},"failures":[283],"tindex":"2aee2097-3e7a-11e6-8519-5f7a8d2ad87b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exhausted":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[284,177,178,180,181,182,183,185,187,190,191,195,196,197,198,199,200,204,207,208,209,210,211,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412],"tindex":"2aee2098-3e7a-11e6-8519-0990f31dd693","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[413,414,415,416,361,417,418],"tindex":"2aee47a9-3e7a-11e6-8519-8d286cc53140","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:343","type":"CtBinaryOperatorImpl","sourcecode":"(answer != null) && (answer instanceof java.util.Map)"},"failures":[],"tindex":"2aee47aa-3e7a-11e6-8519-d32f639a6281","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if ((object != null) && (answer instanceof java.util.Map)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[419],"tindex":"2aee6ebb-3e7a-11e6-8519-8d70f8591b88","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[420,421,422,423,424,425,426,90],"tindex":"2aee6ebc-3e7a-11e6-8519-013dc8ebceb5","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().getCount(object);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"2aee95cd-3e7a-11e6-8519-ab73d30cdf52","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"2aee95ce-3e7a-11e6-8519-05b338933806","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (!(contains(o))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2aee95cf-3e7a-11e6-8519-290990009d28","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"2aeebce0-3e7a-11e6-8519-e71bb9b33dd8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[341,362],"tindex":"2aeebce1-3e7a-11e6-8519-959742e88202","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[427],"tindex":"2aeee3f2-3e7a-11e6-8519-1baee277f2f3","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[428],"tindex":"2aeee3f3-3e7a-11e6-8519-2799ee234fc5","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (a.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2aef0b04-3e7a-11e6-8519-0b286c6ba8c2","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().getCount(object);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[429],"tindex":"2aef0b05-3e7a-11e6-8519-ebaf34232b4b","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 0"},"failures":[],"tindex":"2aef0b06-3e7a-11e6-8519-25ed05c76327","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[430,431,432],"tindex":"2aef0b07-3e7a-11e6-8519-3d270c8f57ec","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[433,434,435],"tindex":"2aef3218-3e7a-11e6-8519-77c65803d6e5","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[436],"tindex":"2aef3219-3e7a-11e6-8519-db98a685d601","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"2aef321a-3e7a-11e6-8519-f5ea92405b80","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[437,438],"tindex":"2aef592b-3e7a-11e6-8519-fda2935d8790","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455],"tindex":"2aef592c-3e7a-11e6-8519-97b439ea6f28","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[177,178,180,181,182,185,187,190,191,195,196,197,198,199,200,208,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,337,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412],"tindex":"2aef803d-3e7a-11e6-8519-6fb1f98b3643","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:852","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object entry) {\n    if (entry == null) {\n        {\n            if (entry instanceof java.util.Map.Entry) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(entry));\n                final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(e.getKey());\n                return (match != null) && (match.equals(e));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2aef803e-3e7a-11e6-8519-27eed305a907","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"2aefa74f-3e7a-11e6-8519-9bd02f94190c","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (bitIndex == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2aefa750-3e7a-11e6-8519-c7e72ac31f17","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (t.isEmpty()) {\n                {\n                    org.apache.commons.collections4.Put<K, V>.putAll(t);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 1"},"failures":[],"tindex":"2aefa751-3e7a-11e6-8519-3dc9ba474e4e","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[456],"tindex":"2aefa752-3e7a-11e6-8519-b3ed5043342c","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[457,458,459,460,461,462,463,464,465],"tindex":"2aefce63-3e7a-11e6-8519-5f8213be41cd","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[466,31,467,468,469,470,471,472,473,474,475,476],"tindex":"2aeff574-3e7a-11e6-8519-8bc194b369e4","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"2aeff575-3e7a-11e6-8519-e7a56930b1c6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,486,509],"tindex":"2af01c86-3e7a-11e6-8519-f532209deeed","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2af01c87-3e7a-11e6-8519-d38a52b01fc0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"2af01c88-3e7a-11e6-8519-dff1f7ababfd","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) != (coll.size())) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[284,171,173,174,172,175,176,177,178,179,180,181,182,183,184,185,510,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,511,512,513,514,515,516,517,518,413,292,519,520,521,308,317,522,318,523,524,525,526,527,528,319,320,529,321,322,323,324,530,325,531,532,326,533,534,327,328,535,536,537,329,330,331,332,333,334,538,539,540,335,541,542,336,337,338,339,340,543,544,545,546,547,548,549,550,551,552,553,554,555,556,350,360,414,359,415,557,558,416,361,559,417,560,561,418,562,563,564,362,363,565,566,567,568,569,364,365,570,366,367,368,369,571,370,572,573,371,574,575,372,373,576,577,578,374,375,376,377,378,379,579,580,581,582,583,584,585,380,381,382,586,587,588,589,590,591,592,593,594,595,596,597,390,598,599,600,121],"tindex":"2af04399-3e7a-11e6-8519-218e453e2092","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity < 0) {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"proposedCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"2af0439a-3e7a-11e6-8519-470fac1cb30e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null ? value == null : nextElement.equals(p)) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"value","nextElement":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,47,652,48,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,49,683,684,685,686,687,688,689,690,691,692,693],"tindex":"2af06aab-3e7a-11e6-8519-473a247b46c4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"2af06aac-3e7a-11e6-8519-5f8847ee0ab3","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[694,695],"tindex":"2af06aad-3e7a-11e6-8519-cb34798e236f","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[696,697,698,699],"tindex":"2af091be-3e7a-11e6-8519-9db754944d03","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"2af091bf-3e7a-11e6-8519-955dad901c4d","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[700,701,702,703,641,704],"tindex":"2af091c0-3e7a-11e6-8519-0f43cc63d876","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[705],"tindex":"2af0b8d1-3e7a-11e6-8519-1bc1aa188620","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"2af0b8d2-3e7a-11e6-8519-434b0e1ebcb3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtBinaryOperatorImpl","sourcecode":"h == (root)"},"failures":[125,128,131,132,130,135,136,138,139,140,142,143,145,148,149,153,154,155,156,157,158,159,133,165,167,168,169,170],"tindex":"2af0b8d3-3e7a-11e6-8519-95410883a44f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (tree == tree) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"tree","h":"tree"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[706,707,708,709,710,711],"tindex":"2af106f4-3e7a-11e6-8519-eb4deb583a2b","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end2 > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"end2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[712],"tindex":"2af12e05-3e7a-11e6-8519-4b1323e6e65f","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"2af15516-3e7a-11e6-8519-21a0b0d0f806","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[],"tindex":"2af15517-3e7a-11e6-8519-a191e00d1735","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 1"},"failures":[],"tindex":"2af15518-3e7a-11e6-8519-8da85b203373","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"2af17c29-3e7a-11e6-8519-9baad0858442","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[121],"tindex":"2af17c2a-3e7a-11e6-8519-2bfce16f5092","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[713,714,715,716,717,718,719,720,458,721,722,723],"tindex":"2af17c2b-3e7a-11e6-8519-8da8946ce267","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.String) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[724,421,423,725],"tindex":"2af1a33c-3e7a-11e6-8519-99be0c6c2194","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[726],"tindex":"2af1a33d-3e7a-11e6-8519-852e2dd81c04","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"2af1a33e-3e7a-11e6-8519-f1f7f66942d7","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[727,728,729],"tindex":"2af1a33f-3e7a-11e6-8519-a5ac5d013501","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl","sourcecode":"(end) >= (maxElements)"},"failures":[],"tindex":"2af1ca50-3e7a-11e6-8519-975829d7dfe5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond >= beyond) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"beyond","end":"beyond"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"2af1ca51-3e7a-11e6-8519-f37cea799f9b","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2af1ca52-3e7a-11e6-8519-85720b063828","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"2af1ca53-3e7a-11e6-8519-dbcc0cba9076","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2af1f164-3e7a-11e6-8519-8b44acd3609f","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[],"tindex":"2af1f165-3e7a-11e6-8519-f98160bcc017","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[730,731,732,733,734,735,736,737,738,739],"tindex":"2af1f166-3e7a-11e6-8519-21f713d1588e","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if ((label instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[403,740],"tindex":"2af1f167-3e7a-11e6-8519-1fc2499d6900","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255270057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}