{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":269,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":766,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":767,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":84,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":739,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":755,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":577,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":765,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":552,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":763,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":128,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":203,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":317,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":59,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":282,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":811,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":712,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":419,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":240,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":507,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":324,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":413,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":772,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":278,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":602,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":795,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":584,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":228,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":789,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":523,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":147,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":674,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":123,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":198,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":748,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":380,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":631,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":530,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":684,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":51,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":346,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":179,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":349,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":792,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":292,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":481,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":666,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":697,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":580,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":148,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":242,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":524,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":424,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":704,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":797,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":290,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":372,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":492,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":181,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":818,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":444,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":603,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":740,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":611,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":213,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":687,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":680,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":600,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":705,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":644,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":689,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":261,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":640,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":642,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":517,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":634,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":120,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":308,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":438,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":210,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":357,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":781,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":224,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":555,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":201,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":718,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":291,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":522,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":130,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":24,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":169,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":411,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":30,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":191,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":821,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":630,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":694,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":638,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":407,"org.apache.commons.collections4.CollectionUtilsTest.get1":635,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":23,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":489,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":515,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":756,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":607,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":145,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":554,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":72,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":778,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":787,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":254,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":485,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":445,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":428,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":686,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":321,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":661,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":443,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":379,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":271,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":588,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":597,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":436,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":406,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":375,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":461,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":564,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":107,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":464,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":478,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":320,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":22,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":659,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":104,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":801,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":735,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":790,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":581,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":769,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":133,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":490,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":9,"org.apache.commons.collections4.map.HashedMapTest.testClone":651,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":412,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":327,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":675,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":815,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":98,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":167,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":572,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":367,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":503,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":318,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":794,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":473,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":190,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":371,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":573,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":142,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":434,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":277,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":616,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":550,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":1,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":69,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":449,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":545,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":541,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":540,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":543,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":542,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":537,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":182,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":539,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":538,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":41,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":97,"org.apache.commons.collections4.map.LinkedMapTest.testClone":647,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":711,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":741,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":359,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":264,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":627,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":338,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":512,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":322,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":260,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":347,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":574,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":456,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":425,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":383,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":422,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":447,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":672,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":575,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":534,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":802,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":690,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":468,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":784,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":476,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":807,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":677,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":25,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":355,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":78,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":89,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":707,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":158,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":595,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":495,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":475,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":164,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":409,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":28,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":744,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":761,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":813,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":214,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":420,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":753,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":502,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":373,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":49,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":45,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":520,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":793,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":614,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":276,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":266,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":553,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":93,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":609,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":7,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":578,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":557,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":728,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":286,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":535,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":200,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":160,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":465,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":462,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":582,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":442,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":521,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":730,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":786,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":414,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":791,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":353,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":570,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":589,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":44,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":773,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":288,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":775,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":289,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":648,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":594,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":665,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":151,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":376,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":197,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":103,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":673,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":637,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":683,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":238,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":717,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":713,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":206,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":39,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":298,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":814,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":150,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":453,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":47,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":417,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":82,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":737,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":394,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":404,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":592,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":817,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":356,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":472,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":273,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":615,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":389,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":822,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":77,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":799,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":654,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":361,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":313,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":719,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":617,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":486,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":497,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":777,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":105,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":723,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":646,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":470,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":678,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":457,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":287,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":350,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":374,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":33,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":193,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":466,"org.apache.commons.collections4.list.TreeListTest.testRemove":432,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":527,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":137,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":114,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":598,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":812,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":738,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":279,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":508,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":715,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":599,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":10,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":53,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":323,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":785,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":567,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":745,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":506,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":528,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":806,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":215,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":751,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":469,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":727,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":526,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":301,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":721,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":163,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":776,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":681,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":624,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":561,"org.apache.commons.collections4.map.LRUMapTest.testClone":746,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":758,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":183,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":548,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":664,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":216,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":516,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":691,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":474,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":159,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":285,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":514,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":348,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":390,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":391,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":344,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":195,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":37,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":91,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":499,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":760,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":132,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":629,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":569,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":706,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":217,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":493,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":547,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":620,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":386,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":441,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":685,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":73,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":8,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":798,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":754,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":501,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":810,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":565,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":71,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":510,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":682,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":652,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":586,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":800,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":275,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":571,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":316,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":743,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":244,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":189,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":471,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":54,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":560,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":50,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":415,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":653,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":222,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":118,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":732,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":479,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":808,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":363,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":126,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":783,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":79,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":779,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":669,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":519,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":61,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":529,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":796,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":804,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":695,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":19,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":421,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":696,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":400,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":612,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":752,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":488,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":819,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":174,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":805,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":803,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":57,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":385,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":259,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":345,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":207,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":655,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":551,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":671,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":328,"org.apache.commons.collections4.CollectionUtilsTest.isFull":566,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":484,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":558,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":632,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":459,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":591,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":87,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":771,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":226,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":504,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":64,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":482,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":246,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":750,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":188,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":709,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":749,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":762,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":395,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":722,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":397,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":396,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":725,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":27,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":641,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":194,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":352,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":626,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":525,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":143,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":294,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":593,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":518,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":764,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":319,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":334,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":418,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":180,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":467,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":354,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":455,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":636,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":236,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":231,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":816,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":585,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":42,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":141,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":176,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":140,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":757,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":549,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":724,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":156,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":393,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":788,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":95,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":365,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":463,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":657,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":820,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":729,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":621,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":692,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":212},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"8117cb1d-3f12-11e6-89df-752a6ff58387","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"8118193e-3f12-11e6-89df-656a7e478204","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[2],"tindex":"8118193f-3f12-11e6-89df-6342f4bc570f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl"},"failures":[3],"tindex":"81181940-3f12-11e6-89df-8b9b30c51795","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Integer) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81184051-3f12-11e6-89df-857e5517d9fa","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[4,5,6,0,7],"tindex":"81184052-3f12-11e6-89df-471fb97c2b0c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof java.util.Collection<?>) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81184053-3f12-11e6-89df-a3a59ed05af9","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"81186764-3f12-11e6-89df-47dc8dc8ddd0","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((object instanceof java.util.Map.Entry) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"81186765-3f12-11e6-89df-67081ddfd02c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl"},"failures":[],"tindex":"81186766-3f12-11e6-89df-d54e2b8ec268","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226],"tindex":"81188e77-3f12-11e6-89df-c9c1a041d4f7","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtInvocationImpl"},"failures":[227,228,229,230,231,232,233,234,235,236,237,238,239,240,92,93,241,94,95,96,97,242,98,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"81188e78-3f12-11e6-89df-e9e6ea5a1c19","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtUnaryOperatorImpl"},"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"8118b589-3f12-11e6-89df-7fe67fb59233","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (previous != null) {\n        {\n            if (!(tree.isEmpty())) {\n                {\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n                    if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                        while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                            if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                                break;\n                            } \n                            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                            } \n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } \n                    if (current.isEmpty()) {\n                        return null;\n                    } \n                    if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                            return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } \n                        return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n                    } \n                    while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (current == tree) {\n                            return null;\n                        } \n                        current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                    if (current == tree) {\n                        return null;\n                    } \n                    if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        return null;\n                    } \n                    return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"tree"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8118dc9a-3f12-11e6-89df-c7220910ac13","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (start == start) {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"start","parent":"start","left":"start","root":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8118dc9b-3f12-11e6-89df-c9e7124cb2f3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[344,345,346,347,348,349],"tindex":"811903ac-3f12-11e6-89df-210b537fbdf0","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811903ad-3f12-11e6-89df-2196188ef8da","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811903ae-3f12-11e6-89df-cbac10cbcc22","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811903af-3f12-11e6-89df-7d74fba33fcd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == entry) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl"},"failures":[350],"tindex":"811903b0-3f12-11e6-89df-8dda70b674f7","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[351],"tindex":"811903b1-3f12-11e6-89df-43d56daaec19","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (null != key) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.remove(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl"},"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431],"tindex":"81192ac2-3f12-11e6-89df-7b8a71147d58","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81192ac3-3f12-11e6-89df-bf5d74d5f511","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl"},"failures":[432,433,434,435,436,437,438],"tindex":"81192ac4-3f12-11e6-89df-41acebe16983","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81192ac5-3f12-11e6-89df-134e9505c768","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811951d6-3f12-11e6-89df-3794ab5eb498","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[439],"tindex":"811951d7-3f12-11e6-89df-e73c3d335e71","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811951d8-3f12-11e6-89df-e3dddc21a592","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811951d9-3f12-11e6-89df-fb0d25cf69be","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (previous != null) {\n        {\n            if (!(tree.isEmpty())) {\n                {\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n                    if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                        while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                            if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                                break;\n                            } \n                            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                            } \n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } \n                    if (current.isEmpty()) {\n                        return null;\n                    } \n                    if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                            return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } \n                        return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n                    } \n                    while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (current == tree) {\n                            return null;\n                        } \n                        current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                    if (current == tree) {\n                        return null;\n                    } \n                    if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                        return null;\n                    } \n                    if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        return null;\n                    } \n                    return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[440],"tindex":"811978ea-3f12-11e6-89df-4fc6dca09913","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl"},"failures":[316,317,318,441,442,443,319,320,321,444,322,323,445,324,325,326,446,327,328,447,329,448,449,330,331,450,451,452,332,333,334,335,336,337,338,453,454,339,455,456,457,340,458,341,342,343],"tindex":"811978eb-3f12-11e6-89df-89ec9b48a295","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"811978ec-3f12-11e6-89df-bd3e82b20146","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:508","type":"CtMethodImpl","sourcecode":"protected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            (int)--;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81199ffd-3f12-11e6-89df-8deeecd87eaf","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        return null;\n                    } \n                    return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81199ffe-3f12-11e6-89df-d1e7dead5504","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"81199fff-3f12-11e6-89df-d7980ef146b0","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8119a000-3f12-11e6-89df-730f9ba97104","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == entry) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl"},"failures":[],"tindex":"8119a001-3f12-11e6-89df-a90494f82672","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(start)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[515],"tindex":"8119c612-3f12-11e6-89df-0da97167787c","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8119c613-3f12-11e6-89df-c72d3b1afdcd","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl"},"failures":[316,317,442,443,318,441,319,320,321,444,322,323,445,324,325,326,446,327,328,447,329,448,449,330,331,450,451,452,332,333,334,335,336,337,338,453,454,339,455,456,457,340,458,341,342,343],"tindex":"8119c614-3f12-11e6-89df-a580c3627fb2","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"otherOffsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl"},"failures":[516],"tindex":"8119ed25-3f12-11e6-89df-55a3c74af509","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[517,518],"tindex":"8119ed26-3f12-11e6-89df-f3cf540d361f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8119ed27-3f12-11e6-89df-ef268d5042cb","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtInvocationImpl"},"failures":[],"tindex":"811a1438-3f12-11e6-89df-bdbb9f384b02","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    return java.util.Collections.synchronizedList(list);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a1439-3f12-11e6-89df-87f136b4a18f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl"},"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,207,208,209,210,211,213],"tindex":"811a143a-3f12-11e6-89df-fb3090f57303","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a143b-3f12-11e6-89df-25e01d2a6173","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (null != key) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.remove(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl"},"failures":[537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567],"tindex":"811a143c-3f12-11e6-89df-fd484fa8101c","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a3b4d-3f12-11e6-89df-3dd4c884957c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            if (key1 == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n                    return (key1 == key2) || (key1.equals(key2));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],"tindex":"811a3b4e-3f12-11e6-89df-23fdef033ea1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:425","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 instanceof java.util.Collection<?>) {\n        {\n            return (value1 == value2) || (value1.equals(value2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[609,465,610,611,612,613,614,498,615,616,617,618,619,620,513,621],"tindex":"811a3b4f-3f12-11e6-89df-09353e265d70","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a3b50-3f12-11e6-89df-31ed24352228","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[622],"tindex":"811a3b51-3f12-11e6-89df-4b0c5a795596","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a3b52-3f12-11e6-89df-b769726b7d41","method":{"position":"org.apache.commons.collections4.IteratorUtils:491","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a6263-3f12-11e6-89df-fdf08c6a6b7a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[623,398,399,624,400,405,408,410],"tindex":"811a6264-3f12-11e6-89df-f53fc377d9ce","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811a6265-3f12-11e6-89df-bd6fdd051ec9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"node","current":"node","right":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl"},"failures":[351,350],"tindex":"811a6266-3f12-11e6-89df-1508471107f2","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl"},"failures":[625,626,627,628,629,630,631,632,633],"tindex":"811a6267-3f12-11e6-89df-4d72f831911f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Long) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[634,407],"tindex":"811a8978-3f12-11e6-89df-c54708116a85","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl"},"failures":[635],"tindex":"811a8979-3f12-11e6-89df-f5fae9989e29","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,584,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"811a897a-3f12-11e6-89df-938d738c6f79","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl"},"failures":[],"tindex":"811ab08b-3f12-11e6-89df-0deaed68284e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(count)) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811ab08c-3f12-11e6-89df-d99509669b68","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            if (key1 == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n                    return (key1 == key2) || (key1.equals(key2));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[671,672,673,674,675,676,46,677,678,225,47,679,680,48,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712],"tindex":"811ad79d-3f12-11e6-89df-2f6bc43ac525","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[96,713,103,714,110,715,148,716,156,717,164,718,173,719,181,720,721,195,722,723,724,725,726,727,203,728,729,730,523,731,532,732,733,734,210,735,218,736,737,738],"tindex":"811ad79e-3f12-11e6-89df-71945981604f","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[739],"tindex":"811ad79f-3f12-11e6-89df-934d521f9592","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl"},"failures":[227,228,231,230,232,229,239,235,236,237,238,233,234,240,92,93,241,94,95,96,97,242,98,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,265,264,266,263,275,271,272,273,274,267,268,269,270,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"811ad7a0-3f12-11e6-89df-9528c99f04b2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811ad7a1-3f12-11e6-89df-334676fb1ff3","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if ((index < 0) || (index >= index)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1115","type":"CtVariableReadImpl"},"failures":[],"tindex":"811afeb2-3f12-11e6-89df-47aa74d17938","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yWasLeftChild":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"811afeb3-3f12-11e6-89df-6fb000974f66","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[740,741,641,742,647,743,651,744,655,584,745,596,669,746,747],"tindex":"811afeb4-3f12-11e6-89df-a39511626664","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:343","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811afeb5-3f12-11e6-89df-cb5f592d9bf0","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key != null) && (answer instanceof java.util.Map)) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl"},"failures":[748],"tindex":"811afeb6-3f12-11e6-89df-575f2378479c","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[749],"tindex":"811afeb7-3f12-11e6-89df-0fe5e362a725","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl"},"failures":[625,626,750,627,628,629,751,630,631,632,633,752,753],"tindex":"811b25c8-3f12-11e6-89df-3b5e21634b33","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtInvocationImpl"},"failures":[],"tindex":"811b25c9-3f12-11e6-89df-edca2854033d","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[754,755,756,757,758],"tindex":"811b25ca-3f12-11e6-89df-7d6b572c3bc7","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b4cdb-3f12-11e6-89df-8d76cc2ea813","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b4cdc-3f12-11e6-89df-6d8efc585c4c","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n    } \n    return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {    };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl"},"failures":[],"tindex":"811b73ed-3f12-11e6-89df-a1feeecab8ae","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl"},"failures":[759],"tindex":"811b73ee-3f12-11e6-89df-9b2707cb6064","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b73ef-3f12-11e6-89df-87a067c7769a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((object instanceof java.util.Map.Entry) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtInvocationImpl"},"failures":[],"tindex":"811b73f0-3f12-11e6-89df-bfeac59415ab","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n    if ((queue.size()) > 0) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final E[] E[] = ((E[])(queue.toArray()));\n        queue.clear();\n        for (final E E : values) {\n            decorated.decorated().add(transformer.transform(value));\n        }\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b73f1-3f12-11e6-89df-cdf8eb26f119","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b73f2-3f12-11e6-89df-474f05ddcc10","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if ((defaultValue == null) || (defaultValue == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"defaultValue","position2":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,191,783,784,192,785,786,193,787,194,195,788,196,789,790,791,197,792,198,199,793,794,795,796,722,797,798,799,800,801],"tindex":"811b9b03-3f12-11e6-89df-4dcc4e3cd92c","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b9b04-3f12-11e6-89df-25b0c2bb323b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[802],"tindex":"811b9b05-3f12-11e6-89df-ad1444dd01c5","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811b9b06-3f12-11e6-89df-03a66dd8bd41","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[803],"tindex":"811b9b07-3f12-11e6-89df-af9c7d92dcd0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811bc218-3f12-11e6-89df-1facc7413d30","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if ((t.size()) != 1) {\n        {\n            org.apache.commons.collections4.Put<K, V>.putAll(t);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"811bc219-3f12-11e6-89df-398680cde382","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[805,806],"tindex":"811bc21a-3f12-11e6-89df-d5b6cc22e77a","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if ((list.size()) > (list.size())) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811bc21b-3f12-11e6-89df-31c3c51d20ac","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        return null;\n                    } \n                    return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[807,808],"tindex":"811bc21c-3f12-11e6-89df-0524d1b0a84d","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[809,810,811],"tindex":"811bc21d-3f12-11e6-89df-ef83debf0c7e","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"811bc21e-3f12-11e6-89df-53fcc48c9f66","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[4,5],"tindex":"811be92f-3f12-11e6-89df-1d658cad66db","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtBinaryOperatorImpl"},"failures":[812,813,814,815,816,817,818,819,820,131,132,133,134,135,136,137,138,821,822,139],"tindex":"811be930-3f12-11e6-89df-9f4161c639f0","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323090106/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}