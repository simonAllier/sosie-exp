{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":56,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":752,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":172,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":349,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":384,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":645,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":648,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":146,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":806,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":816,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":678,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":533,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":605,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":451,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":727,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":555,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":790,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":315,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":60,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":133,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":2,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":201,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":141,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":353,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":368,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":564,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":454,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":766,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":694,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":656,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":452,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":733,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":217,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":512,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":653,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":383,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":0,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":283,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":129,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":574,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":57,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":22,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":636,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":291,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":825,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":827,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":507,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":328,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":760,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":288,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":441,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":826,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":764,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":643,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":233,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":663,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":485,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":486,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":220,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":484,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":422,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":460,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":724,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":586,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":329,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":305,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":138,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":713,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":810,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":606,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":718,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":236,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":224,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":621,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":435,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":557,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":642,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":350,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":256,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":126,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":243,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":334,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":784,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":331,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":195,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":699,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":269,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":495,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":107,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":821,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":242,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":17,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":722,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":185,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":286,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":582,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":824,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":721,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":53,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":33,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":744,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":55,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":549,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":813,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":581,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":580,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":491,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":689,"org.apache.commons.collections4.map.LRUMapTest.testReset":543,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":228,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":674,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":455,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":690,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":340,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":817,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":50,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":301,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":336,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":188,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":625,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":314,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":550,"org.apache.commons.collections4.map.LinkedMapTest.testReset":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":448,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":626,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":372,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":565,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":812,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":477,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":719,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":585,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":716,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":450,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":624,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":620,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":508,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":610,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":584,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":746,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":272,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":730,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":688,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":364,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":252,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":811,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":703,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":408,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":518,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":237,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":389,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":151,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":704,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":478,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":723,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":783,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":820,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":756,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":638,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":382,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":528,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":529,"org.apache.commons.collections4.map.HashedMapTest.testClone":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":530,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":46,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":23,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":421,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":685,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":759,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":753,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":293,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":547,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":777,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":127,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":649,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":743,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":800,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":794,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":299,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":358,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":357,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":359,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":378,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":489,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":59,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":608,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":335,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":338,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":796,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":241,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":701,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":774,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":369,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":326,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":21,"org.apache.commons.collections4.map.LinkedMapTest.testClone":629,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":602,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":627,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":789,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":527,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":37,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":395,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":551,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":545,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":803,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":675,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":111,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":391,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":313,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":696,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":348,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":459,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":30,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":120,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":522,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":304,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":603,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":692,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":691,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":214,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":604,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":516,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":473,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":248,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":728,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":292,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":319,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":814,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":788,"org.apache.commons.collections4.map.LRUMapTest.testLRU":544,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":711,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":598,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":235,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":392,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":497,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":594,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":276,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":665,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":776,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":273,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":575,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":196,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":58,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":45,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":573,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":161,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":548,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":16,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":162,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":438,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":658,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":265,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":476,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":633,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":583,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":166,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":147,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":445,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":238,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":493,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":818,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":679,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":463,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":714,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":341,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":227,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":471,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":798,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":802,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":511,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":815,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":829,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":255,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":509,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":153,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":786,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":524,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":474,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":588,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":387,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":263,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":198,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":681,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":296,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":488,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":458,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":173,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":823,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":163,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":318,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":344,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":271,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":54,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":738,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":379,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":808,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":346,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":444,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":443,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":281,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":262,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":266,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":413,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":355,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":553,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":797,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":770,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":123,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":717,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":420,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":735,"org.apache.commons.collections4.list.TreeListTest.testRemove":705,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":132,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":662,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":171,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":482,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":481,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":791,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":483,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":351,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":741,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":787,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":85,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":83,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":190,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":591,"org.apache.commons.collections4.map.LRUMapTest.testClone":632,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":303,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":356,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":807,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":240,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":510,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":762,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":640,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":782,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":729,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":809,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":805,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":418,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":684,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":618,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":130,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":639,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":116,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":772,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":150,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":590,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":386,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":801,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":780,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":165,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":819,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":775,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":767,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":221,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":365,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":106,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":515,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":561,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":706,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":644,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":517,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":758,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":503,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":652,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":202,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":268,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":615,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":781,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":755,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":362,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":278,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":354,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":361,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":757,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":505,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":492,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":537,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":184,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":149,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":264,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":164,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":532,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":828,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":559,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":773,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":611,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":623,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":496,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":569,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":720,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":429,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":158,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":651,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":203,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":599,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":205,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":204,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":339,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":587,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":294,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":712,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":765,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":747,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":546,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":732,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":295,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":100,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":631,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":650,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":270,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":405,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":571,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":734,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":795,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":169,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":466,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":423,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":739,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":778,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":822,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":7,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":160,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":628,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":475,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":194,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":469,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":115,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":697,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":504,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":726,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":687,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":309,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":500,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":736,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":771,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":695,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":397,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":63,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":749,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":3,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":290,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":622,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":200,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":177,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":287,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":614,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":192,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":298,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":647,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":804,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":635,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":197,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":646,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":769,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":779,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":634,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":577,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":670,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":145,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":399,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":342,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":253,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":710,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":566,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":230},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"da611481-3f1f-11e6-a66c-db51ccea318f","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (trueClosure == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"trueClosure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da6162a2-3f1f-11e6-a66c-4b9262284185","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da6162a3-3f1f-11e6-a66c-8557a69d69c3","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list1 == null) || (list1 == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if (((list2 == null) || (list2 == null)) || ((set1.size()) != (set2.size()))) {\n                {\n                    if (list1 == list2) {\n                        return true;\n                    } \n                    if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                        return false;\n                    } \n                    final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n                    final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n                    java.lang.Object java.lang.Object = null;\n                    java.lang.Object java.lang.Object = null;\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        obj1 = it1.next();\n                        obj2 = it2.next();\n                        if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"list2","set1":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da6162a4-3f1f-11e6-a66c-631a9203762e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da6189b5-3f1f-11e6-a66c-09daf8919d6e","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"elements"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"da6189b6-3f1f-11e6-a66c-1d6d0fc3ba8c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl"},"failures":[98,99,100,101,102,103,104,105,106,107],"tindex":"da61b0c7-3f1f-11e6-a66c-0d59049b0241","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da61b0c8-3f1f-11e6-a66c-e1bb0ef991b7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Collection) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"da61b0c9-3f1f-11e6-a66c-45fa2dd142ca","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"inverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl"},"failures":[],"tindex":"da61b0ca-3f1f-11e6-a66c-75128a7de734","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(count)) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"da61b0cb-3f1f-11e6-a66c-011ad3899407","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[72,76,86,89,90,93,94,95,96,97],"tindex":"da61d7dc-3f1f-11e6-a66c-7f645cec33a9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl"},"failures":[],"tindex":"da61d7dd-3f1f-11e6-a66c-d90bf1c1bd12","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(nCopies)) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da61d7de-3f1f-11e6-a66c-e973a48a2776","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[158,159,160,161,162],"tindex":"da61d7df-3f1f-11e6-a66c-7f2db0553113","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da61fef0-3f1f-11e6-a66c-6f949ff41f24","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits > 0) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da61fef1-3f1f-11e6-a66c-b3ae293eb8d8","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[163,164,165,166],"tindex":"da61fef2-3f1f-11e6-a66c-dffd01f5f8ac","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da61fef3-3f1f-11e6-a66c-4d71901872cf","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl"},"failures":[167,168],"tindex":"da622604-3f1f-11e6-a66c-ab061262a814","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da622605-3f1f-11e6-a66c-77c251b07ff3","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[169,170,171,172,173],"tindex":"da622606-3f1f-11e6-a66c-0bb277a8d926","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"da622607-3f1f-11e6-a66c-0b65a76444ce","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da622608-3f1f-11e6-a66c-c3aa9a082d74","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (replacementNode == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n            while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateRight(siblingNode, dataElement);\n                            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateLeft(siblingNode, dataElement);\n                            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"replacementNode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da624d19-3f1f-11e6-a66c-27beeb00861a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl"},"failures":[243],"tindex":"da624d1a-3f1f-11e6-a66c-3dfb80ead77b","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[244],"tindex":"da624d1b-3f1f-11e6-a66c-6f599431902b","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[245],"tindex":"da62742c-3f1f-11e6-a66c-478a555b88b4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593],"tindex":"da62742d-3f1f-11e6-a66c-07f9f51dd84f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622],"tindex":"da62742e-3f1f-11e6-a66c-432dc134bccf","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da629b3f-3f1f-11e6-a66c-19a793bd8621","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (index >= index) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl"},"failures":[623,624],"tindex":"da629b40-3f1f-11e6-a66c-e92579a21910","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da629b41-3f1f-11e6-a66c-eff8f82c2cc7","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list1 == null) || (list1 == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if (((list2 == null) || (list2 == null)) || ((set1.size()) != (set2.size()))) {\n                {\n                    if (list1 == list2) {\n                        return true;\n                    } \n                    if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                        return false;\n                    } \n                    final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n                    final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n                    java.lang.Object java.lang.Object = null;\n                    java.lang.Object java.lang.Object = null;\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        obj1 = it1.next();\n                        obj2 = it2.next();\n                        if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[625],"tindex":"da629b42-3f1f-11e6-a66c-bd615818c2dc","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl"},"failures":[626],"tindex":"da629b43-3f1f-11e6-a66c-217808992d94","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count < 0) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[627,628,302,629,352,630,392,631,434,476,520,632,571],"tindex":"da62c254-3f1f-11e6-a66c-339792b9390a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            _putAll(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62c255-3f1f-11e6-a66c-b158f591ea84","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if ((index < 0) || (index >= index)) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[623,633],"tindex":"da62c256-3f1f-11e6-a66c-cd91f5fadf5a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62c257-3f1f-11e6-a66c-af5e20eeec93","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62c258-3f1f-11e6-a66c-bb52e5b28129","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"removeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62e969-3f1f-11e6-a66c-13a5dadb42b7","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62e96a-3f1f-11e6-a66c-dff3b37311b9","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62e96b-3f1f-11e6-a66c-a70c0093262d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da62e96c-3f1f-11e6-a66c-8d5542cd6732","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[634,544,635,636,637,546,547,548,549],"tindex":"da62e96d-3f1f-11e6-a66c-a7f4386075ea","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex < 0) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[638],"tindex":"da63107e-3f1f-11e6-a66c-c1c42bcbd4e1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl"},"failures":[639],"tindex":"da63107f-3f1f-11e6-a66c-01d9b0186d51","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((closure == null) || (closure == null)) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[640,641],"tindex":"da631080-3f1f-11e6-a66c-a12cebdac03a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (b instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl"},"failures":[642,643,644,645,646,647],"tindex":"da631081-3f1f-11e6-a66c-376bf0805b80","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end1 <= end2) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"end2","newCapacity":"end1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da631082-3f1f-11e6-a66c-4398fd7749ce","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da633693-3f1f-11e6-a66c-13a763688548","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[648],"tindex":"da633694-3f1f-11e6-a66c-7338b96e9942","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl"},"failures":[245,649],"tindex":"da633695-3f1f-11e6-a66c-2bc2c3d6c357","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"da633696-3f1f-11e6-a66c-2db0e20c4e0f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da633697-3f1f-11e6-a66c-5183b39d3a27","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da635da8-3f1f-11e6-a66c-fb3d41d6125c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da635da9-3f1f-11e6-a66c-b95e3cb1c82d","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da635daa-3f1f-11e6-a66c-cd364918c4ae","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive || forceInclusive) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exhausted":"forceInclusive","slotFilled":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"da635dab-3f1f-11e6-a66c-13bc22463c4d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[671],"tindex":"da635dac-3f1f-11e6-a66c-ad794fb6038e","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[42,672,673,674,675,225],"tindex":"da635dad-3f1f-11e6-a66c-81efff08f463","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtUnaryOperatorImpl"},"failures":[676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700],"tindex":"da635dae-3f1f-11e6-a66c-f98cf664dc14","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl"},"failures":[701,702],"tindex":"da63abcf-3f1f-11e6-a66c-137b3653dd5e","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[4,45,89,93,95,96,97],"tindex":"da63abd0-3f1f-11e6-a66c-49cbfd4ce375","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da63abd1-3f1f-11e6-a66c-5f863e6ca80c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[703],"tindex":"da63abd2-3f1f-11e6-a66c-1764466aeae4","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[704],"tindex":"da63d2e3-3f1f-11e6-a66c-5d3ae8009675","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da63d2e4-3f1f-11e6-a66c-ef779d0850a2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da63d2e5-3f1f-11e6-a66c-c75117a88697","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (a instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da63d2e6-3f1f-11e6-a66c-f1ef9c8da907","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl"},"failures":[],"tindex":"da63d2e7-3f1f-11e6-a66c-b318232227be","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(end1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"end1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl"},"failures":[705,706,707,708,709,710,711,712,713,714,715,716,717,718],"tindex":"da63f9f8-3f1f-11e6-a66c-c59ce9645b82","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (previous == null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl"},"failures":[719,720,721,722],"tindex":"da63f9f9-3f1f-11e6-a66c-fb37b0424fb3","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","end":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl"},"failures":[53],"tindex":"da63f9fa-3f1f-11e6-a66c-d94feceb8290","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl"},"failures":[723,724],"tindex":"da63f9fb-3f1f-11e6-a66c-cb177428a9f3","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"da63f9fc-3f1f-11e6-a66c-71f6cda4f61b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da64210d-3f1f-11e6-a66c-154aac054288","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"da64210e-3f1f-11e6-a66c-65aa1ae56aef","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da64210f-3f1f-11e6-a66c-a9ef70abffe6","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806],"tindex":"da642110-3f1f-11e6-a66c-d9d413673190","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl"},"failures":[2,1,3,4,5,6,10,11,12,13,7,8,9,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,52,53,54,55,56,57,48,49,50,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"da644821-3f1f-11e6-a66c-35cd8b00c077","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da644822-3f1f-11e6-a66c-df43725dd5e1","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da644823-3f1f-11e6-a66c-87dc6d91c389","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[807],"tindex":"da644824-3f1f-11e6-a66c-9195eec30d29","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da644825-3f1f-11e6-a66c-752ff264c40a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[55,86],"tindex":"da646f36-3f1f-11e6-a66c-511fa2138e82","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[808],"tindex":"da646f37-3f1f-11e6-a66c-ab11d0080b0f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da646f38-3f1f-11e6-a66c-b508ad9ca33e","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da646f39-3f1f-11e6-a66c-1b3be8af5b2d","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da646f3a-3f1f-11e6-a66c-13709fce1c63","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da646f3b-3f1f-11e6-a66c-59b69ab71943","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl"},"failures":[809,641,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827],"tindex":"da64964c-3f1f-11e6-a66c-db1e0de8c54a","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da64964d-3f1f-11e6-a66c-e9daec44e551","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[828],"tindex":"da64964e-3f1f-11e6-a66c-3bd39e22d0ec","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (b == a) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"a","set1":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da64964f-3f1f-11e6-a66c-fd4a0335df2a","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtUnaryOperatorImpl"},"failures":[163,829],"tindex":"da649650-3f1f-11e6-a66c-fb9d6149c569","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:96","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(final boolean trueFirst) {\n    if (!trueFirst) {\n        {\n            return trueFirst ? org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator : org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"trueFirst"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da649651-3f1f-11e6-a66c-77be99f19f4f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,48,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"da649652-3f1f-11e6-a66c-cd9cbbf0f7fc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da64bd63-3f1f-11e6-a66c-015cf2943181","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"da64bd64-3f1f-11e6-a66c-b1a0e69451c9","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328768341/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}