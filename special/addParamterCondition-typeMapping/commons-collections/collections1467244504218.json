{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":429,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":0,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":524,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":430,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":177,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":529,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":64,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":100,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":241,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":558,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":402,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":46,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":401,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":51,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":503,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":52,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":146,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":494,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":408,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":519,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":412,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":18,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":483,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":123,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":442,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":72,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":391,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":395,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":473,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":536,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":525,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":218,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":237,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":411,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":139,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":434,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":457,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":522,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":520,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":468,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":102,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":83,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":257,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":392,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":516,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":118,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":126,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":261,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":116,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":405,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":474,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":40,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":203,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":450,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":29,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":299,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":75,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.map.CompositeMapTest.testPut":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":244,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":30,"org.apache.commons.collections4.map.CompositeMapTest.testGet":501,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":286,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":549,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":82,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":2,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":438,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":470,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":187,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":105,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":487,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":459,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":359,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":68,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":367,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":445,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":341,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":550,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":491,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":232,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":192,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":527,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":557,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":463,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":480,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":95,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":217,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":492,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":507,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":167,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":247,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":376,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":369,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":509,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":423,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":372,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":242,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":453,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":428,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":358,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":19,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":406,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":387,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":472,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":258,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":319,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":537,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":461,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":493,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":189,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":157,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":216,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":386,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":80,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":528,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":398,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":427,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":4,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":28,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":255,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":112,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":425,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":383,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":194,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":188,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":57,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":512,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":132,"org.apache.commons.collections4.map.SingletonMapTest.testClone":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":420,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":280,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":301,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":318,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":469,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":273,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":58,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":448,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":8,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":205,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":160,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":209,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":302,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":378,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":482,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":310,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":436,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":141,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":236,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":111,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":471,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":155,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":458,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":182,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":385,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":433,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":444,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":435,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":63,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":142,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":294,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":161,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":119,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":467,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":555,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":47,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":140,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":486,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":532,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":107,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":179,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":366,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":185,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":452,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.map.HashedMapTest.testClone":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":76,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":297,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":477,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":278,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":541,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":231,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":403,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":290,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":551,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":523,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":443,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":545,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":554,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":513,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":371,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":178,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":393,"org.apache.commons.collections4.SetUtilsTest.testHashCode":356,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":20,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":517,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":446,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":183,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":388,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":306,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":456,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":361,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":271,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":466,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":77,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":269,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":235,"org.apache.commons.collections4.CollectionUtilsTest.isFull":508,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":166,"org.apache.commons.collections4.map.LinkedMapTest.testClone":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":172,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":495,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":418,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":499,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":543,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":364,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":13,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":21,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":437,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":303,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":339,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":399,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":396,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":377,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":69,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":313,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":206,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":515,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":336,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":143,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":94,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":130,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":488,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":531,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":219,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":312,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":272,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":548,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":120,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":431,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":211,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":340,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":295,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":262,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":159,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":234,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":510,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":59,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":134,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":87,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":426,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":43,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":168,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":193,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":138,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":61,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":158,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":373,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":293,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":422,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":390,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":131,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":363,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":101,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":259,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":449,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":263,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":365,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":113,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":36,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":400,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":409,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":354,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":199,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":547,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":556,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":414},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"e640a53f-3e54-11e6-882f-092065cfd208","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"e641b6b0-3e54-11e6-882f-3994024fa2c2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"e6422be1-3e54-11e6-882f-c146c31f1d13","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[63,64,65,66,67,55,56,57,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,58,83,84,85,86,87,88,59,60,89,90,91,92,93,61,94,95,96,62,97,98,99,100],"tindex":"e6422be2-3e54-11e6-882f-1daa41613743","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherLengthInBits <= 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"otherLengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e64427b3-3e54-11e6-882f-275e37018e7d","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e64427b4-3e54-11e6-882f-2348b27c58fb","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl","sourcecode":"(cacheSize) == 0"},"failures":[101],"tindex":"e6444ec5-3e54-11e6-882f-b1f84ea46a04","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[102],"tindex":"e6444ec6-3e54-11e6-882f-252d9a4dd2ce","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[103],"tindex":"e6444ec7-3e54-11e6-882f-ff7e70705efb","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"e64475d8-3e54-11e6-882f-5b02a8a4c871","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex >= hashIndex) {\n        {\n            if (hashIndex > hashIndex) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    (int)++;\n                    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n                    addEntry(entry, hashIndex);\n                    (int)++;\n                    checkCapacity();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex","index":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[104,105],"tindex":"e6451219-3e54-11e6-882f-512156598a21","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"e645392a-3e54-11e6-882f-7ff903123eae","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (newCapacity >= newCapacity) {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"newCapacity","index":"newCapacity"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[106],"tindex":"e645392b-3e54-11e6-882f-c1e68667d078","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                        return tmpMap;\n                    } \n                    return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"e645603c-3e54-11e6-882f-791a6428cd90","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key instanceof java.util.Collection<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n                    } \n                    if ((int) == 0) {\n                        return null;\n                    } \n                    if (key == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 2;\n                                    return old;\n                                } \n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = int;\n                                    K = K;\n                                    V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 2;\n                                    return old;\n                                } \n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = int;\n                                    K = K;\n                                    V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 2;\n                                    return old;\n                                } \n                                return null;\n                            case 2 :\n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 1;\n                                    return old;\n                                } \n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = int;\n                                    K = K;\n                                    V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 1;\n                                    return old;\n                                } \n                                return null;\n                            case 1 :\n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 0;\n                                    return old;\n                                } \n                        }\n                    } else {\n                        if ((int) > 0) {\n                            final int int = key.hashCode();\n                            switch (int) {\n                                case 3 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 2;\n                                        return old;\n                                    } \n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = int;\n                                        K = K;\n                                        V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 2;\n                                        return old;\n                                    } \n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = int;\n                                        K = K;\n                                        V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 2;\n                                        return old;\n                                    } \n                                    return null;\n                                case 2 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 1;\n                                        return old;\n                                    } \n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = int;\n                                        K = K;\n                                        V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 1;\n                                        return old;\n                                    } \n                                    return null;\n                                case 1 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 0;\n                                        return old;\n                                    } \n                            }\n                        } \n                    }\n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e645ae5d-3e54-11e6-882f-8f689cedf5a8","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"e645ae5e-3e54-11e6-882f-bf0fde5501f8","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[107,0,1,2,37],"tindex":"e645d56f-3e54-11e6-882f-b53ec760c438","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[108],"tindex":"e645d570-3e54-11e6-882f-696095ef2934","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"e645fc81-3e54-11e6-882f-9b8eee36f59d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"key","o2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[109,110,111,112],"tindex":"e645fc82-3e54-11e6-882f-35316c8fc65b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 instanceof java.lang.Object[]) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"e645fc83-3e54-11e6-882f-356d74ddf984","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e6462394-3e54-11e6-882f-ebcc97257c25","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (remove instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"remove"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[113,114,115,116,117],"tindex":"e6462395-3e54-11e6-882f-7baaeb1cfaab","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtBinaryOperatorImpl","sourcecode":"(predicates.length) == 0"},"failures":[118,119,120,121,122,123,124,125],"tindex":"e6464aa6-3e54-11e6-882f-6d1fc2be77ad","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies == 0) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object","length":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e6470df7-3e54-11e6-882f-73017b68c73b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[126,127,128,129,130,131,132,133,134,135,136],"tindex":"e6470df8-3e54-11e6-882f-bb4e490ebb3b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e6473509-3e54-11e6-882f-bff5fa852c3e","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[137,138,139,140,141,142],"tindex":"e647350a-3e54-11e6-882f-59cdf4b21207","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:109","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[143,144,145,146,147,148,149,150,151,152],"tindex":"e647350b-3e54-11e6-882f-696309f0812e","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj == null) || (obj == null)) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"obj","position2":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e6475c1c-3e54-11e6-882f-5d298daec6b6","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[103,153],"tindex":"e6475c1d-3e54-11e6-882f-efd1f4d39579","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"e6475c1e-3e54-11e6-882f-efa94afde363","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtBinaryOperatorImpl","sourcecode":"nextIterator != null"},"failures":[],"tindex":"e647832f-3e54-11e6-882f-f5e9b3222fc8","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"e6478330-3e54-11e6-882f-25638922ab33","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[20,23,26,28,29,31,33,35,36,37,38,41,46,48,195,196,197,198,199],"tindex":"e647aa41-3e54-11e6-882f-8946bdee31d6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[200],"tindex":"e647aa42-3e54-11e6-882f-93e142216249","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214],"tindex":"e647aa43-3e54-11e6-882f-d3203af42c29","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key instanceof java.lang.Double) {\n                {\n                    return key == null ? (getKey()) == null : key.equals(getKey());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"e647d154-3e54-11e6-882f-a7092a6d1544","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"e647f865-3e54-11e6-882f-4191dc6a0622","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[215],"tindex":"e647f866-3e54-11e6-882f-2ba077e12a92","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if ((list.isEmpty()) && (list.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[216,217],"tindex":"e647f867-3e54-11e6-882f-abbc86b780ee","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (b instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"e647f868-3e54-11e6-882f-85dc33a332d7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"e6481f79-3e54-11e6-882f-737f5f6d2115","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"e6481f7a-3e54-11e6-882f-7dca3bc6a208","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key instanceof java.lang.Double) {\n                {\n                    return key == null ? (getKey()) == null : key.equals(getKey());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"e6481f7b-3e54-11e6-882f-2f2b8e25f261","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"tindex":"e648468c-3e54-11e6-882f-c5415ea28daf","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1078","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[49,50,51,52,347,348,53,349,54,350,351,352,58,90,93,61,96,62,97,98,99],"tindex":"e648468d-3e54-11e6-882f-43eb3a538fbe","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"e6486d9e-3e54-11e6-882f-2bc998faf30f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(sub);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"toIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[],"tindex":"e6486d9f-3e54-11e6-882f-f1811fb5ee01","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"e64894b0-3e54-11e6-882f-fd168ef9e57d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[353,354,355],"tindex":"e64894b1-3e54-11e6-882f-e9a4a5aa2675","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index == 0) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[356],"tindex":"e64894b2-3e54-11e6-882f-713ea0e2d2fc","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[357],"tindex":"e64894b3-3e54-11e6-882f-b559ffa18194","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtInvocationImpl","sourcecode":"isSetValueChecking()"},"failures":[],"tindex":"e648bbc4-3e54-11e6-882f-09a7cdc586ee","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[358,359],"tindex":"e648bbc5-3e54-11e6-882f-13607723febb","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"e648bbc6-3e54-11e6-882f-7f98b93d513b","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index >= index) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[110],"tindex":"e648e2d7-3e54-11e6-882f-a73b05516ecc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"e648e2d8-3e54-11e6-882f-87c6b6086c3f","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"removeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"e64909e9-3e54-11e6-882f-a3687bb0e441","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((((count % 2) != 0) && ((delta - count) <= count)) && (k <= (delta + d))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"count","delta":"count","k":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[360],"tindex":"e64909ea-3e54-11e6-882f-d1afd7ada28c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,154,407,408,155,156,409,410,411,157,412,158,159,160,413,414,415,161,162,163,164,165,166,167,168,416,417,169,170,171,418,419,172,173,420,174,175,176,177,421,422,423,424,178,425,426,427,428,179,180,181,183,184,429,430,431,432,433,434,185,435,436,186,187,188,189,437,438,439,440,441,442,443,444,445,190,446,447,448,449,191,192,193,194,450,451,452,453,454],"tindex":"e64909eb-3e54-11e6-882f-7d9459498cc2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e64930fc-3e54-11e6-882f-8f834d4c5c7d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[455,456,457],"tindex":"e64930fd-3e54-11e6-882f-4b894ebf2444","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[458],"tindex":"e64930fe-3e54-11e6-882f-3d5af2e7e66c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > index) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"e649580f-3e54-11e6-882f-a928cd792a18","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[459,195],"tindex":"e6495810-3e54-11e6-882f-075ac369cca5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:367","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Set<E> set1, final java.util.Set<E> set2) {\n    if (set1 == null) {\n        {\n            addComposited(set1);\n            addComposited(set2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"tindex":"e6495811-3e54-11e6-882f-6f647fea094d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"e6497f22-3e54-11e6-882f-fdba2e535f5b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"e6497f23-3e54-11e6-882f-3f4c55aa9a89","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key instanceof java.util.Collection<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n                    } \n                    if ((int) == 0) {\n                        return null;\n                    } \n                    if (key == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 2;\n                                    return old;\n                                } \n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = int;\n                                    K = K;\n                                    V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 2;\n                                    return old;\n                                } \n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = int;\n                                    K = K;\n                                    V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 2;\n                                    return old;\n                                } \n                                return null;\n                            case 2 :\n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 1;\n                                    return old;\n                                } \n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = int;\n                                    K = K;\n                                    V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 1;\n                                    return old;\n                                } \n                                return null;\n                            case 1 :\n                                if ((K) == null) {\n                                    final V V = V;\n                                    int = 0;\n                                    K = null;\n                                    V = null;\n                                    int = 0;\n                                    return old;\n                                } \n                        }\n                    } else {\n                        if ((int) > 0) {\n                            final int int = key.hashCode();\n                            switch (int) {\n                                case 3 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 2;\n                                        return old;\n                                    } \n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = int;\n                                        K = K;\n                                        V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 2;\n                                        return old;\n                                    } \n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = int;\n                                        K = K;\n                                        V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 2;\n                                        return old;\n                                    } \n                                    return null;\n                                case 2 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 1;\n                                        return old;\n                                    } \n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = int;\n                                        K = K;\n                                        V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 1;\n                                        return old;\n                                    } \n                                    return null;\n                                case 1 :\n                                    if (((int) == hashCode) && (key.equals(K))) {\n                                        final V V = V;\n                                        int = 0;\n                                        K = null;\n                                        V = null;\n                                        int = 0;\n                                        return old;\n                                    } \n                            }\n                        } \n                    }\n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"key","o2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e649cd44-3e54-11e6-882f-8da86e069e50","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                        return tmpMap;\n                    } \n                    return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"e649f455-3e54-11e6-882f-5b02926f65c0","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"e649f456-3e54-11e6-882f-55118cae21eb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex >= hashIndex) {\n        {\n            if (hashIndex > hashIndex) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    (int)++;\n                    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n                    addEntry(entry, hashIndex);\n                    (int)++;\n                    checkCapacity();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex","index":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e64a1b67-3e54-11e6-882f-157ec8bb98bb","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[456],"tindex":"e64a1b68-3e54-11e6-882f-4d3f1ddf6994","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e64a1b69-3e54-11e6-882f-e9635eb84e76","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (a != null) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[457],"tindex":"e64a427a-3e54-11e6-882f-01e70c236308","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtVariableReadImpl","sourcecode":"first"},"failures":[],"tindex":"e64a427b-3e54-11e6-882f-ff6aebede25b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"includeDuplicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"e64a427c-3e54-11e6-882f-2f10de565e83","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[493],"tindex":"e64a698d-3e54-11e6-882f-6ba770379ded","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"e64a698e-3e54-11e6-882f-2121967d44b4","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if (inputCollection instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[494],"tindex":"e64a698f-3e54-11e6-882f-a7285845e0db","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll.isEmpty()) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[495],"tindex":"e64a90a0-3e54-11e6-882f-d5b117c8e15d","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start == 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[128,129],"tindex":"e64a90a1-3e54-11e6-882f-372ae9470351","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[496,497,498,125,499,500],"tindex":"e64a90a2-3e54-11e6-882f-71828e7056d1","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"e64a90a3-3e54-11e6-882f-11a6309086d0","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e64ab7b4-3e54-11e6-882f-ef4652782dc6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"e64ab7b5-3e54-11e6-882f-8b362254f799","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"e64ab7b6-3e54-11e6-882f-fd483afc32ab","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[501,502,503,504,505,107,506,507,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"e64ab7b7-3e54-11e6-882f-7bb1e36deff1","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"e64b05d8-3e54-11e6-882f-35e67b68a507","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(hashIndex)) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[],"tindex":"e64b05d9-3e54-11e6-882f-6597b6d9c5d7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"e64b05da-3e54-11e6-882f-a365c8fa0233","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[508,509],"tindex":"e64b05db-3e54-11e6-882f-2d83e9d352ed","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[357,510,511],"tindex":"e64b2cec-3e54-11e6-882f-d3276292eab7","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[218,512,513,514,515,516,220,517,518,519,520,234,521,522,238,523,242,245,524,525,526,527,261,528,529,530,531,532,533,534,269,535,277,536,537,538,288,539,540,541,542,543,544,545,292,295,546,547,548],"tindex":"e64b2ced-3e54-11e6-882f-6920dfa41dd7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[549],"tindex":"e64b2cee-3e54-11e6-882f-514e1af5f29c","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[550],"tindex":"e64b53ff-3e54-11e6-882f-918c63968951","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[551,552,553,554,555,556,557,558],"tindex":"e64b5400-3e54-11e6-882f-a331df3018dd","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[],"tindex":"e64b5401-3e54-11e6-882f-ff06a04e9de6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[559],"tindex":"e64b7b12-3e54-11e6-882f-49c27aa4a0fa","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239147249/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}