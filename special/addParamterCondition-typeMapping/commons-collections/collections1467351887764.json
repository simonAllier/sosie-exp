{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":179,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":402,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":484,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":471,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":615,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":265,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":374,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":601,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":60,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":238,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":322,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":327,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":202,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":427,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":320,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":361,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":394,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":138,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":512,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":195,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":148,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":184,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":497,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":128,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":547,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":614,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":47,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":45,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":507,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":570,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":231,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":306,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":344,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":0,"org.apache.commons.collections4.CollectionUtilsTest.transform1":120,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":445,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":568,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":135,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":550,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":216,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":453,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":572,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":8,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":463,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":376,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":334,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":205,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":486,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":204,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":26,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":302,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":99,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":198,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":531,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":555,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":59,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":189,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":260,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":273,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":599,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":557,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":275,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":180,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":285,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":607,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":146,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":297,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":41,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":271,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":279,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":82,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":502,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":483,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":329,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":37,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":576,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":586,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":282,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":496,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":495,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":446,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":493,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":580,"org.apache.commons.collections4.CollectionUtilsTest.union":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":16,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":268,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":98,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":211,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":315,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":530,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":433,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":449,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":203,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":447,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":594,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":193,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":546,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":226,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":199,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":357,"org.apache.commons.collections4.list.TreeListTest.testRemove":337,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":349,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":5,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":304,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":369,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":185,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":362,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":346,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":426,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":481,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":425,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":392,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":347,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":467,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":197,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":478,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":102,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":270,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":330,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":533,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":583,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":605,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":94,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":522,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":561,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":222,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":429,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":286,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":380,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":365,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":501,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":276,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":559,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":284,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":225,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":458,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":141,"org.apache.commons.collections4.list.TreeListTest.testListEquals":343,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":567,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":553,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":130,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":264,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":608,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":479,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":528,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":267,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":551,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":552,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":253,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":230,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":556,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":176,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":239,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":100,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":532,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":218,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":388,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":178,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":589,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":116,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":69,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":499,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":73,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":548,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.CollectionUtilsTest.exists":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":215,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":602,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":399,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":314,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":549,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":173,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":451,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":604,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":494,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":511,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":535,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":543,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":485,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":289,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":190,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":403,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":529,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":367,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":112,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":358,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":379,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":386,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":503,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors":3,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":250,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":237,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":381,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":247,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":295,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":464,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":172,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":415,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":455,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":454,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":35,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":569,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":566,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":312,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":149,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":72,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":540,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":407,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":7,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":6,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":324,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":291,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":310,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":36,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":241,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":319,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":439,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":11,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":371,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":542,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":508,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":565,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":509,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":280,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":293,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":534,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":385,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":110,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":573,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":421,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":519,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":70,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":125,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":313,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":64,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":65,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":287,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":356,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":554,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":136,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":545,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":577,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":251,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":348,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":395,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":183,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":2,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":292,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":518,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":423,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":585,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":129,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":370,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":620,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":621,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":228,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":352,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":80,"org.apache.commons.collections4.set.CompositeSetTest.testContains":541,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":234,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":412,"org.apache.commons.collections4.CollectionUtilsTest.isFull":619,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":296,"org.apache.commons.collections4.list.TreeListTest.testBug35258":340,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":448,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":317,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":145,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":363,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":114,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":417,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":338,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":171,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":418,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":524,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":539,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":161,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":590,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":151,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":131,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":323,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":106,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":152,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":378,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":441,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":57,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":63,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":443,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":610,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":387,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":492,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":153,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":200,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":571,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":71,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":201,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":581,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":390,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":318,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":452,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":40,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":187,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":609,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":133,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":127,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":372,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":414,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":299,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":305,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":383,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":613,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":516,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":182,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":258,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":42,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":169,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":308,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":97,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":520,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":560,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":140,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":354,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":592,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":617,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":593,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":14,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":266,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":432,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":411},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd2f9c8-3f4e-11e6-b09e-5bbc5b7a315d","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[0,1,2],"tindex":"ebd347e9-3f4e-11e6-b09e-530e01a8c2ea","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd347ea-3f4e-11e6-b09e-21239ebc4c3a","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:281","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd36efb-3f4e-11e6-b09e-39792b630a1d","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[3,4],"tindex":"ebd36efc-3f4e-11e6-b09e-09618495de13","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:137","type":"CtMethodImpl","sourcecode":"public int compare(final java.lang.Boolean b1, final java.lang.Boolean b2) {\n    if (b2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = b1.booleanValue();\n            final boolean boolean = b2.booleanValue();\n            return v1 ^ v2 ? v1 ^ (boolean) ? 1 : -1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"b2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"ebd36efd-3f4e-11e6-b09e-5db2a995656e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[31],"tindex":"ebd36efe-3f4e-11e6-b09e-35c3491406c9","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[32],"tindex":"ebd3960f-3f4e-11e6-b09e-09dffa4e2f32","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[33],"tindex":"ebd39610-3f4e-11e6-b09e-fde3b41073d9","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"ebd39611-3f4e-11e6-b09e-1f1eec667c35","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[96,97,98,99,100],"tindex":"ebd3bd22-3f4e-11e6-b09e-71dc7b3c69cd","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl"},"failures":[101,102,103,104,105,106,107],"tindex":"ebd3bd23-3f4e-11e6-b09e-490f067f002f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[108,109,110,111,112,113,114],"tindex":"ebd3bd24-3f4e-11e6-b09e-312a002c89fb","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[115],"tindex":"ebd3bd25-3f4e-11e6-b09e-6921227a5edf","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:446","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[116],"tindex":"ebd3e436-3f4e-11e6-b09e-1b43ab62c999","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl"},"failures":[],"tindex":"ebd3e437-3f4e-11e6-b09e-b5874578151a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null ? key == null : nextElement.equals(p)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"key","nextElement":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[117,118,119],"tindex":"ebd3e438-3f4e-11e6-b09e-f951de68abb9","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd40b49-3f4e-11e6-b09e-2f64aae0421a","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd40b4a-3f4e-11e6-b09e-bd4ffc19df6d","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[120],"tindex":"ebd40b4b-3f4e-11e6-b09e-7bd5ff7a40db","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd40b4c-3f4e-11e6-b09e-792a508a12c6","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bit)) {\n        {\n            return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bit"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd40b4d-3f4e-11e6-b09e-a13705f7b583","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd4325e-3f4e-11e6-b09e-2d679b5f0468","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entrySet":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd4325f-3f4e-11e6-b09e-bf17e148c69b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:199","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(fromIndexInclusive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndexInclusive , toIndexExclusive);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndexInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd43260-3f4e-11e6-b09e-2f10cce053aa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (null == obj) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                        return true;\n                    } \n                    if (!(obj instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[121,122,123,124],"tindex":"ebd45971-3f4e-11e6-b09e-f5d53fac6003","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[98],"tindex":"ebd45972-3f4e-11e6-b09e-6f9a92dac4ec","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate1 == null)) {\n                {\n                    if (predicate1 == null) {\n                        {\n                            @java.lang.SuppressWarnings(value = \"unchecked\")\n                            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n                            return nonePredicate;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtInvocationImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"ebd45973-3f4e-11e6-b09e-c7ffddca1c38","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"tindex":"ebd45974-3f4e-11e6-b09e-ddb1601a33c4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl"},"failures":[320],"tindex":"ebd48085-3f4e-11e6-b09e-43bc1f67498d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[321],"tindex":"ebd48086-3f4e-11e6-b09e-c98b1be7f53b","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[322,323,324],"tindex":"ebd48087-3f4e-11e6-b09e-db287fb6337d","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n                    E = null;\n                    boolean = false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd48088-3f4e-11e6-b09e-d5e64dc0410e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtBinaryOperatorImpl"},"failures":[325,326],"tindex":"ebd4a799-3f4e-11e6-b09e-3bc6c461e721","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd4a79a-3f4e-11e6-b09e-25f1d8f9c5f5","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[327],"tindex":"ebd4a79b-3f4e-11e6-b09e-e7d9c28ec51e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd4a79c-3f4e-11e6-b09e-8162d23a16f7","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[328,329,330,331],"tindex":"ebd4a79d-3f4e-11e6-b09e-8dadf6668450","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[332,333,334,335,336],"tindex":"ebd4a79e-3f4e-11e6-b09e-8b2268e0005e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"tindex":"ebd4ceaf-3f4e-11e6-b09e-a51e493d67dc","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[371],"tindex":"ebd4ceb0-3f4e-11e6-b09e-b35c2348a80f","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd4ceb1-3f4e-11e6-b09e-03d7a3135243","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd4ceb2-3f4e-11e6-b09e-c19a08eec24e","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl"},"failures":[372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390],"tindex":"ebd4f5c3-3f4e-11e6-b09e-f769dc245a46","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[391],"tindex":"ebd4f5c4-3f4e-11e6-b09e-a7eddafae066","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl"},"failures":[392],"tindex":"ebd4f5c5-3f4e-11e6-b09e-3b3dc764e5a3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd4f5c6-3f4e-11e6-b09e-d755d4cf5bcf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((y.getLeft(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rightChild":"y","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd51cd7-3f4e-11e6-b09e-c10cf428f158","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:170","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd51cd8-3f4e-11e6-b09e-7f05bb10e85b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if (start.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd543e9-3f4e-11e6-b09e-0de508695568","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtBinaryOperatorImpl"},"failures":[337,341,393,342,351,354,355,356,357,361,366,367,368,369],"tindex":"ebd543ea-3f4e-11e6-b09e-355a9b72d592","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"ebd543eb-3f4e-11e6-b09e-27d6769f7709","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl"},"failures":[406],"tindex":"ebd543ec-3f4e-11e6-b09e-873bdd8219f9","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index <= 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:257","type":"CtBinaryOperatorImpl"},"failures":[407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,403,495,496,497,498,499,500,501,404,405,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535],"tindex":"ebd56afd-3f4e-11e6-b09e-ddbc415bc782","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd56afe-3f4e-11e6-b09e-b9b18c287445","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl"},"failures":[536],"tindex":"ebd56aff-3f4e-11e6-b09e-a75d7f4532c6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd56b00-3f4e-11e6-b09e-8db89fc8c55e","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd56b01-3f4e-11e6-b09e-7fe8da7b63e3","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd56b02-3f4e-11e6-b09e-05d7e20f0494","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[537,538,539],"tindex":"ebd59213-3f4e-11e6-b09e-fdf3ff686c3d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.util.Enumeration) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"ebd59214-3f4e-11e6-b09e-cdb5bb53ab99","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd59215-3f4e-11e6-b09e-c59f9821a82e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd59216-3f4e-11e6-b09e-bda1dd010bd7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd59217-3f4e-11e6-b09e-a58da4990747","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n                    E = null;\n                    boolean = false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd59218-3f4e-11e6-b09e-db68fac08b00","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd5b929-3f4e-11e6-b09e-bbee436d273c","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == count) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","end":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd5b92a-3f4e-11e6-b09e-edc15b7eea5d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == entry) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd5b92b-3f4e-11e6-b09e-bf69afede94b","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd5b92c-3f4e-11e6-b09e-33ef816bc202","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (null == obj) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                        return true;\n                    } \n                    if (!(obj instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd5b92d-3f4e-11e6-b09e-6ff57a807571","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[563,564,565,566],"tindex":"ebd5e03e-3f4e-11e6-b09e-192dc324f8d3","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd5e03f-3f4e-11e6-b09e-b77dd449a288","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (((value == null) && (value == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"value","object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd5e040-3f4e-11e6-b09e-c90381fa0059","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate1 == null)) {\n                {\n                    if (predicate1 == null) {\n                        {\n                            @java.lang.SuppressWarnings(value = \"unchecked\")\n                            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n                            return nonePredicate;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl"},"failures":[567,568,569,570,571,572],"tindex":"ebd5e041-3f4e-11e6-b09e-394f08e15c7b","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592],"tindex":"ebd5e042-3f4e-11e6-b09e-3d2f9469ec81","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:415","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (value1 == value2) || (value1 == null ? false : value1.equals(value2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"value2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[125,126,130,127,128,129,132,133,134,135,136,137,131,145,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,168,169,170,173,174,175,176,177,178,179,180,181,172,182,183,184,192,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"ebd60753-3f4e-11e6-b09e-3f508ea25d26","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl"},"failures":[593,594],"tindex":"ebd60754-3f4e-11e6-b09e-65cf24809db5","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl"},"failures":[595,227,228,596,283,284],"tindex":"ebd60755-3f4e-11e6-b09e-5fb5cf2805d9","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > count) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl"},"failures":[597],"tindex":"ebd60756-3f4e-11e6-b09e-c556d99ccf11","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[598],"tindex":"ebd60757-3f4e-11e6-b09e-d7618aab2cfd","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd62e68-3f4e-11e6-b09e-e99c2313d556","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[570,441,456,470,484,599,600,528],"tindex":"ebd62e69-3f4e-11e6-b09e-2f79dca2a45d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd62e6a-3f4e-11e6-b09e-8553270b6832","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd62e6b-3f4e-11e6-b09e-7f4936a9880b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl"},"failures":[601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"ebd62e6c-3f4e-11e6-b09e-ffd66737b52e","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd62e6d-3f4e-11e6-b09e-f97514a711ad","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[617],"tindex":"ebd6557e-3f4e-11e6-b09e-19abc5f0e3bc","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[618],"tindex":"ebd6557f-3f4e-11e6-b09e-bfa072bdedbb","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd65580-3f4e-11e6-b09e-df8e829a9b15","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd65581-3f4e-11e6-b09e-918f86fe1ea1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex == (-1)) {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(sub);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"toIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl"},"failures":[619],"tindex":"ebd65582-3f4e-11e6-b09e-c9bfc6b17685","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[620],"tindex":"ebd65583-3f4e-11e6-b09e-1df30d42516b","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[416],"tindex":"ebd67c94-3f4e-11e6-b09e-db32ec932507","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (!(key1 instanceof java.lang.Comparable)) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd6a3a5-3f4e-11e6-b09e-4dc2fa74931e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"count","bound":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[621,446,447],"tindex":"ebd6a3a6-3f4e-11e6-b09e-4f9a2431565a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[622],"tindex":"ebd6a3a7-3f4e-11e6-b09e-69524c924b9f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtInvocationImpl"},"failures":[],"tindex":"ebd6a3a8-3f4e-11e6-b09e-4b1b826df493","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n    if ((queue.size()) > 0) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final E[] E[] = ((E[])(queue.toArray()));\n        queue.clear();\n        for (final E E : values) {\n            decorated.decorated().add(transformer.transform(value));\n        }\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd6a3a9-3f4e-11e6-b09e-fd1167c2e6ac","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    return java.util.Map<V, K>.get(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd6caba-3f4e-11e6-b09e-dd505b9bc598","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ebd6cabb-3f4e-11e6-b09e-49e60ae22a6f","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate1 == null)) {\n                {\n                    if (predicate1 == null) {\n                        {\n                            @java.lang.SuppressWarnings(value = \"unchecked\")\n                            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n                            return nonePredicate;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349090331/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}