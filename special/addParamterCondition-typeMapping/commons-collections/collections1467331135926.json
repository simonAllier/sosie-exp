{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":1,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":680,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":345,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":610,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":457,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":842,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":417,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":661,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":230,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":108,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":782,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":396,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":20,"org.apache.commons.collections4.CollectionUtilsTest.collect":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":899,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":915,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":299,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":113,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":884,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":67,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":520,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":719,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":336,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":641,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":77,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":239,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":331,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":871,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":15,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":56,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":817,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":54,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":181,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":646,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":844,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":607,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":632,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":517,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":885,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":111,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":162,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":30,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":655,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":829,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":913,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":498,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":375,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":730,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":791,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":276,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":688,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":687,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":116,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":686,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":208,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":101,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":784,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":75,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":854,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":617,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":323,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":760,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":151,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":177,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":659,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":238,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":344,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":552,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":614,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":595,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":279,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":314,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":533,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":346,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":172,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":388,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":781,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":557,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":558,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":556,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":176,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":576,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":647,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":312,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":858,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":898,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":874,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":864,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":367,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":631,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":774,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":206,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":96,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":212,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":736,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":835,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":830,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":129,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":449,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":705,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":805,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":589,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":242,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":422,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":439,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":29,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":231,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":715,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":235,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":184,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":672,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":628,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":311,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":853,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":763,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":122,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":566,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":386,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":273,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":889,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":759,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":124,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":326,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":198,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":904,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":611,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":304,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":360,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":525,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":86,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":149,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":894,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":839,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":216,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":857,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":856,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":562,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":855,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":667,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":164,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":227,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":716,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":171,"org.apache.commons.collections4.CollectionUtilsTest.exists":812,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":509,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":608,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":837,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":505,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":254,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":717,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":627,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":726,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":893,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":381,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":640,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":285,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":573,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":682,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":883,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":402,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":549,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":223,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":723,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":603,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":744,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":300,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":713,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":866,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":494,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":444,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":902,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":364,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":846,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":215,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":358,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":355,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":332,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":435,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":788,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":581,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":808,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":504,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":462,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":234,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":142,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":178,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":550,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":236,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":205,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":764,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":76,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":575,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":131,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":882,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":590,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":619,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":704,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":707,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":906,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":801,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":380,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":339,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":625,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":709,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":365,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":451,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":261,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":483,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":790,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":721,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":875,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":428,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":65,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":393,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":419,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":881,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":675,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":74,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":689,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":201,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":834,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":900,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":196,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":587,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":89,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":99,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":179,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":185,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":691,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":872,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":343,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":807,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":319,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":660,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":725,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":530,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":190,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":508,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":397,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":630,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":197,"org.apache.commons.collections4.CollectionUtilsTest.find":404,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":373,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":252,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":443,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":168,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":652,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":502,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":683,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":426,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":545,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":154,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":479,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":431,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":618,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":644,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":167,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":685,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":761,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":258,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":465,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":678,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":568,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":668,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":214,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":783,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":905,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":665,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":711,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":248,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":13,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":3,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":289,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":69,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":291,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":693,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":826,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":592,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":724,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":778,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":873,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":548,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":810,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":24,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":822,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":599,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":897,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":753,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":564,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":768,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":353,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":245,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":654,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":806,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":535,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":747,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":521,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":256,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":26,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":543,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":841,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":890,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":497,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":847,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":896,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":217,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":714,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":169,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":438,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":664,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":832,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":161,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":785,"org.apache.commons.collections4.CollectionUtilsTest.transform2":651,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":794,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":210,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":448,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":147,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":546,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":460,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":446,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":859,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":284,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":622,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":771,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":720,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":292,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":766,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":809,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":560,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":528,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":643,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":840,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":738,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":845,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":755,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":368,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":539,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":303,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":183,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":756,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":193,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":283,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":596,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":731,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":597,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":850,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":765,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":310,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":722,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":814,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":698,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":241,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":743,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":623,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":100,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":301,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":795,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":901,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":209,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":827,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":202,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":225,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":318,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":876,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":828,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":574,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":308,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":25,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":421,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":712,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":362,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":31,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":670,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":780,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":554,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":553,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":270,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":203,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":555,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":274,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":277,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":869,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":868,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":867,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":359,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":257,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":588,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":799,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":221,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":570,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":222,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":408,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":677,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":657,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":748,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":861,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":629,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":870,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":886,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":195,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":244,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":880,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":441,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":734,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":772,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":571,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":732,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":733,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":754,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":220,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":792,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":803,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":916,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":370,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":296,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":335,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":746,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":294,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":860,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":676,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":219,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":295,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":46,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":349,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":293,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":542,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":737,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":133,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":249,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":366,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":914,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":389,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":863,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":329,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":139,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":703,"org.apache.commons.collections4.ListUtilsTest.testHashCode":297,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":501,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":820,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":503,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":187,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":120,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":433,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":912,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":325,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":488,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":776,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":361,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":879,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":434,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":878,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":877,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":843,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":490,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":584,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":695,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":379,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":645,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":263,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":405,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":813,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":341,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":218,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":253,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":259,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":769,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":518,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":819,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":636,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":637,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":638,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":745,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":580,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":699,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":159,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":286,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":811,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":415,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":567,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":911,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":226,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":862,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":128,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":583,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":121,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":679,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":420,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":280,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":793,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":892,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":836,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":620,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":237,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":250,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":278,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":281,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":334,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":394,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":749,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":64,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":728,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":536,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":321,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":666,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":903,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":673,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":265,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":411,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":681,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":410,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":849,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":848,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":57,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":117,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":322,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":621,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":789,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":385,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":409,"org.apache.commons.collections4.set.CompositeSetTest.testContains":697,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":333,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":478,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":825,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":324,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":109,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":403,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":105,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":538,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":804,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":268,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":706,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":909,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":577,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":453,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":427,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":797,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":907,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":742,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":750,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":316,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":118,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":910,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":586,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":694,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":887,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":240,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":378,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":802,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":59,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":97,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":287,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":739,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":741,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":740,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":119,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":818,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":865,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":642,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":390,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":547,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":134,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":669,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":684,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":112,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":779,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":383,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":541,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":540,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":752,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":146,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":888,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":489,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":800,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":634,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":320,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":635,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":260,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":633,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":348,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":816,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":255,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":125,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":656,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":306,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":578,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":138,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":384,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":19,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":342,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":824,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":798,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":55,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":579,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":104,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":233,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":616,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":350,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":352,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":612,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":624,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":298,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":440,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":387,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":735,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":851,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":702,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":356,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":908,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":917,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":354,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":787,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":762,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":302,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":838,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":831,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":288,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":290,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":442,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":775,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":309,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":852,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":492,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":815,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":823},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[0,1],"tindex":"9aff4c57-3f1e-11e6-a81b-8b6175072a38","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b000fa8-3f1e-11e6-a81b-93e8e82e61c0","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (null != key) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,0,1,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"9b0036b9-3f1e-11e6-a81b-799b9d1ceff9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b005dca-3f1e-11e6-a81b-c7406cab0b35","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"9b005dcb-3f1e-11e6-a81b-059102cba53c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[139],"tindex":"9b0084dc-3f1e-11e6-a81b-b7b729f7dfdf","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b0084dd-3f1e-11e6-a81b-dfe64d5180c3","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b00abee-3f1e-11e6-a81b-21ca3cabb11d","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b00abef-3f1e-11e6-a81b-4bd82a45de35","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            if ((entry.getValue()) == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"9b00d300-3f1e-11e6-a81b-73e452bfc348","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[277],"tindex":"9b00fa11-3f1e-11e6-a81b-a758de88e411","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"9b012122-3f1e-11e6-a81b-5d79e56f7abc","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if ((label instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b014833-3f1e-11e6-a81b-1fef5a2e9893","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[296],"tindex":"9b016f44-3f1e-11e6-a81b-ad4ec7d97024","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[297],"tindex":"9b016f45-3f1e-11e6-a81b-29ffddbcd929","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if ((list.size()) == 0) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b016f46-3f1e-11e6-a81b-655a04c81efc","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[298],"tindex":"9b019657-3f1e-11e6-a81b-958a7b2cb515","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9b019658-3f1e-11e6-a81b-8def44d57e72","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl"},"failures":[299],"tindex":"9b019659-3f1e-11e6-a81b-0dbe9e5c7dcc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl"},"failures":[300,301,157,199,302,303,213,304,229,305,246,306],"tindex":"9b01bd6a-3f1e-11e6-a81b-391d1adbf99a","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl"},"failures":[4,11,12,13,14,15,16,18,19,21,22,23,25,26,28,31,32,36,37,38,39,40,41,42,45,48,49,50,51,52,57,64,65,66,68,69,71,72,73,75,76,81,82,83,84,91,93,94,95],"tindex":"9b01bd6b-3f1e-11e6-a81b-fb60510d906d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b01e47c-3f1e-11e6-a81b-3fdf56385244","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[300],"tindex":"9b01e47d-3f1e-11e6-a81b-2b35689ec516","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl"},"failures":[307],"tindex":"9b020b8e-3f1e-11e6-a81b-93237280c0b0","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection == null) {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b020b8f-3f1e-11e6-a81b-0f6690e35a39","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[308,309],"tindex":"9b020b90-3f1e-11e6-a81b-098952a6849a","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[],"tindex":"9b0232a1-3f1e-11e6-a81b-7d26f2ccac72","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl"},"failures":[310,311,312,313,314,315,316,317],"tindex":"9b0232a2-3f1e-11e6-a81b-b795599d0d6d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"9b0259b3-3f1e-11e6-a81b-ff5c93bea6d9","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"9b0259b4-3f1e-11e6-a81b-994f93684f0d","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b0259b5-3f1e-11e6-a81b-999aefb37c41","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o != null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtInvocationImpl"},"failures":[],"tindex":"9b0280c6-3f1e-11e6-a81b-b7fc1b83e18d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(prior, p)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"prior","right":"prior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[387,388,389,390,391,392,393,394,395,277,396,397,398,399,400,401,402,403],"tindex":"9b0280c7-3f1e-11e6-a81b-0148ef2bdf35","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[404],"tindex":"9b02a7d8-3f1e-11e6-a81b-9b873ff5eaa4","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b02a7d9-3f1e-11e6-a81b-d5520d437479","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl"},"failures":[405,406,407,408,409,410,411,412,413,414,105,415,416,108,110,111,417,121,126,127,130,131,132,133,134,418,135,138],"tindex":"9b02a7da-3f1e-11e6-a81b-a3dfa061e0bf","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b02ceeb-3f1e-11e6-a81b-ad196d349e60","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[419,420],"tindex":"9b02ceec-3f1e-11e6-a81b-f9d5cf2b5e7d","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection == null) || (inputCollection == null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"inputCollection","b":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[421],"tindex":"9b02f5fd-3f1e-11e6-a81b-f5d00fb95df9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b02f5fe-3f1e-11e6-a81b-9706faa21291","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[422,423,424,425,426,427,142,143,144,300],"tindex":"9b02f5ff-3f1e-11e6-a81b-8182d7b50648","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl"},"failures":[428],"tindex":"9b02f600-3f1e-11e6-a81b-e7e42270d786","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b031d11-3f1e-11e6-a81b-f3dee19aea3a","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl"},"failures":[429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650],"tindex":"9b031d12-3f1e-11e6-a81b-65da31741cb7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl"},"failures":[],"tindex":"9b034423-3f1e-11e6-a81b-3d9716b9e8b4","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[651,652,653],"tindex":"9b034424-3f1e-11e6-a81b-9db5e71d3ca0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[654,655],"tindex":"9b036b35-3f1e-11e6-a81b-877f79e1a6df","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl"},"failures":[656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681],"tindex":"9b039246-3f1e-11e6-a81b-45b6d569f726","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((coll.isEmpty()) && (coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"coll","pendingInsertions":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl"},"failures":[682],"tindex":"9b039247-3f1e-11e6-a81b-c37c0c35a73e","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 0) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[683,684,685,686,687,688,689,690,691,692,693,694],"tindex":"9b039248-3f1e-11e6-a81b-91e107e5e59b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b03b959-3f1e-11e6-a81b-f584e81b1ec4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,411,103],"tindex":"9b03b95a-3f1e-11e6-a81b-e1003316d032","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b03b95b-3f1e-11e6-a81b-7b73e3007342","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b03e06c-3f1e-11e6-a81b-21d442f41911","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b03e06d-3f1e-11e6-a81b-d194c21f0f1c","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl"},"failures":[278,280,281,286,287,288,289,290,291,292,293,294,295],"tindex":"9b03e06e-3f1e-11e6-a81b-d5a19db85bbc","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (indent > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < indent ; i++) {\n                out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[774],"tindex":"9b04077f-3f1e-11e6-a81b-ab36d298d823","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                {\n                    return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[775,776,196,777,197,778,198,779,199,780,781,782,783,784,785,302,786,200,787,788,789,790,791,792,793,794],"tindex":"9b040780-3f1e-11e6-a81b-b3692957a8d8","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"9b040781-3f1e-11e6-a81b-05ee1d5d1bc6","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b042e92-3f1e-11e6-a81b-735c02d019bd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[174,192,795,273],"tindex":"9b042e93-3f1e-11e6-a81b-419dbe3270ef","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b0455a4-3f1e-11e6-a81b-09f314fa69aa","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl"},"failures":[796],"tindex":"9b0455a5-3f1e-11e6-a81b-1bd367c803b1","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[797,798,799,800,801],"tindex":"9b047cb6-3f1e-11e6-a81b-f716a48e5e60","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex == (-1)) {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl"},"failures":[802],"tindex":"9b047cb7-3f1e-11e6-a81b-87e85c5ae63d","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[803],"tindex":"9b047cb8-3f1e-11e6-a81b-8f9cce489673","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b04a3c9-3f1e-11e6-a81b-c95e0d337429","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b04a3ca-3f1e-11e6-a81b-fd53bd58ec01","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"9b04cadb-3f1e-11e6-a81b-bdeecf203d3a","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[805],"tindex":"9b04cadc-3f1e-11e6-a81b-b1384810855b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b04cadd-3f1e-11e6-a81b-759879ed1984","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[54],"tindex":"9b04f1ee-3f1e-11e6-a81b-bbcd02a63a2f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[806,807,808],"tindex":"9b04f1ef-3f1e-11e6-a81b-7db79347f7f1","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b04f1f0-3f1e-11e6-a81b-27e6d0af23c1","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list == null) || (list == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[809],"tindex":"9b051901-3f1e-11e6-a81b-ab8736f9cf6b","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b051902-3f1e-11e6-a81b-c741945f465d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1281","type":"CtMethodImpl","sourcecode":"private void insertValue(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> newNode) throws java.lang.IllegalArgumentException {\n    if (newNode != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n            while (true) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(newNode.getValue(), node.getValue());\n                if (cmp == 0) {\n                    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (newNode.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n                } else if (cmp < 0) {\n                    if ((node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setLeft(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                } else {\n                    if ((node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setRight(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yFormerParent":"newNode"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b056723-3f1e-11e6-a81b-2b40442aa79a","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[735,743,762,764],"tindex":"9b056724-3f1e-11e6-a81b-d3c39f386f72","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Object[]) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b058e35-3f1e-11e6-a81b-a3ea354343bf","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list == null) || (list == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b058e36-3f1e-11e6-a81b-f96e74f3b741","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl"},"failures":[810,811],"tindex":"9b058e37-3f1e-11e6-a81b-ab69d011bee9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b05b548-3f1e-11e6-a81b-8b2c60cdfc38","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtInvocationImpl"},"failures":[],"tindex":"9b05b549-3f1e-11e6-a81b-fd878922f59c","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl"},"failures":[812],"tindex":"9b05b54a-3f1e-11e6-a81b-c38f6f097ac4","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[429,431,444,813,814,815,452,453,455,456,457,460,462,465,466,493,494,496,497,498,501,503,506,507,535,536,538,539,540,543,545,548,549,816,817,575,576,578,579,580,583,585,588,589,818,819,820,821,822,823,824,825,826,615,616,618,619,620,623,629,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844],"tindex":"9b05b54b-3f1e-11e6-a81b-9b947cc12946","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (null == key) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl"},"failures":[429,431,436,437,440,442,444,445,446,813,814,845,846,847,848,815,849,850,452,453,455,456,457,460,462,465,466,473,474,475,479,482,483,484,485,486,493,494,496,497,498,501,503,506,507,816,817,575,576,578,579,580,583,585,588,589,596,597,598,602,605,606,607,608,609,851,852,853,854,818,819,820,821,822,823,824,825,826,855,856,857,858,859,860,861,862,863,864,865,615,616,618,619,620,623,625,628,629,636,637,638,642,645,646,647,648,649,866,827,828,829,830,831,832,833,834,835,867,868,869,870,871,872,873,874,875,876,836,837,838,839,840,841,842,843,844,877,878,879,880,881,882,883,884,885],"tindex":"9b05dc5c-3f1e-11e6-a81b-254e97994904","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl"},"failures":[886,887,888,889,890,891,892,893,894,895,896],"tindex":"9b06036d-3f1e-11e6-a81b-a12b63b7fcc3","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[897,898,899,900,901,902,903,904,905,906,907,908],"tindex":"9b06036e-3f1e-11e6-a81b-c59132dfce28","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b06036f-3f1e-11e6-a81b-95dcde5970ee","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n == 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtInvocationImpl"},"failures":[909,910],"tindex":"9b062a80-3f1e-11e6-a81b-bd902f7dd096","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node.isEmpty()) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl"},"failures":[911],"tindex":"9b062a81-3f1e-11e6-a81b-e998b998221f","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start <= start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"start","newCapacity":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b062a82-3f1e-11e6-a81b-6dd8c83fb9e7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                {\n                    return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl"},"failures":[912],"tindex":"9b065193-3f1e-11e6-a81b-61bec2de28e6","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:204","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor(final int fromIndex) {\n    if (fromIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>(org.apache.commons.collections4.list.CursorableLinkedList.this , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b065194-3f1e-11e6-a81b-c720f56b6d94","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b065195-3f1e-11e6-a81b-737db5f5c4de","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b0678a6-3f1e-11e6-a81b-b5625d8fbaac","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            if ((entry.getValue()) == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b0678a7-3f1e-11e6-a81b-5de5229bf61d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object != null) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl"},"failures":[913,914,915],"tindex":"9b0678a8-3f1e-11e6-a81b-1d141c036e8f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9b069fb9-3f1e-11e6-a81b-350637b03d86","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl"},"failures":[811,810,866,916,917],"tindex":"9b069fba-3f1e-11e6-a81b-31f4ce36467b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467325692496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}