{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":231,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":304,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":696,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":861,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":496,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":523,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsSelfHashCode":650,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":608,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":94,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":419,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":423,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":406,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":425,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":424,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":374,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":529,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":777,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":720,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":880,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":44,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":502,"org.apache.commons.collections4.CollectionUtilsTest.get":832,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":284,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":214,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":864,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":451,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":154,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":559,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":232,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":90,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":336,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":32,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":873,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.CollectionUtilsTest.select":828,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":700,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":715,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":786,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":924,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":275,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":258,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":721,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":526,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":821,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":488,"org.apache.commons.collections4.CollectionUtilsTest.intersection":391,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":497,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":890,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":104,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":218,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":434,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":95,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":321,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":628,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":129,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":860,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":303,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":671,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":796,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":454,"org.apache.commons.collections4.map.CompositeMapTest.testPut":395,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":52,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":769,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":260,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":457,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":839,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":908,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":102,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":883,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":678,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":744,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":257,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":729,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":364,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":915,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":754,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":569,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":201,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":589,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":600,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":749,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":750,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":748,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":345,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":724,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":117,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":808,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":674,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":253,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":274,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":635,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":514,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":401,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":604,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":338,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":617,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":887,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":240,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":877,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":297,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":891,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":837,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":771,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":849,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":901,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":476,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":358,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":779,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":436,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":697,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":234,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":235,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":271,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":648,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":768,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":469,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":782,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":162,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":911,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":534,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":659,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":759,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":897,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":221,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":47,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":909,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":255,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":804,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":403,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":63,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":743,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":789,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":690,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":544,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":84,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":30,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":629,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":803,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":802,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":755,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":801,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":448,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":853,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":930,"org.apache.commons.collections4.map.LRUMapTest.testReset":763,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":525,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":9,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":644,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":473,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":910,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":458,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":825,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":687,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":931,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":270,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":510,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":683,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":431,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":859,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":10,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":283,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":773,"org.apache.commons.collections4.map.LinkedMapTest.testReset":672,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":918,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":371,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":612,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":719,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":787,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":614,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":573,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":741,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":807,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":899,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":217,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":888,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":902,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":373,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":583,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":893,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":209,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":806,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":198,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":483,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":660,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":521,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":912,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":149,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":871,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":447,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":711,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":189,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":328,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":350,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":562,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":309,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":411,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":480,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":851,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":742,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":826,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":302,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":866,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":191,"org.apache.commons.collections4.map.HashedMapTest.testClone":294,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":838,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":163,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":53,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":344,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":636,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":430,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":540,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":718,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":359,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":630,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":669,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":262,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":28,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":16,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":184,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":444,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":181,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":591,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":874,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":268,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":927,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":896,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":487,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":705,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":704,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":557,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":400,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":706,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":298,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":753,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":881,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":89,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":682,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":831,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":331,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":492,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":863,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":43,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":408,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":844,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":904,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":882,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":572,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":717,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":716,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":841,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":673,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":623,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":51,"org.apache.commons.collections4.map.LinkedMapTest.testClone":676,"org.apache.commons.collections4.ListUtilsTest.testSelect":843,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":895,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":858,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":836,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":905,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":210,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":228,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":848,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":77,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":202,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":778,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":842,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":67,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":516,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":315,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":774,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":765,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":311,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":222,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":12,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":58,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":865,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":695,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":723,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":60,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":59,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":4,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":5,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":609,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":273,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":593,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":775,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":620,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":197,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":847,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":463,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":462,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":548,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":833,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":737,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":625,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":327,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":185,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":684,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":415,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":545,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":261,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":288,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":530,"org.apache.commons.collections4.map.LRUMapTest.testLRU":764,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":885,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":610,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":819,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":312,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":639,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":761,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":477,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":500,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":538,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":661,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":797,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":613,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":413,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":301,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":574,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":75,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":795,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":29,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":389,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":46,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":563,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":361,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":653,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":655,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":740,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":208,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":805,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":710,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":98,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":581,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":368,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":323,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":153,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":624,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":757,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":913,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":171,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":621,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":435,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":852,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":239,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":835,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":145,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":727,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":892,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":688,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":692,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":823,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":735,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":694,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":606,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":663,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":507,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":817,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":929,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":422,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":855,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":420,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":206,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":818,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":870,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":475,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":41,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":869,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":402,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":296,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":556,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":554,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":372,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":738,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":571,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":810,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":200,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":811,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":265,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":827,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":165,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":752,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":722,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":539,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":816,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":287,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":585,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":691,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":731,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":83,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":380,"org.apache.commons.collections4.map.CompositeMapTest.testGet":394,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":416,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":906,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":917,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":926,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":693,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":762,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":367,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":667,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":224,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":333,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":656,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":412,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":384,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":3,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":702,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":456,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":226,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.CollectionUtilsTest.union":390,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":900,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":555,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":216,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":343,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":508,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":549,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":99,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":652,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":928,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":105,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":499,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":746,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":91,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":894,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":747,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":237,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":698,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":236,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":875,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":179,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":898,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":340,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":115,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":113,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":560,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":146,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":813,"org.apache.commons.collections4.map.LRUMapTest.testClone":772,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":713,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":272,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":703,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":637,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":776,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":414,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":846,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":243,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":568,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":324,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":845,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":433,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":714,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":195,"org.apache.commons.collections4.list.TreeListTest.testListEquals":872,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":97,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":341,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":131,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":132,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":489,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":429,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":474,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":494,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":169,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":478,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":879,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":182,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":862,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":176,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":505,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":144,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":812,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":225,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":923,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":121,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":398,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":577,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":922,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":397,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":734,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":594,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":712,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":542,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":601,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":815,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":925,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":783,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":829,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":96,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":305,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":565,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":564,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":187,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":662,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":175,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":522,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":486,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":535,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":618,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":437,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":658,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":550,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":418,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":709,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":25,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":188,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":701,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":708,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":707,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":699,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":611,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalFullCollectionExists":645,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":381,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":513,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":889,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":654,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":177,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":172,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":332,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":824,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":387,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":781,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":399,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":281,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":376,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":349,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":385,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":919,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":657,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":126,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":760,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":791,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":814,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalEmptyCollectionExists":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":352,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":834,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":479,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":314,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":686,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":263,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":439,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":914,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":440,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":441,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":916,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":147,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":605,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":886,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":42,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":876,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":512,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":728,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":830,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":481,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":227,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":35,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":532,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":186,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":634,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":335,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":455,"org.apache.commons.collections4.set.CompositeSetTest.testContains":383,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":22,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":325,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":793,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":878,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":116,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":524,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":17,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":615,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":520,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":730,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":491,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":346,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":300,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":820,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":393,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":850,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":141,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":148,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":903,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":638,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":547,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":670,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":57,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":37,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":758,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":840,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":640,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":138,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":140,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":139,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":567,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":533,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":780,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":432,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":438,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":252,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":854,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":286,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":251,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":602,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":739,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":543,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":527,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":106,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":733,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":87,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":582,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":405,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":641,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":245,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":792,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":590,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":857,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":446,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":276,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":460,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":536,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":461,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":107,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":269,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":347,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":465,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":551,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":6,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":317,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":205,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":558,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":482,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":790,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":178,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":348,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":519,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":259,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":256,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":267,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":509,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":868,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":194,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":599,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":528,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":766,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":907,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":867,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":800,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":822,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":417,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":798,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":799,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":1,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":167,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":503,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":161,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":689,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":220,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":884,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":920,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":196,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":485,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":921,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":627,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":767,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":856,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":665,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":632,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":788},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a336565c-3f41-11e6-947c-ddf611609b5d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a336cb8d-3f41-11e6-947c-0316fb81ba62","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (null == key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"a336cb8e-3f41-11e6-947c-ffc2b7c375f9","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"a336cb8f-3f41-11e6-947c-5d0d340b3ca2","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[2,3],"tindex":"a336cb90-3f41-11e6-947c-d1e9d7df2902","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[4,5,6,7,8,9,10],"tindex":"a336f2a1-3f41-11e6-947c-1343dc6d4488","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl"},"failures":[11],"tindex":"a336f2a2-3f41-11e6-947c-812d8f6364f3","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a336f2a3-3f41-11e6-947c-e1c2846f7e1f","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33719b4-3f41-11e6-947c-8bc19c89ac37","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33719b5-3f41-11e6-947c-c9a834d60758","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (((otherOffsetInBits % lengthInBits) != 0) || ((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"otherOffsetInBits","lengthInBits":"offsetInBits","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33740c6-3f41-11e6-947c-a1932bddc7f6","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl"},"failures":[12,13,14],"tindex":"a33740c7-3f41-11e6-947c-4b1211948de9","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            if (count == 0) {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().add(object, count);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33740c8-3f41-11e6-947c-2d78bd4f0333","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[],"tindex":"a33767d9-3f41-11e6-947c-434a66c81be2","method":{"position":"org.apache.commons.collections4.list.LazyList:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(fromIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.LazyList<E>(sub , org.apache.commons.collections4.Factory<? extends E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[15,16],"tindex":"a33767da-3f41-11e6-947c-a30da5b85c54","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[17],"tindex":"a33767db-3f41-11e6-947c-f5ab8f05c3f2","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33767dc-3f41-11e6-947c-e184938ed5e4","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[18],"tindex":"a3378eed-3f41-11e6-947c-ed6cf90c4b2d","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3378eee-3f41-11e6-947c-c96246134deb","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3378eef-3f41-11e6-947c-15a7dc91b0ca","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl"},"failures":[19,20,21],"tindex":"a3378ef0-3f41-11e6-947c-9b6bb1c26089","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl"},"failures":[22,23,24,25,26,27,28,29,30],"tindex":"a3378ef1-3f41-11e6-947c-cd193173062a","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a337b602-3f41-11e6-947c-2d3789edb43d","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a337b603-3f41-11e6-947c-735287cf6cea","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"a337b604-3f41-11e6-947c-75c2aa54eca1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtBinaryOperatorImpl"},"failures":[31,32,33,34,35,36,39,40,41,42,43,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,78,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"a337dd15-3f41-11e6-947c-2f92b2495757","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtBinaryOperatorImpl"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,19,143,144,145,146,147,148,149,150,151,152,153,154,155,156,20,157,158,159,160,21,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"a337dd16-3f41-11e6-947c-35130b5e4521","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl"},"failures":[174],"tindex":"a337dd17-3f41-11e6-947c-db8579ffc936","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a337dd18-3f41-11e6-947c-b71ca0587240","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl"},"failures":[175,176,177],"tindex":"a3380429-3f41-11e6-947c-95fa011d0897","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < (index / 2)) {\n        {\n            if (index < 1) {\n                {\n                    validate(object);\n                    return decorated().set(index, object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a338042a-3f41-11e6-947c-35bf453b3111","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a338042b-3f41-11e6-947c-3149ad3d41fa","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl"},"failures":[178,179,180,181],"tindex":"a338042c-3f41-11e6-947c-df83b01cbda2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond <= 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"beyond"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a338042d-3f41-11e6-947c-abb7ded79b0d","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[182],"tindex":"a338042e-3f41-11e6-947c-4bf694cdb82b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,182,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380],"tindex":"a3382b3f-3f41-11e6-947c-9b2df124a2ab","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:535","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401],"tindex":"a3382b40-3f41-11e6-947c-bf4ed38259b7","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if ((count - count) > (count - count)) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"count","end2":"count","end1":"count","start2":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[],"tindex":"a3382b41-3f41-11e6-947c-7bb40918aebb","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if (map.isEmpty()) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3385252-3f41-11e6-947c-f17ffbe10987","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if ((retain.size()) < (retain.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"retain","coll1":"retain"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3385253-3f41-11e6-947c-132f9bd1dce6","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[45,46,48,49,50,51,53,402,403,92,93,94,95,96,97,98,100,102,105,106,404,405,406,407],"tindex":"a3385254-3f41-11e6-947c-dd8eec61a706","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[207,208,209,182,26],"tindex":"a3385255-3f41-11e6-947c-6f8292b3d0ec","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3385256-3f41-11e6-947c-0717948103eb","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3387967-3f41-11e6-947c-5bb260a70190","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[408],"tindex":"a3387968-3f41-11e6-947c-f9311f5d0ae5","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl"},"failures":[87,82,84,85,88,89,90,102,106,113,114,116,119,120,123,124,125,126,127],"tindex":"a3387969-3f41-11e6-947c-db082c8b870e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:948","type":"CtMethodImpl","sourcecode":"private void doRedBlackDelete(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> deletedNode) {\n    if (deletedNode == null) {\n        {\n            for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n                if (((deletedNode.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n                    swapPosition(nextGreater(deletedNode, dataElement), deletedNode, dataElement);\n                } \n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (deletedNode.getLeft(dataElement)) != null ? deletedNode.getLeft(dataElement) : deletedNode.getRight(dataElement);\n                if (replacement != null) {\n                    replacement.setParent(deletedNode.getParent(dataElement), dataElement);\n                    if ((deletedNode.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = replacement;\n                    } else if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                        deletedNode.getParent(dataElement).setLeft(replacement, dataElement);\n                    } else {\n                        deletedNode.getParent(dataElement).setRight(replacement, dataElement);\n                    }\n                    deletedNode.setLeft(null, dataElement);\n                    deletedNode.setRight(null, dataElement);\n                    deletedNode.setParent(null, dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                        doRedBlackDeleteFixup(replacement, dataElement);\n                    } \n                } else {\n                    if ((deletedNode.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = null;\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                            doRedBlackDeleteFixup(deletedNode, dataElement);\n                        } \n                        if ((deletedNode.getParent(dataElement)) != null) {\n                            if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                deletedNode.getParent(dataElement).setLeft(null, dataElement);\n                            } else {\n                                deletedNode.getParent(dataElement).setRight(null, dataElement);\n                            }\n                            deletedNode.setParent(null, dataElement);\n                        } \n                    }\n                }\n            }\n            shrink();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"deletedNode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl"},"failures":[409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"tindex":"a338796a-3f41-11e6-947c-6ba40d5b20d5","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Double) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"a338a07b-3f41-11e6-947c-d9855823ba2e","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n    } \n    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl"},"failures":[471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,13,14,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"a338a07c-3f41-11e6-947c-f9b201a657c0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"object","position2":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[504],"tindex":"a338a07d-3f41-11e6-947c-23840f536ae3","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[505,506],"tindex":"a338a07e-3f41-11e6-947c-e5917ccf4b35","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[507],"tindex":"a338a07f-3f41-11e6-947c-034ce7ec21fd","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl"},"failures":[508],"tindex":"a338a080-3f41-11e6-947c-5b563acc7c60","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a338c691-3f41-11e6-947c-29acb2f6fcd4","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[31,32,33,34,35,36,40,41,42,43,37,38,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,78,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"a338c692-3f41-11e6-947c-a9dda66fa3fe","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[509],"tindex":"a338c693-3f41-11e6-947c-2bbed94a2daa","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl"},"failures":[510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"a338c694-3f41-11e6-947c-c1d244e7d504","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[598],"tindex":"a338c695-3f41-11e6-947c-8d4da15db810","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a338eda6-3f41-11e6-947c-df4c8aee4f76","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl"},"failures":[599,600,601,602,603,604,408,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650],"tindex":"a338eda7-3f41-11e6-947c-6f6d63ad20c2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl"},"failures":[651],"tindex":"a338eda8-3f41-11e6-947c-7f6ac7a9cfc6","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a338eda9-3f41-11e6-947c-f30217be95a1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.lang.Object[]) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    return (lookupKey(obj)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[652,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,653,654,655,656,657,658,659,22,23,660,661,662,663,24,664,25,665,666,667,201,668,669,670,671,205,206,207,208,209,182,210,202,203,204,26,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,672,673,674,675,676,677,678,679,680,681,2,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,337,335,339,336,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,27,28,29,30,772,773,774,775,3,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815],"tindex":"a338edaa-3f41-11e6-947c-f1a966ee8b4c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode > 0) {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl"},"failures":[50,402,97,405],"tindex":"a33914bb-3f41-11e6-947c-61480adc0665","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj != null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtBinaryOperatorImpl"},"failures":[816,817],"tindex":"a33914bc-3f41-11e6-947c-85be30943f0d","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:96","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(final boolean trueFirst) {\n    if ((!trueFirst) || trueFirst) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return trueFirst ? org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator : org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"trueFirst","nextCalled":"trueFirst"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33914bd-3f41-11e6-947c-5f1a31e2baa5","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if ((index < index) || (index > index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl"},"failures":[178,179],"tindex":"a33914be-3f41-11e6-947c-3f63a14c30e0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3393bcf-3f41-11e6-947c-b9d00c1a7416","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[818],"tindex":"a3393bd0-3f41-11e6-947c-5ba7375c9420","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[819,820,821,822,823,824,825,387,826,827,388,828,389,829,830,831,832,833,390,391,834,835,392,393,836,837,65,838,119,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,134,242,855,856,285,713,857,326,858,371,754,859,860,861,807,862],"tindex":"a3393bd1-3f41-11e6-947c-2731d2b7a4d4","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a3393bd2-3f41-11e6-947c-8394f9e17a20","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33962e3-3f41-11e6-947c-cf40491a3df2","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            if (count == 0) {\n                {\n                    synchronized(java.lang.Object) {\n                        return getBag().add(object, count);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33962e4-3f41-11e6-947c-af4682c2c6d9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key instanceof java.lang.Boolean) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33962e5-3f41-11e6-947c-3937dbfc6890","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if ((fromIndex < 0) || (index >= fromIndex)) {\n        {\n            if (fromIndex <= 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtBinaryOperatorImpl"},"failures":[863,864],"tindex":"a33962e6-3f41-11e6-947c-538880dc9537","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cloned":"map","delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[865],"tindex":"a33962e7-3f41-11e6-947c-5fd6657bc472","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[866],"tindex":"a33962e8-3f41-11e6-947c-793e7546bb1d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33989f9-3f41-11e6-947c-832e3f6e5379","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl"},"failures":[867,868],"tindex":"a33989fa-3f41-11e6-947c-2f593e530bec","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if (a.isEmpty()) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33989fb-3f41-11e6-947c-6918d8cc1ca7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if ((fromIndex < 0) || (index >= fromIndex)) {\n        {\n            if (fromIndex <= 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"fromIndex","index":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a33989fc-3f41-11e6-947c-ef452ebebb0a","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906],"tindex":"a33989fd-3f41-11e6-947c-f34b73386695","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c == null) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:281","type":"CtInvocationImpl"},"failures":[],"tindex":"a33989fe-3f41-11e6-947c-e5b38724ffb5","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"Queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[907],"tindex":"a339b10f-3f41-11e6-947c-1fd5744038bc","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl"},"failures":[],"tindex":"a339b110-3f41-11e6-947c-49144e1c8574","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object.isAssignableFrom(object.getReturnType())) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"object","method":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339b111-3f41-11e6-947c-0de2fdf55d92","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n    } \n    if (list.isEmpty()) {\n        return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n    } \n    final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n    list.clear();\n    final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n    sl.addAll(temp);\n    return sl;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[908,909,910],"tindex":"a339b112-3f41-11e6-947c-bfb918d40d51","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[911],"tindex":"a339b113-3f41-11e6-947c-e19dca00d87e","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339b114-3f41-11e6-947c-5b705efa7677","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits <= lengthInBits) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"lengthInBits","newCapacity":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339b115-3f41-11e6-947c-efb226595c44","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < (index / 2)) {\n        {\n            if (index < 1) {\n                {\n                    validate(object);\n                    return decorated().set(index, object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339d826-3f41-11e6-947c-47b174217a0b","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl"},"failures":[652],"tindex":"a339d827-3f41-11e6-947c-8b1375d558bb","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Long) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl"},"failures":[871,872,873,874,876,877,879,881,888,889,912,892,894,895,896,897,898,899,900,901,903,904],"tindex":"a339d828-3f41-11e6-947c-dd47518a29e8","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339d829-3f41-11e6-947c-03f348f9f1c9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl"},"failures":[913],"tindex":"a339d82a-3f41-11e6-947c-5d14245f4f5d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtVariableReadImpl"},"failures":[914,915,916,917,918,919,920,921,922,923],"tindex":"a339d82b-3f41-11e6-947c-5b47a715da53","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (debug) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"debug"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339ff3c-3f41-11e6-947c-89ec903de9e7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.lang.Object[]) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    return (lookupKey(obj)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[924],"tindex":"a339ff3d-3f41-11e6-947c-8fbbd8de4161","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl"},"failures":[925,926,927,928,929,930,931,932,147,150,155,156,157,159,161,162,163],"tindex":"a339ff3e-3f41-11e6-947c-ddbe4b6775a1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a339ff3f-3f41-11e6-947c-01b403ff2e2e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if ((count < 0) || (index >= count)) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467343316226/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"count","index":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}