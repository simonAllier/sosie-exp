{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":370,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":571,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":175,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":691,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":769,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":369,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":722,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":102,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":677,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":340,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":233,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":247,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":263,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":471,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":346,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":225,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":372,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":559,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":268,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":292,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":376,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":539,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":757,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":716,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":46,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":399,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":514,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":698,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":629,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":649,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":672,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":404,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":511,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":181,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":196,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":740,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":138,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":319,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":646,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":133,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":403,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":507,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":251,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":727,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":148,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":630,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":449,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":625,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":668,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":75,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":446,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":49,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":190,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":557,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":363,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":4,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":186,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":601,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":155,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":301,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":0,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":193,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":159,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":39,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":44,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":628,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":161,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":73,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":330,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":721,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":455,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":593,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":385,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":83,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":253,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":109,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":654,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":631,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":160,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":103,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":114,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":506,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":665,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":681,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":217,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":387,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":710,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":739,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":351,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":145,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":453,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":561,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":718,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":690,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":750,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":505,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":627,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":707,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":575,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":382,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":394,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":308,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":573,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":167,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":538,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":88,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":430,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":496,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":38,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":754,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":16,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":274,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":126,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":61,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":157,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":477,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":755,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":663,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":305,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":90,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":567,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":315,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":441,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":358,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":464,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":664,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":467,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":481,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":136,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":398,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":415,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":687,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":295,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":400,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":256,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":14,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":704,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":581,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":215,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":182,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":115,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":151,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":84,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":422,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":624,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":729,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":652,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":164,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":357,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":683,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":177,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":680,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":666,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":407,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":502,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":425,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":239,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":229,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":140,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":574,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":616,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":551,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":206,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":547,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":546,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":549,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":548,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":543,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":602,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":304,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":545,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":544,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":730,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":418,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":421,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":495,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":736,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":275,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":5,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":332,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":245,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":242,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":53,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":693,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":227,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":266,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":657,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":91,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":320,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":520,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":591,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":685,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":758,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":609,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":759,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":558,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":69,"org.apache.commons.collections4.CollectionUtilsTest.find":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":492,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":325,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":269,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":6,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":124,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":156,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":311,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":476,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":682,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":35,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":281,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":504,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":696,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":760,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":641,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":723,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":428,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":709,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":347,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":648,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":236,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":231,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":130,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":365,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":605,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":208,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":120,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":658,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":198,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":327,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":134,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":306,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":742,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":726,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":655,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":763,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":296,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":465,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":689,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":527,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":766,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":768,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":522,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":678,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":653,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":313,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":644,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":733,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":518,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":460,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":466,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":515,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":423,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":618,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":149,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":392,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":401,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":112,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":252,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":264,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":536,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":110,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":377,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":174,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":379,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":378,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":237,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":635,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":241,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":679,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":36,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":402,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":59,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":11,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":521,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":40,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":706,"org.apache.commons.collections4.CollectionUtilsTest.transform2":752,"org.apache.commons.collections4.CollectionUtilsTest.transform1":751,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":436,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":473,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":620,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":659,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":459,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":289,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":386,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":154,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":287,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":431,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":26,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":303,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":632,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":529,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":37,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":517,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":570,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":203,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":427,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":470,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":62,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":524,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":260,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":673,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":204,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":711,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":577,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":257,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":216,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":732,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":272,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":200,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":565,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":688,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":440,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":92,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":288,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":684,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":494,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":282,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":7,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":393,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":488,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":708,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":715,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":764,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":226,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":146,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":585,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":267,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":219,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":556,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":500,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":222,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":100,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":447,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":606,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":89,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":191,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":563,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":598,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":293,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":380,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":647,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":508,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":705,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":143,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":603,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":248,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":434,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":607,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":619,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":67,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":111,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":188,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":474,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":594,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":214,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":480,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":279,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":244,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":560,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":438,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":396,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":99,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":503,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":700,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":202,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":364,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":703,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":738,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":717,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":472,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":240,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":212,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":534,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":458,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":578,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":309,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":207,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":232,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":456,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":121,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":572,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":47,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":54,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":451,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":339,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":611,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":645,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":414,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":352,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":562,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":765,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":213,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":744,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":179,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":743,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":183,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":255,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":588,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":497,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":329,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":553,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":97,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":131,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":482,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":205,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":31,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":512,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":192,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":388,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":580,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":621,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":93,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":454,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":20,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":452,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":604,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":409,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":756,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":713,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":221,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":71,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":116,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":122,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":334,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":195,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":278,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":767,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":1,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":169,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":622,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":132,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":699,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":762,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":374,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":78,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":674,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":483,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":590,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":56,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":271,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":310,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":153,"org.apache.commons.collections4.CollectionUtilsTest.isFull":555,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":230,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":341,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":741,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":462,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":636,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":694,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":19,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":162,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":375,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":135,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":748,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":714,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":189,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":528,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":27,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":420,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":513,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":450,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":280,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":554,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":746,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":725,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":270,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":651,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":532,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":150,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":107,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":587,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":734,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":533,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":366,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":410,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":444,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":299,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":350,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":249,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":254,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":433,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":395,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":613,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":359,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":576,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":735,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":141,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":660,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":178,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":642,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":697,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":25,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":368,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":147,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":312,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":158,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":468,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":322,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":139,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":127,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":353,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":600,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":489,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":442,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":457,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":525,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":324,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":362,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":639,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":284,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":390,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":172,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":692,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":291,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":499,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":302,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":105,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":336,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":626,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":662,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":661,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":569,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":345,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":397,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":638,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":728,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":461,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":95,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":712,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":701,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":210,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":261,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":676,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":246,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":445,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":15,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":437,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":595},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7],"tindex":"0a70ffb2-3f2b-11e6-b40b-97da3d97ca9d","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[8,9,10],"tindex":"0a71c303-3f2b-11e6-b40b-c5f27f5eb424","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if ((key2 == null) || (key1 == null)) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key2","b":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[11],"tindex":"0a721124-3f2b-11e6-b40b-9d87720a94d4","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a721125-3f2b-11e6-b40b-1db65941a9bb","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"0a723836-3f2b-11e6-b40b-0514cc51c902","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl"},"failures":[149,5,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"0a725f47-3f2b-11e6-b40b-f97de14ff456","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a728658-3f2b-11e6-b40b-e30e6a596729","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a728659-3f2b-11e6-b40b-25f9b3fc685a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a72ad6a-3f2b-11e6-b40b-efd5344d66e4","method":{"position":"org.apache.commons.collections4.IteratorUtils:460","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> unmodifiableListIterator(final java.util.ListIterator<E> listIterator) {\n    if ((listIterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(listIterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl"},"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"tindex":"0a72ad6b-3f2b-11e6-b40b-63cf3d8eb933","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > index) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[248],"tindex":"0a72d47c-3f2b-11e6-b40b-c1dd68c08fd7","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a72d47d-3f2b-11e6-b40b-01f8b7801d24","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a72fb8e-3f2b-11e6-b40b-11fe0e739d60","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            addNodeToCache(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl"},"failures":[249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"0a73229f-3f2b-11e6-b40b-73d468fc8d23","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl"},"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"0a7322a0-3f2b-11e6-b40b-c765260399cb","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[363],"tindex":"0a7349b1-3f2b-11e6-b40b-add559ab6ce8","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl"},"failures":[],"tindex":"0a7349b2-3f2b-11e6-b40b-ed42d76b68a8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value.isAssignableFrom(value.getReturnType())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"value","method":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415],"tindex":"0a7349b3-3f2b-11e6-b40b-919e2933d143","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7370c4-3f2b-11e6-b40b-311588276835","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 instanceof java.lang.Short) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7370c5-3f2b-11e6-b40b-093833a82e6e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[416],"tindex":"0a7397d6-3f2b-11e6-b40b-71ec0f44425b","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7397d7-3f2b-11e6-b40b-75d9d1552008","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtFieldReadImpl"},"failures":[],"tindex":"0a7397d8-3f2b-11e6-b40b-858560900cb5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl"},"failures":[417],"tindex":"0a7397d9-3f2b-11e6-b40b-1f12b405cc74","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[184],"tindex":"0a73beea-3f2b-11e6-b40b-2704f2c921a0","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex == (-1)) {\n        {\n            return cursor(fromIndex);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtInvocationImpl"},"failures":[],"tindex":"0a73beeb-3f2b-11e6-b40b-2d7e3f3c011f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1582","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(prior);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"child":"prior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[418,419,420,421,422,423,424,425],"tindex":"0a73e5fc-3f2b-11e6-b40b-47bc4289608c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a73e5fd-3f2b-11e6-b40b-f3210712d7c9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a740d0e-3f2b-11e6-b40b-4f1f440b272e","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            if (transformer == null) {\n                {\n                    if (transformer != null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n                            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                                @java.lang.SuppressWarnings(value = \"unchecked\")\n                                final E[] E[] = ((E[])(bag.toArray()));\n                                bag.clear();\n                                for (final E E : values) {\n                                    decorated.decorated().add(transformer.transform(value));\n                                }\n                            } \n                            return decorated;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl"},"failures":[426,427,428,429,430,431,432,433,434,435],"tindex":"0a740d0f-3f2b-11e6-b40b-99772190bfd1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a740d10-3f2b-11e6-b40b-edef40208b4e","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a743421-3f2b-11e6-b40b-d5ca04f76ea2","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[436,437,438,439,440,441,128,129,130,442],"tindex":"0a743422-3f2b-11e6-b40b-df83ff842939","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[],"tindex":"0a743423-3f2b-11e6-b40b-51c79dec264f","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a745b34-3f2b-11e6-b40b-7bd014f4da3e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[443],"tindex":"0a745b35-3f2b-11e6-b40b-1338bee4adc9","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[330,444,445,332,333,446,335,447,336,337,448,339,340,341,342,343,344,346,347,348,449,349,450,350,451,452,351,352,453,353,354,355,454,455,356,357,358,456,359,361,457,458,362],"tindex":"0a745b36-3f2b-11e6-b40b-73b661f0e3e6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[459,460,461,462,463,464,465,466,467,468,469,470,471,166,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,167,168,509,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,510,193,194,195,196,197,198,199,200,201,202,203,204,205,191,192],"tindex":"0a748247-3f2b-11e6-b40b-c7e6c6a72552","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:350","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeInserted(node);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl"},"failures":[330,444,445,332,333,446,335,447,336,337,448,339,340,341,342,343,344,346,347,348,449,349,450,350,451,452,351,352,453,353,354,355,454,455,356,357,358,456,359,361,457,458,362],"tindex":"0a748248-3f2b-11e6-b40b-49504d9f0226","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl"},"failures":[511],"tindex":"0a74a959-3f2b-11e6-b40b-232e0dfc9db3","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if ((collection.isEmpty()) && (collection.isEmpty())) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"collection","pendingInsertions":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl"},"failures":[512],"tindex":"0a74a95a-3f2b-11e6-b40b-a3935fd77ef8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a74d06b-3f2b-11e6-b40b-fff75c9f7eb4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[513],"tindex":"0a74d06c-3f2b-11e6-b40b-a1d4c80540d4","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[514],"tindex":"0a74d06d-3f2b-11e6-b40b-b54b790e056d","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a74d06e-3f2b-11e6-b40b-fb7fdfdb81cd","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a74f77f-3f2b-11e6-b40b-57dfeb5de36e","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if ((trueClosure == null) || (trueClosure == null)) {\n        {\n            if ((trueClosure == null) || (trueClosure == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"trueClosure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl"},"failures":[515,516,517,518,519,520,521,522],"tindex":"0a74f780-3f2b-11e6-b40b-9989d77853b0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a74f781-3f2b-11e6-b40b-8d35651171a9","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a751e92-3f2b-11e6-b40b-59723a793494","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            if (transformer == null) {\n                {\n                    if (transformer != null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n                            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                                @java.lang.SuppressWarnings(value = \"unchecked\")\n                                final E[] E[] = ((E[])(bag.toArray()));\n                                bag.clear();\n                                for (final E E : values) {\n                                    decorated.decorated().add(transformer.transform(value));\n                                }\n                            } \n                            return decorated;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a751e93-3f2b-11e6-b40b-93cc83ad1b04","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a751e94-3f2b-11e6-b40b-bf128e6a0ffc","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue > defaultValue) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"defaultValue","proposedCapacity":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7545a5-3f2b-11e6-b40b-5f8840bde8a5","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[523],"tindex":"0a7545a6-3f2b-11e6-b40b-e138b534d4b7","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7545a7-3f2b-11e6-b40b-53264b5fe490","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7545a8-3f2b-11e6-b40b-937af9708135","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[524],"tindex":"0a756cb9-3f2b-11e6-b40b-1b758a759a39","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a756cba-3f2b-11e6-b40b-f782ace012f9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a756cbb-3f2b-11e6-b40b-cf1cf96e284a","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[525,526],"tindex":"0a756cbc-3f2b-11e6-b40b-5f3d2a9604f5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7593cd-3f2b-11e6-b40b-1731311796ac","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7593ce-3f2b-11e6-b40b-ff560bdacb22","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if ((trueClosure == null) || (trueClosure == null)) {\n        {\n            if ((trueClosure == null) || (trueClosure == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"trueClosure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[417],"tindex":"0a75badf-3f2b-11e6-b40b-dd10a3026a6e","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (trueTransformer == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"trueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[527,528,529,530,531,532,533,534,535],"tindex":"0a75bae0-3f2b-11e6-b40b-c38b212e8a15","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (null == value) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtBinaryOperatorImpl"},"failures":[536],"tindex":"0a75bae1-3f2b-11e6-b40b-65351ecfc16b","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl"},"failures":[537,538],"tindex":"0a75bae2-3f2b-11e6-b40b-15ec0ebe2956","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a75e1f3-3f2b-11e6-b40b-039f15fa3ad0","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl"},"failures":[539,540,541,542],"tindex":"0a75e1f4-3f2b-11e6-b40b-effef21c3dc9","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.String) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl"},"failures":[543,544,545,546,547,548,549,550,551,552,553,554,555,556],"tindex":"0a75e1f5-3f2b-11e6-b40b-6ff0114cf50b","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index == 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a760906-3f2b-11e6-b40b-5f54af0b00bc","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[557,558,559],"tindex":"0a760907-3f2b-11e6-b40b-6b4f237c4ab7","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl"},"failures":[],"tindex":"0a760908-3f2b-11e6-b40b-ed66a26c08f3","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.isAssignableFrom(obj.getReturnType())) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"obj","method":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[560,561,562,563,564,565,566],"tindex":"0a763019-3f2b-11e6-b40b-210568e877dd","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76301a-3f2b-11e6-b40b-c9856b527462","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap != null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76301b-3f2b-11e6-b40b-43cc36ae71ce","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[567],"tindex":"0a76301c-3f2b-11e6-b40b-33c072077633","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,387,390,393,395,396,398,400,402,403,404,405,660,290,661,318,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,36,76,109,135],"tindex":"0a76572d-3f2b-11e6-b40b-0dc6d14e4380","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtInvocationImpl"},"failures":[],"tindex":"0a76572e-3f2b-11e6-b40b-69b074b75b18","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[732,733],"tindex":"0a767e3f-3f2b-11e6-b40b-b5b2d4b4b185","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[],"tindex":"0a767e40-3f2b-11e6-b40b-a753975bae12","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749],"tindex":"0a767e41-3f2b-11e6-b40b-5724dbb7a66c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76a552-3f2b-11e6-b40b-01ebdfab2fc9","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76a553-3f2b-11e6-b40b-efe1a04547da","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[750],"tindex":"0a76a554-3f2b-11e6-b40b-63f30640d1df","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl"},"failures":[751,752],"tindex":"0a76cc65-3f2b-11e6-b40b-576b72151076","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76cc66-3f2b-11e6-b40b-5f6a485da773","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[753,754,755,756,757,758,759],"tindex":"0a76cc67-3f2b-11e6-b40b-7775670ef499","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76f378-3f2b-11e6-b40b-5dc3964c0508","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a76f379-3f2b-11e6-b40b-193cdce8361c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a771a8a-3f2b-11e6-b40b-53e7fc992572","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (null != key) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[760,761],"tindex":"0a771a8b-3f2b-11e6-b40b-7d159ebb397d","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[762],"tindex":"0a771a8c-3f2b-11e6-b40b-4196c60c98a5","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:106","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex > 0) {\n        {\n            return decorated().subList(fromIndex, toIndex);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[763],"tindex":"0a771a8d-3f2b-11e6-b40b-6fb4959d4f6b","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl"},"failures":[22,38,46,56,64,78,94,111,137,145],"tindex":"0a77419e-3f2b-11e6-b40b-3bfe0bbbda98","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[764,765,766,767],"tindex":"0a7768af-3f2b-11e6-b40b-45fd74d9a264","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a7768b0-3f2b-11e6-b40b-af5a94d76ea9","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index >= index) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[768],"tindex":"0a7768b1-3f2b-11e6-b40b-6f087ca3862b","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements == null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"elements"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl"},"failures":[499,500,501],"tindex":"0a7768b2-3f2b-11e6-b40b-d5f4990ffd70","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a778fc3-3f2b-11e6-b40b-a1a6f26b64f3","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            if (transformer == null) {\n                {\n                    if (transformer != null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n                            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                                @java.lang.SuppressWarnings(value = \"unchecked\")\n                                final E[] E[] = ((E[])(bag.toArray()));\n                                bag.clear();\n                                for (final E E : values) {\n                                    decorated.decorated().add(transformer.transform(value));\n                                }\n                            } \n                            return decorated;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl"},"failures":[769],"tindex":"0a778fc4-3f2b-11e6-b40b-438266868445","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0a778fc5-3f2b-11e6-b40b-0332b5d31bba","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331170535/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}