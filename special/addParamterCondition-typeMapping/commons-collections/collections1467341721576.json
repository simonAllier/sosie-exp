{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":420,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":73,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":124,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":207,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":169,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":288,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":22,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":164,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":205,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":543,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":231,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":443,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":174,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":43,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":513,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":476,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":435,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":436,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":297,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":89,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":221,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":12,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":465,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":540,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":529,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":583,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":463,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":551,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":597,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":334,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":593,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":236,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":381,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":565,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":566,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":472,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":23,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":237,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":456,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":128,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":142,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":598,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":53,"org.apache.commons.collections4.ListUtilsTest.testEquals":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":214,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":403,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":172,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":323,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":446,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":445,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":238,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":77,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":239,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":390,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":253,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":480,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":580,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":235,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":56,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":118,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":256,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":8,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":177,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":92,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":421,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":163,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":484,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":31,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":335,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":369,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":312,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":518,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":437,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":18,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":99,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":3,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":391,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":41,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":130,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":302,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":406,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":505,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":212,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":162,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":570,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":588,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":586,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":572,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":361,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":19,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":519,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":209,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":397,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":531,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":101,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":444,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":557,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":534,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":434,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":157,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":603,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":440,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":338,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":535,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":33,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":426,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":296,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":125,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":266,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":321,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":499,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":438,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":333,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":281,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":602,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":337,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":107,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":563,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":377,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":154,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.map.LRUMapTest.testClone":24,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":30,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":218,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":280,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":104,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":283,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":313,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":42,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":512,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":608,"org.apache.commons.collections4.ListUtilsTest.testSubtract":226,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":387,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":577,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":6,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":185,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":574,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":319,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":258,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":533,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":467,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":432,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":599,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":547,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":243,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":240,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":475,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":278,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":228,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":495,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":117,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":419,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":223,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":538,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":71,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":70,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":568,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":544,"org.apache.commons.collections4.map.LRUMapTest.testReset":26,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":87,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":314,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":560,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":344,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":455,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":527,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":507,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":542,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":140,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":414,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":395,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":109,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":252,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":234,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":345,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":38,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":548,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.LinkedMapTest.testReset":98,"org.apache.commons.collections4.ListUtilsTest.testHashCode":596,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":537,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":564,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":181,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":88,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":601,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":520,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":11,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":193,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":168,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":380,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":248,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":184,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":249,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":268,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":5,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":582,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":413,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":15,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":129,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":136,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":368,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":263,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":127,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":289,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":292,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":139,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":536,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":1,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":84,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":48,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":506,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":365,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":4,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":94,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":250,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":300,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":410,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":553,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":485,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":322,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":482,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":192,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":189,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":187,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":210,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":578,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":273,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":229,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":290,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":609,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":579,"org.apache.commons.collections4.SetUtilsTest.testHashCode":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":213,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":405,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":423,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":108,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":34,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":112,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":550,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":219,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":501,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":474,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":14,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":508,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":466,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":407,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":315,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":510,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":301,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":379,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":7,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":61,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":103,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":276,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":483,"org.apache.commons.collections4.map.LinkedMapTest.testClone":96,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":594,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":150,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":90,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":358,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":284,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":232,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":498,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":161,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":179,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":511,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":39,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":244,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":477,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":282,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":27,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":206,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":360,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":299,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":489,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":502,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":468,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":592,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":159,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":604,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":606,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":605,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":279,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":490,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":545,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":123,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":195,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":356,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":173,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":316,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":492,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":497,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":371,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":441,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":327,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":372,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":412,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":573,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":267,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":554,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":40,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":204,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":310,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":308,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":556,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":324,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":305,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":307,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":203,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":261,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":86,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":110,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":428,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":539,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":175,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":600,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":58,"org.apache.commons.collections4.map.LRUMapTest.testLRU":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":470,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":464,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":357,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":166,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":13,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":10,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":224,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":28,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":388,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":481,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":155,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":68,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":215,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":274,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":93,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":67,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":409,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":488,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":532,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":478,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":225,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":549,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":29,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":208,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":525,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":575,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":160,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":517,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":257},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40501533-3f37-11e6-ade5-8338bb5576f0","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"4050ff94-3f37-11e6-ade5-bf149cbf1446","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl"},"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"405174c5-3f37-11e6-ade5-83c8bb27a274","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[200,201],"tindex":"4051c2e6-3f37-11e6-ade5-878a72e59a49","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (null != key) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40537097-3f37-11e6-ade5-6399db60896b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[202,203],"tindex":"405397a8-3f37-11e6-ade5-1386b24b13df","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405397a9-3f37-11e6-ade5-b515f10b45c1","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == true) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4053beba-3f37-11e6-ade5-61b97e3b5f3a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode > hashCode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","proposedCapacity":"hashCode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[204,205,206],"tindex":"4053bebb-3f37-11e6-ade5-81bfea0ee194","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"4053bebc-3f37-11e6-ade5-ed313dc0d443","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[226,227],"tindex":"4053e5cd-3f37-11e6-ade5-b1a5206a4f95","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1.isEmpty()) {\n        {\n            if (list1.isEmpty()) {\n                {\n                    final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n                    final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n                    for (final E E : list1) {\n                        if (!(bag.remove(e, 1))) {\n                            result.add(e);\n                        } \n                    }\n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[228,229],"tindex":"4053e5ce-3f37-11e6-ade5-7d2eedda1ea6","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4053e5cf-3f37-11e6-ade5-15b4316e903e","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40540ce0-3f37-11e6-ade5-f59ca7d05e83","method":{"position":"org.apache.commons.collections4.IteratorUtils:364","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array) {\n    if ((array instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[230,231,232],"tindex":"40540ce1-3f37-11e6-ade5-779fb046fdfb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[233],"tindex":"40540ce2-3f37-11e6-ade5-69763b60ed0b","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if ((list1.size()) != (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list1","b":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405433f3-3f37-11e6-ade5-59f6393b8952","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n    return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405433f4-3f37-11e6-ade5-27e51d226fcb","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (array instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405433f5-3f37-11e6-ade5-69d205b7aa40","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index <= index) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40545b06-3f37-11e6-ade5-9b3b60ec2d6f","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40548217-3f37-11e6-ade5-bf76ce6659f2","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40548218-3f37-11e6-ade5-bdfaf8c3f90d","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40548219-3f37-11e6-ade5-d5b065a962f8","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Integer) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl"},"failures":[234,235,236],"tindex":"4054821a-3f37-11e6-ade5-7b85b75ca85e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:852","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry instanceof java.util.Map.Entry) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(entry));\n                final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(e.getKey());\n                return (match != null) && (match.equals(e));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[237],"tindex":"4054a92b-3f37-11e6-ade5-c3a6fce9e94e","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4054a92c-3f37-11e6-ade5-4717f61fe99b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[238,239,240,241,242,243],"tindex":"4054d03d-3f37-11e6-ade5-1dc4e8fcde0f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[244],"tindex":"4054d03e-3f37-11e6-ade5-ff3ed5010f18","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"4054d03f-3f37-11e6-ade5-b3e23c44ed9b","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl"},"failures":[245,246,247,248,249],"tindex":"4054d040-3f37-11e6-ade5-a10f6d5e1a5b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index <= 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[250,251],"tindex":"4054f751-3f37-11e6-ade5-67758c1bff70","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[252],"tindex":"40559392-3f37-11e6-ade5-df733532f826","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl"},"failures":[158,159,160],"tindex":"4055baa3-3f37-11e6-ade5-9b275d9c3145","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4055e1b4-3f37-11e6-ade5-eb693ee0685f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,211],"tindex":"405608c5-3f37-11e6-ade5-e13c3f41c55c","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:532","type":"CtMethodImpl","sourcecode":"protected void nodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            } else if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == node) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            } else {\n                boolean = false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[268,269,270],"tindex":"405656e6-3f37-11e6-ade5-1345fbb84933","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405656e7-3f37-11e6-ade5-0528e7de7a9f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40567df8-3f37-11e6-ade5-638a33440db4","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40567df9-3f37-11e6-ade5-85e086ce8011","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl"},"failures":[271,272,273,274,275,276],"tindex":"4056a50a-3f37-11e6-ade5-1bfa87818cea","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[277],"tindex":"4056a50b-3f37-11e6-ade5-a9124dda316c","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[278],"tindex":"4056a50c-3f37-11e6-ade5-1125319021c7","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4056cc1d-3f37-11e6-ade5-7dc5e4e0bb0a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[279],"tindex":"4056f32e-3f37-11e6-ade5-0f126ef05b9b","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4056f32f-3f37-11e6-ade5-6d6b4a7dcdb6","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (null == obj) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[204,205,280,281,282,283],"tindex":"40571a40-3f37-11e6-ade5-f1b024dd82cf","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40571a41-3f37-11e6-ade5-fbf7bd3e2e9c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[284],"tindex":"40574152-3f37-11e6-ade5-e19b5a2aee71","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 == null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40574153-3f37-11e6-ade5-1f93a5c0e9ad","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40574154-3f37-11e6-ade5-15c42f6977ab","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40576865-3f37-11e6-ade5-f7abdfb02dfd","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if (b instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40576866-3f37-11e6-ade5-dbb9ba187fe3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:367","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Set<E> set1, final java.util.Set<E> set2) {\n    if (set2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComposited(set1);\n            addComposited(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[285,286,287],"tindex":"4057b687-3f37-11e6-ade5-67670ee7154b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:689","type":"CtBinaryOperatorImpl"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,232,311,312,313,314],"tindex":"4057b688-3f37-11e6-ade5-a5dbc7a1a771","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"node","right":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"4057dd99-3f37-11e6-ade5-033a4534ed8e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.util.Collection<?>) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[339,315,316,317,318,340,319,320,321,322,323,324,325,326,327,328,329,341,342,343,344,345,346,330,331,332,333,334,335,336,337,338,347,348,349,350,351,352,236,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,287,380,381,382,383,384,385,386,387,388,389,390,391,200,392,393,394,201,395,396,397,398,399],"tindex":"4057dd9a-3f37-11e6-ade5-275ab98cc0a5","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[340,355,400,401,399,402],"tindex":"4057dd9b-3f37-11e6-ade5-779f64dc0047","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40582bbc-3f37-11e6-ade5-13d4b3f40968","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[403],"tindex":"40582bbd-3f37-11e6-ade5-0f0ac1e2c68a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl"},"failures":[404,405],"tindex":"40582bbe-3f37-11e6-ade5-d72ba6dca2e4","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"4058c7ff-3f37-11e6-ade5-0dd081ef322b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtBinaryOperatorImpl"},"failures":[406,407],"tindex":"4058ef10-3f37-11e6-ade5-6f8a30aaed29","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl"},"failures":[],"tindex":"4058ef11-3f37-11e6-ade5-0dcbe7f06296","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,402,503],"tindex":"4058ef12-3f37-11e6-ade5-9db3ddf78943","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[504,505,506,507,508,509,510,277,511,512,513,514,515,516,517,243,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532],"tindex":"4059d973-3f37-11e6-ade5-ef8d8722f046","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtInvocationImpl"},"failures":[437,441,451,454,458],"tindex":"405a0084-3f37-11e6-ade5-ddea05b5ddfc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"405a0085-3f37-11e6-ade5-cda1f4e1a640","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (!(object == null ? object == null : o1.equals(o2))) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"object","o2":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl"},"failures":[533,534,535,536,537,538,539,540,541,542,543,544],"tindex":"405a2796-3f37-11e6-ade5-1562c08975c1","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i < (i / 2)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"i","index":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[545],"tindex":"405a2797-3f37-11e6-ade5-bbc02535fbf1","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl"},"failures":[546],"tindex":"405a2798-3f37-11e6-ade5-c1bb9c4e10e5","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if ((set.isEmpty()) && (set.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"set","pendingInsertions":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[547],"tindex":"405a4ea9-3f37-11e6-ade5-5386f970664b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405a4eaa-3f37-11e6-ade5-35979b16387a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405a4eab-3f37-11e6-ade5-4373fc64d39a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[548],"tindex":"405a4eac-3f37-11e6-ade5-5feb862e52c9","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[549],"tindex":"405a75bd-3f37-11e6-ade5-052c02b9a341","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405a75be-3f37-11e6-ade5-7146b4388ac1","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[550],"tindex":"405a75bf-3f37-11e6-ade5-f38f19dfe040","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405a75c0-3f37-11e6-ade5-77f0c8508fb0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((to.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"to","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[510,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595],"tindex":"405a9cd1-3f37-11e6-ade5-6ff534b4bcf8","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405a9cd2-3f37-11e6-ade5-7b4b88c44c7e","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[596],"tindex":"405a9cd3-3f37-11e6-ade5-45bc20a13346","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if ((list.size()) != (list.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405ac3e4-3f37-11e6-ade5-e5601ad46e27","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[597],"tindex":"405ac3e5-3f37-11e6-ade5-c5c666e4a85d","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405ac3e6-3f37-11e6-ade5-7da1586161d8","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[598],"tindex":"405ac3e7-3f37-11e6-ade5-491ab14214ed","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl"},"failures":[599],"tindex":"405aeaf8-3f37-11e6-ade5-13613f97dce1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection.isEmpty()) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"405aeaf9-3f37-11e6-ade5-0950413c1fc8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[417],"tindex":"405bae4a-3f37-11e6-ade5-dfd3b3a135ac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405bae4b-3f37-11e6-ade5-d72a5429ff3b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405bae4c-3f37-11e6-ade5-bd8c8aa4d3f6","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl"},"failures":[],"tindex":"405bae4d-3f37-11e6-ade5-8b45ab91b6d5","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1.isEmpty()) {\n        {\n            if (list1.isEmpty()) {\n                {\n                    final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n                    final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n                    for (final E E : list1) {\n                        if (!(bag.remove(e, 1))) {\n                            result.add(e);\n                        } \n                    }\n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[600],"tindex":"405bd55e-3f37-11e6-ade5-eb22ce3c70f8","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405bd55f-3f37-11e6-ade5-b307ebe6cb24","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"405bd560-3f37-11e6-ade5-256b8699085b","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405bfc71-3f37-11e6-ade5-93465eeaaa21","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[601,602,603,604,605,606,607],"tindex":"405bfc72-3f37-11e6-ade5-0bd0439f3962","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"405bfc73-3f37-11e6-ade5-15a78f5175c0","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl"},"failures":[93],"tindex":"405bfc74-3f37-11e6-ade5-ab7a98545a68","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[608],"tindex":"405c2385-3f37-11e6-ade5-43244bd2c1c5","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:446","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[609],"tindex":"405c2386-3f37-11e6-ade5-759a081aa4e2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336511598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}