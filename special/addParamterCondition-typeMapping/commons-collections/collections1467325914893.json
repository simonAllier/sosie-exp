{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":569,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":795,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":570,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":755,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":865,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":64,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":855,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":87,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":137,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":458,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":616,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":413,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":815,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":788,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":482,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":838,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":470,"org.apache.commons.collections4.CollectionUtilsTest.collect":811,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":207,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":803,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":807,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":291,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":655,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":117,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":571,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":143,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":497,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":369,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":831,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":169,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":821,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":331,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":304,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":713,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":429,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":302,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":744,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":862,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":759,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":467,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":287,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":642,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":606,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":650,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":347,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":488,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":268,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":155,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":310,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":611,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":136,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":449,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":857,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":460,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":623,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":789,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":869,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":754,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":317,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":850,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":708,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":719,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":427,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":507,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":236,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":33,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":646,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":363,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":630,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":787,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":241,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":242,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":350,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":178,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":216,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":663,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":86,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":270,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":62,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":801,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":172,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":403,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":385,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":401,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":73,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":716,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":374,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":389,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":465,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":14,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":486,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":589,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":366,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":7,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":354,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":421,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEmptyMapCompatibility":685,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":191,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":25,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":773,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":411,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":407,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":473,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":709,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":104,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":825,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":45,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":325,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":808,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":12,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":13,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":579,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":634,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":251,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":728,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":54,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":372,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":582,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":472,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":785,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":753,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":844,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":615,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":768,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":858,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":0,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":88,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":315,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":770,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":339,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":804,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":349,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":760,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":845,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":441,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":393,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":235,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":817,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":373,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":750,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":409,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":797,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":680,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":586,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":861,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":353,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":443,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":275,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":103,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":312,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":816,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":257,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":318,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":233,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":50,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":720,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":206,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":6,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":777,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":480,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":724,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":38,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":732,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":594,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":264,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":394,"org.apache.commons.collections4.ListUtilsTest.testPartition":375,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":402,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":502,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":601,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":504,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":503,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":536,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":737,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":749,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":802,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":269,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":660,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":681,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":711,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":471,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":161,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":584,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":183,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":274,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":367,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":142,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":798,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":598,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":667,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":234,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":848,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":23,"org.apache.commons.collections4.map.HashedMapTest.testClone":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":286,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":462,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":308,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":63,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":426,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":826,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":641,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":192,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":95,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":781,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":490,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":682,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":16,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":437,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":506,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":316,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":528,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":404,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":714,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":514,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":727,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":537,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":605,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":131,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":245,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":46,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":610,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":371,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":428,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":691,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":729,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":492,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":493,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":491,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":867,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":718,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":592,"org.apache.commons.collections4.list.TreeListTest.testBug35258":378,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":553,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":550,"org.apache.commons.collections4.ListUtilsTest.testSelect":377,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":338,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":726,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":525,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":730,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":551,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":736,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":677,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":485,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":40,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":61,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":303,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":782,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":283,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":767,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":148,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":527,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":144,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":613,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":55,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":361,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":215,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":496,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":494,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":794,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":748,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":417,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":1,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":631,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":783,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":464,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":835,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":29,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":657,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":432,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":544,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":697,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":344,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":810,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":827,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":272,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":562,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEmptyMapCompatibility":668,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":564,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":563,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":229,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":666,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":675,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":17,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":704,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":868,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":121,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":383,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":456,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":735,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":418,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":763,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":365,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":779,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":145,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":700,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":253,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":498,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":499,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":647,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":653,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":639,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":731,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":757,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":625,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":705,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":134,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":218,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":446,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":9,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":541,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":740,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":784,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":837,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":232,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":424,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":249,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":450,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":595,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":309,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":829,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":830,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":219,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":292,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":620,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":841,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":357,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":267,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":408,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":56,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":866,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":743,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":771,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":277,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":265,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":588,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":654,"org.apache.commons.collections4.CollectionUtilsTest.transform2":809,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":775,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":516,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":515,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":710,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":280,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":129,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":8,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":854,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":463,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":414,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":702,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":230,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":140,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":32,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":847,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":98,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":457,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":851,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":621,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":244,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":213,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":859,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":703,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":684,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":223,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":561,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":796,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":633,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":481,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":321,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":761,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":746,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":340,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":645,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":214,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":776,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":687,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":843,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":764,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":319,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":484,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":57,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":692,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":445,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":59,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":762,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":733,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":839,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":501,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":388,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":619,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":483,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":376,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":49,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":626,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":176,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":452,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":436,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":395,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":576,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":577,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":578,"org.apache.commons.collections4.list.TreeListTest.testRemove":380,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":652,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":849,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":238,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":237,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":306,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":725,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":239,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":649,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":846,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":822,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":69,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":534,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":778,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":190,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":510,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":320,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":406,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":539,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":856,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":793,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":683,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":141,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":105,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":560,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":558,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":3,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":370,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":559,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":834,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":669,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":624,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":632,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":356,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":440,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":27,"org.apache.commons.collections4.list.TreeListTest.testListEquals":712,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":742,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":305,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":664,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":518,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":519,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":174,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":823,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":618,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":587,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":614,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":580,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":505,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":572,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":596,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":717,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSimpleSerialization":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":39,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":522,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":419,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":706,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":58,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":139,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":842,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":566,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":567,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":565,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":818,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":364,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":792,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":701,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":549,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":397,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":226,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":548,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":351,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":799,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":438,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":758,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":557,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":556,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":555,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":806,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":271,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":300,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":379,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":637,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":273,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":454,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":259,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":604,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":535,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":332,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":805,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":636,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":828,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":643,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":487,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":128,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":4,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":415,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":261,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":293,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":314,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":721,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":638,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":658,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":833,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":288,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":461,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":113,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":182,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":698,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":765,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":276,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":673,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":252,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":185,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":745,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":44,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":597,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":333,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":453,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":147,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":335,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":334,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":512,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":96,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":661,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":635,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":384,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":508,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":715,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":396,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":220,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":752,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":531,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":412,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":640,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":670,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":538,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":769,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":860,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":819,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":97,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":585,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":832,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":836,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":644,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":665,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":672,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":690,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":222,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":840,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":694,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":609,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":179,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":800,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":133,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":751,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":774,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":468,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":542,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":863,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":693,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":11,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":814,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":741,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":824,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":756,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":313,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":434,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":659,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":575,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":864,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":431,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":477,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":85,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":699,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":231,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":410,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":734,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":772,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":324,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":444,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":695,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":786,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":422,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":225,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":224,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":747,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":260,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":78,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":546,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":459,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":110,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":111,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":435,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":255,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":170,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":405,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":853,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":102,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":780,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":852,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":150,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":34,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":448,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":600,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":181,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":591,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":92,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":330,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":676,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":307,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":89,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":100,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":323,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":812,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":26,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":392,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":391,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":327,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":707,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":656,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":813,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":790,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":423,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":53,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":479,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":382,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":28,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":400,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":603,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":262,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":820,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":617,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":360},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"72c8eafe-3f12-11e6-9b61-e9d4ec82d1c6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"72c9602f-3f12-11e6-9b61-89b0fe668437","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c96030-3f12-11e6-9b61-cb3b8e9f4bdc","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c96031-3f12-11e6-9b61-2dd9de7941af","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index <= beyond) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"beyond","newCapacity":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c98742-3f12-11e6-9b61-7d1b3bad55da","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == entry) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c98743-3f12-11e6-9b61-b1c2a373992c","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[2,3],"tindex":"72c98744-3f12-11e6-9b61-fb188c06f380","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl"},"failures":[4,5],"tindex":"72c98745-3f12-11e6-9b61-4944a79b2ed4","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == (-1)) {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c9ae56-3f12-11e6-9b61-7b39432a43fe","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[6],"tindex":"72c9ae57-3f12-11e6-9b61-9364f6a91f10","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c9d568-3f12-11e6-9b61-4f9c6456eebd","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[7,8,9,10,11,12,13,14],"tindex":"72c9d569-3f12-11e6-9b61-e355836d20f7","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"tindex":"72c9d56a-3f12-11e6-9b61-9bb8fb04b4e7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex < 0) {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c9fc7b-3f12-11e6-9b61-1bb153710275","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl"},"failures":[299],"tindex":"72cb5c0c-3f12-11e6-9b61-731d84119752","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start <= end) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"end","newCapacity":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cb5c0d-3f12-11e6-9b61-5ff3c886aed8","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl"},"failures":[300,301],"tindex":"72cb5c0e-3f12-11e6-9b61-d75f84030699","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[37],"tindex":"72cb5c0f-3f12-11e6-9b61-67b7344d4a08","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[302,303],"tindex":"72cb8320-3f12-11e6-9b61-191c60678d67","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (null == key) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cb8321-3f12-11e6-9b61-8d29135b5470","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cb8322-3f12-11e6-9b61-15b319ee9944","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"72cb8323-3f12-11e6-9b61-9be288a84f4a","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[373,374],"tindex":"72cb8324-3f12-11e6-9b61-23a5950ff363","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == null) {\n                {\n                    return (doRemoveKey(o)) != null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cbaa35-3f12-11e6-9b61-1b95b88801f4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"72cc1f66-3f12-11e6-9b61-2b8b0ba3f95d","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl"},"failures":[375],"tindex":"72cc1f67-3f12-11e6-9b61-abb9256e59a8","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > size) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (size > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                    } \n                    if (size <= 0) {\n                        throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n                    } \n                    return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[376],"tindex":"72cc1f68-3f12-11e6-9b61-e977d156b541","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[377],"tindex":"72cc1f69-3f12-11e6-9b61-a76d65c9f74b","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (inputCollection instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cc467a-3f12-11e6-9b61-5d0cfaeb56c0","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cc467b-3f12-11e6-9b61-6f45f75918bd","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == (-1)) {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[214],"tindex":"72cc467c-3f12-11e6-9b61-f91392942827","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cc467d-3f12-11e6-9b61-3fad4f7c7a49","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cc467e-3f12-11e6-9b61-99cd7a7e3acf","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl"},"failures":[],"tindex":"72cc6d8f-3f12-11e6-9b61-a1790380e906","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl"},"failures":[378,379,380,381,382,383,384,385,386,387,388,389],"tindex":"72cc6d90-3f12-11e6-9b61-91631b99d976","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[390],"tindex":"72cd09d1-3f12-11e6-9b61-e9a5b9c024db","method":{"position":"org.apache.commons.collections4.IteratorUtils:260","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[391,392,393,394],"tindex":"72cd7f02-3f12-11e6-9b61-51f6cb1a7263","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[395,396],"tindex":"72cd7f03-3f12-11e6-9b61-db0c791a9fc6","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,333,334,335,340,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"72cd7f04-3f12-11e6-9b61-232e6d596a44","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cda615-3f12-11e6-9b61-bdc6c17dcadc","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl"},"failures":[],"tindex":"72cda616-3f12-11e6-9b61-1b4a0e8cba90","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"72cda617-3f12-11e6-9b61-a131624d3f73","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[6],"tindex":"72cda618-3f12-11e6-9b61-8b779c79674c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689],"tindex":"72cda619-3f12-11e6-9b61-3ba849d9a3dc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdcd2a-3f12-11e6-9b61-85e81115868d","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = (size()) - 1;\n                    int int = 1;\n                    while (i >= 0) {\n                        final java.lang.Object java.lang.Object = get(i);\n                        if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                            return n;\n                        } \n                        i--;\n                        n++;\n                    }\n                    return -1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdcd2b-3f12-11e6-9b61-6d4f0a418daf","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:587","type":"CtMethodImpl","sourcecode":"protected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex <= 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(subList , fromIndex);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdcd2c-3f12-11e6-9b61-d5a60bdf103a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"72cdcd2d-3f12-11e6-9b61-05aa6f9d0dba","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl"},"failures":[690],"tindex":"72cdcd2e-3f12-11e6-9b61-114d1d001f99","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdcd2f-3f12-11e6-9b61-63d873aa84ed","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[691],"tindex":"72cdcd30-3f12-11e6-9b61-61b027ae299d","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl"},"failures":[692],"tindex":"72cdf441-3f12-11e6-9b61-ed1dc6007bb9","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll.isEmpty()) {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdf442-3f12-11e6-9b61-6f1a9671e763","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdf443-3f12-11e6-9b61-6b7960eaca94","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl"},"failures":[693,694],"tindex":"72cdf444-3f12-11e6-9b61-2996ea29f7a4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (!(prior.isInternalNode())) {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"prior"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[695,696,697,698,699,700,701,702,703,704,705],"tindex":"72cdf445-3f12-11e6-9b61-cb9d73857581","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cdf446-3f12-11e6-9b61-0f3a439774f0","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce1b57-3f12-11e6-9b61-833b091787a6","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > size) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (size > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (list == null) {\n                        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                    } \n                    if (size <= 0) {\n                        throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n                    } \n                    return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size","index":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[706],"tindex":"72ce1b58-3f12-11e6-9b61-a16c152bab1a","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce1b59-3f12-11e6-9b61-5fb34cc2f2ba","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce1b5a-3f12-11e6-9b61-df6540e0eae6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl"},"failures":[33],"tindex":"72ce1b5b-3f12-11e6-9b61-ff2dd333dc11","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce1b5c-3f12-11e6-9b61-51a52ff05400","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce426d-3f12-11e6-9b61-036ecc03384b","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl"},"failures":[707],"tindex":"72ce426e-3f12-11e6-9b61-599e349c3573","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce426f-3f12-11e6-9b61-3bde317b3029","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce4270-3f12-11e6-9b61-df91f33ef0c4","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce4271-3f12-11e6-9b61-01c9d655d834","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl"},"failures":[299],"tindex":"72ce4272-3f12-11e6-9b61-032c51d6487d","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[708],"tindex":"72ce6983-3f12-11e6-9b61-95663451dc06","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce6984-3f12-11e6-9b61-1b0f2a780abf","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ce6985-3f12-11e6-9b61-f96e634914bd","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if ((coll.size()) > 0) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl"},"failures":[378,379,709,710,711,712,713,714,715,716,717,381,718,719,382,383,384,385,720,721,722,723,724,725,726,727,728,386,387,388,389,729,730,731,732],"tindex":"72ce6986-3f12-11e6-9b61-7b5c4e4e4902","method":{"position":"org.apache.commons.collections4.list.TreeList:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (((fromIndex % fromIndex) != 0) || ((fromIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(fromIndex, 0, size());\n            return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(org.apache.commons.collections4.list.TreeList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"fromIndex","lengthInBits":"fromIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl"},"failures":[733],"tindex":"72ce6987-3f12-11e6-9b61-658200955725","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[734,735,736,737,738,739,740,741],"tindex":"72ce6988-3f12-11e6-9b61-a716e0f88e60","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl"},"failures":[],"tindex":"72ce9099-3f12-11e6-9b61-0b6550468121","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null ? value == null : nextElement.equals(p)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"value","nextElement":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtVariableReadImpl"},"failures":[742],"tindex":"72ce909a-3f12-11e6-9b61-9dd31f77ff51","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"foundCurrentElement":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl"},"failures":[584,585,743,586,587,744,588,745,746,589,747,748,590,749,750,596,597,751,598,599,752,600,753,754,601,755,756,602,757,758,603,604,759,605,606,760,607,761,762,608,763,764,609,765,766,610,611,767,612,613,768,614,769,770,615,771,772,616,773,774,775,617,618,776,619,777,620,778,779,780,781,782,650,783,784,785,786,651,652,787,788,653,789,654,790,791,655,656,792,793,794,795,796,797,798],"tindex":"72ce909b-3f12-11e6-9b61-afdfaaa7b0ea","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (!(bag.isEmpty())) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl"},"failures":[799,800,801,378,379,709,710,380,711,712,713,714,715,716,717,381,718,719,382,383,384,385,720,721,722,723,725,726,727,728,386,387,388,389,729,730],"tindex":"72ce909c-3f12-11e6-9b61-137a489475f6","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[802],"tindex":"72ce909d-3f12-11e6-9b61-2d12942a8c77","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ceb7ae-3f12-11e6-9b61-f3edaaba04a1","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[803],"tindex":"72ceb7af-3f12-11e6-9b61-df73181e040c","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72ceb7b0-3f12-11e6-9b61-398336e18707","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[299],"tindex":"72ceb7b1-3f12-11e6-9b61-512b387fad31","method":{"position":"org.apache.commons.collections4.IteratorUtils:364","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl"},"failures":[214,213,225,252,253,258,257,269,296,297],"tindex":"72ceb7b2-3f12-11e6-9b61-a798090f8c3f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"72cedec3-3f12-11e6-9b61-e33ba2fb8690","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[805,806,807],"tindex":"72cedec4-3f12-11e6-9b61-532347b75b74","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cedec5-3f12-11e6-9b61-135c8ae18539","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cedec6-3f12-11e6-9b61-5564e5b61408","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = (size()) - 1;\n                    int int = 1;\n                    while (i >= 0) {\n                        final java.lang.Object java.lang.Object = get(i);\n                        if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                            return n;\n                        } \n                        i--;\n                        n++;\n                    }\n                    return -1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cedec7-3f12-11e6-9b61-b76a17be7192","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[808],"tindex":"72cedec8-3f12-11e6-9b61-27f957f4800b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[809,810,811],"tindex":"72cf05d9-3f12-11e6-9b61-1ba9b40570ea","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[95,101,115,118],"tindex":"72cf05da-3f12-11e6-9b61-81f6574af18d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cf05db-3f12-11e6-9b61-df155275adbf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == null) {\n                {\n                    return (doRemoveKey(o)) != null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[812,813,814,815,816],"tindex":"72cf05dc-3f12-11e6-9b61-c761ce713322","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl"},"failures":[],"tindex":"72cf05dd-3f12-11e6-9b61-eb30b773ca78","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll.isEmpty()) {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"72cf2cee-3f12-11e6-9b61-19ff820f3abc","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,4,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,5,861,862,863,864,865,866,867,868,869],"tindex":"72cf2cef-3f12-11e6-9b61-ed31a25f3c4f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cf2cf0-3f12-11e6-9b61-8dc03aab8da4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72cf2cf1-3f12-11e6-9b61-67521ae7d1d2","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (inputCollection instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467323089718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}