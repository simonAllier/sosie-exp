{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":622,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":1129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":426,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":659,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":706,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":1410,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":1389,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":223,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSimpleSerialization":951,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":741,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":885,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1002,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":1158,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":359,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":1047,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":1153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":980,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":1378,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":1183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":630,"org.apache.commons.collections4.CollectionUtilsTest.collect":1228,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":71,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":872,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":1314,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":1186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":398,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":777,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":64,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":1278,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":1406,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":1164,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":1342,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":726,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":796,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":1316,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":770,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":458,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":1061,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":157,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":1095,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":591,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":1112,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":1014,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":831,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":1384,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":928,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":1130,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":1334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":1141,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":599,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":1068,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":626,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":1051,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":1265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":573,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":569,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":556,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":853,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":871,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":794,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":769,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":658,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":710,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":964,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":109,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":1351,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":43,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":1398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":1312,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":1026,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":1161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":324,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":867,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":1038,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":1207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":292,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":1064,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":318,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":1403,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":180,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":1240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":1319,"org.apache.commons.collections4.CollectionUtilsTest.intersection":66,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":351,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":404,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":913,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":1116,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":1295,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":18,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":212,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":585,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":892,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":348,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":1354,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":737,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":854,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":1231,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":1062,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":1236,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":817,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":1362,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":623,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":361,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":1017,"org.apache.commons.collections4.map.CompositeMapTest.testPut":70,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":589,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":1091,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":731,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":922,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":311,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":820,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":1024,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":967,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":761,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":1227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1290,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":1255,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":1059,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":140,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":684,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":782,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":1261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":433,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":79,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":1253,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":736,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":1010,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":1268,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":1189,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":1233,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":1209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":1324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":338,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":941,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":1090,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":287,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":358,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":26,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":254,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":1250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":609,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":852,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":383,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":653,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":1371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":38,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":67,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":792,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":1143,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":686,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":480,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":1297,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":86,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":1148,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":94,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":898,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":1127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":1117,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":209,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":837,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":1135,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":756,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":656,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":1335,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":1395,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":1073,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":936,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":101,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":1344,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":509,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":707,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":128,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":387,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":1075,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":938,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":605,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":855,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":1131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":1132,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":1166,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":1133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":341,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":766,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":136,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":814,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":691,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":489,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":1078,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":47,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":253,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":1109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":1045,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":1347,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":301,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":1169,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":669,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":1222,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":548,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":344,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":1119,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":921,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":1063,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":90,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":424,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":421,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":1349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":571,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":216,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":1098,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":1367,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":851,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":1320,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":1196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":619,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":1037,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":134,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":785,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":738,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":1089,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":513,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":555,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":600,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":1260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":628,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":1355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":417,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":700,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":1178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":621,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":1013,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":735,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":841,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":1277,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":118,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":34,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":269,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":33,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":32,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":1269,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":200,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":1009,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.map.LRUMapTest.testReset":1331,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":518,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":1160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":286,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":500,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":1069,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":1307,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":107,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":395,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":935,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":1025,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":697,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":1303,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1004,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":768,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":1139,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":616,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":693,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":1251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":1315,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsSelfHashCode":953,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":474,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":501,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":1337,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":985,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":268,"org.apache.commons.collections4.map.LinkedMapTest.testReset":683,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":482,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":483,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":812,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":725,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":1352,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":481,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":998,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":1193,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":195,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":1370,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":1115,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":774,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":906,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":396,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":919,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":235,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":764,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":1203,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":1176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":955,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":96,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":127,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1291,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":541,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":1369,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":375,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":1386,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":514,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":813,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":419,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":672,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":40,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":1156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":1285,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":1218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":1296,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":31,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":887,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":1057,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":401,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":808,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":1008,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":718,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":327,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":1302,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":1323,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":135,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":144,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":810,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":393,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":241,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":1259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":429,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":77,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":197,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":1083,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":960,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":103,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":806,"org.apache.commons.collections4.map.HashedMapTest.testClone":1241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":925,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":1018,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":279,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":779,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":1128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":590,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":981,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":1093,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":1276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":587,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":876,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":1175,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":786,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":799,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":1172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":432,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":39,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":549,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":1087,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":755,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":733,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":758,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":538,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":784,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":443,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":815,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":1005,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":544,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":778,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":414,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":473,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":461,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":1211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":447,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":488,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":760,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":179,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":715,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":714,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":829,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":75,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":716,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":1267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":625,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":692,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":1110,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":214,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":695,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":772,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":48,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":1144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":580,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":1023,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":440,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":724,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":1192,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":723,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":121,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testFullIterator":945,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":864,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":1216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":588,"org.apache.commons.collections4.map.LinkedMapTest.testClone":1238,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":1221,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":932,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":1385,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":1104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":805,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":1126,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":612,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":1195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":1309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":1136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":1310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":1311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":1107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":1106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":1105,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":1343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1035,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":133,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":1413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":1326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":604,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":1150,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":255,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":1397,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":1338,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":979,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":1333,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":463,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":460,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":1184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":1011,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":1402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":886,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":1097,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":215,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectEqualsSelf":947,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":1099,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":1120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":196,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":1208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":1042,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":1040,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":705,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":776,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":1249,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":934,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":597,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":1256,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":596,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":801,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":1020,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":496,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":982,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":1306,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":115,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":946,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":1380,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":889,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":297,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":408,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":920,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":1213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":1015,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":1084,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":1339,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":371,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":838,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":873,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":1199,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":1394,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":467,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":368,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":863,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":798,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":1034,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":849,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":1033,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":282,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":824,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":1032,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":983,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":1300,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":551,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":391,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":996,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":164,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":968,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":694,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":1179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":399,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":880,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":487,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":1070,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":456,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":560,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":1165,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":869,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":1388,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":1082,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1332,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":978,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":1405,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":976,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":204,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":751,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":923,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":252,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":238,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":847,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":1242,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":1000,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":958,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":676,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":340,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":360,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":442,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":1173,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":673,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":797,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":1363,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":762,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":314,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":132,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":154,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":888,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":288,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":266,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":1048,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":1321,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":1237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":267,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":1215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":319,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":159,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":1194,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":1092,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":1204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":614,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":1361,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":734,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":1252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":583,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":1400,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":884,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":339,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":835,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":1360,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":775,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsContract":952,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":353,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":1391,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":1142,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":665,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":997,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":957,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":1368,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":634,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":882,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":554,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":1201,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":1350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":962,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":915,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1003,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":1271,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":929,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":131,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":1229,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":788,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":644,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":1416,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":1134,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":909,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":989,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":1219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":1317,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":236,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":129,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":1206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":637,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":698,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":702,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":1081,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":475,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":995,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":533,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":50,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":476,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":462,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":749,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":675,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1294,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":859,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":205,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":739,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":765,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":284,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":256,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":277,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":802,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":1121,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":1225,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":1305,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":262,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":858,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":870,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":1102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":1292,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":291,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":740,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":362,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":230,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":578,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":1086,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":559,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":1053,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":877,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":984,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":890,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":1308,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":336,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":415,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":828,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":826,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":1071,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":647,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":1085,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":646,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":1409,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":172,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalFullCollectionExists":948,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":381,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":1257,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":1191,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":1373,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":857,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":1374,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":1036,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":1407,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":285,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":345,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":771,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":507,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":927,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":261,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":1266,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":1248,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":1174,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":1274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":969,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":701,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":1205,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":900,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":671,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":917,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":992,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":1088,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":300,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":836,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":620,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":965,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":1055,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":112,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":260,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":918,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":337,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":743,"org.apache.commons.collections4.map.CompositeMapTest.testGet":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":202,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":247,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":273,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":1247,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":546,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":1060,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":1044,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":543,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":1050,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":1330,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":759,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":703,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":893,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":524,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":187,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":1396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":940,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":1273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":681,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":926,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":1275,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":1122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":666,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":58,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":712,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":1340,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":385,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":126,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":905,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalEmptyCollectionExists":950,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":972,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":1028,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":1021,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":1124,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":1151,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":1418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":49,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":184,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":418,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":437,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":804,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":1327,"org.apache.commons.collections4.CollectionUtilsTest.union":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":1113,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":234,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":1223,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":198,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":827,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":800,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":687,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":1080,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":1114,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":283,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":485,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":1041,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":825,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":566,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":1281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":635,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":763,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":1232,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":1145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":641,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":793,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":357,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":1263,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":1262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":349,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":627,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":1220,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":459,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":1264,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":346,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":470,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":1012,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":192,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":708,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":973,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":4,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":1246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":412,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":158,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":455,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":1058,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":193,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":1149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":970,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":651,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":649,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":832,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":868,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":289,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":910,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":1375,"org.apache.commons.collections4.map.LRUMapTest.testClone":1336,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":370,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":720,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":811,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":713,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":333,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":862,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":875,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":860,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":228,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":845,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":861,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":1341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":1293,"org.apache.commons.collections4.ListUtilsTest.testSubtract":81,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":522,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":1100,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":1138,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":1226,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":130,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":275,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":515,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":1188,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":265,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":850,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":422,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":298,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":503,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":937,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":502,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":721,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":1052,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":451,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":553,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":896,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":1022,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":633,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":1217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":1243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":464,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":84,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":894,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":895,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":305,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":108,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":916,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":217,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":83,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":208,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":376,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":563,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":818,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":956,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":975,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":1329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":438,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":908,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":508,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":1123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":660,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":987,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":434,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":1067,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":821,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":449,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":1006,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":1079,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":293,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":1382,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":1404,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":575,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":1046,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":657,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":822,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":780,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":73,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":1197,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":994,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":441,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":1214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":977,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":719,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":899,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":1417,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":879,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":155,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":521,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":520,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":124,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":519,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":745,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":1239,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":1377,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":1111,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":754,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":1282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1298,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":1348,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":632,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":1414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":1301,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":248,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":1280,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":1401,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":1383,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":1185,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":674,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":1157,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":866,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":1286,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":177,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":1170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":668,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":334,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":1181,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":1279,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":450,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":744,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":856,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":1412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":428,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":14,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":13,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":536,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":678,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":711,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":963,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":1137,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":709,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1001,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":961,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":1288,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":1270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":592,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":1318,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":878,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":331,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":1147,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":664,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":1379,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":313,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":373,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":930,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":1313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":1299,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":787,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":61,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":1346,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":8,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":9,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":10,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":531,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":907,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":23,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":439,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":189,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":971,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":667,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":790,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":1234,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":1390,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":1304,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":1054,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":662,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEqualsNull":949,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":999,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":199,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":1357,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":1376,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":163,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":302,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":142,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":1108,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":169,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":1393,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":1049,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":696,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":865,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":974,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":1372,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":568,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":138,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":379,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":783,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":303,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":748,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":911,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":1152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":42,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":1146,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":990,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":420,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":384,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":316,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":680,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":1399,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":93,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":607,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":1387,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":170,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":1125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":570,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":1167,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":403,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":844,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":933,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":1245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":1019,"org.apache.commons.collections4.set.CompositeSetTest.testContains":57,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":1198,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":1325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":335,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":1359,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":389,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":986,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":453,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":690,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":652,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":448,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":1159,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":542,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":991,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":1155,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":321,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":757,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":188,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":742,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":392,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":397,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":225,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":410,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":789,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":444,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":904,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":912,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":966,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":1224,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":173,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":567,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":227,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":846,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":823,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":582,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":1235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":1016,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":594,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":874,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":125,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":472,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":833,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":574,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":1272,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":848,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":901,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":903,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":374,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":902,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":1187,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":1168,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":1345,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":478,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":881,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":490,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":477,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":746,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":1066,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":1258,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":1415,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":1177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":222,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":1162,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":330,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":843,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":603,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":1408,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":1027,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":427,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":552,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":642,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":1254,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":993,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":114,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":1202,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":914,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":1043,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":171,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":1072,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":1077,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":347,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":1200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":1287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":1140,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":1358,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":416,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":1210,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":1411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":1007,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":328,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":959,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":1283,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":1029,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":1030,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":1171,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":931,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":1031,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":643,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":407,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":239,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":1065,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":372,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":1212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":1180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":655,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":1381,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":1039,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":1182,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":1101,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":1096,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":830,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":147,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSerializeDeserializeThenCompare":954,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":1356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":576,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":411,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":942,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":1190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":572,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":390,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":120,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":1154,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":511,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator":943,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":1094,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1230,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":545,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":728,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":897,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":1163,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":752,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":816,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":1328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":586,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":753,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":1392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":436,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":1366,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":795,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":88,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":682,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":1364,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":1365,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":366,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":924,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":363,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEmptyIterator":944,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":1118,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":54,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":176,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":565,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":729,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":1074,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":1289,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":988,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":781,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":1322,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":231,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":679,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":1056,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":1076,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":1353,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":939},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"1e318667-3f34-11e6-a046-e1855f037144","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[1,2],"tindex":"1e31d488-3f34-11e6-a046-711c0c66e5b5","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl"},"failures":[3],"tindex":"1e31d489-3f34-11e6-a046-355780fab41d","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"1e31fb9a-3f34-11e6-a046-f17af1799216","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"1e31fb9b-3f34-11e6-a046-dfebec80392a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3222ac-3f34-11e6-a046-ed0d841dde5a","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list != null) {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"1e3222ad-3f34-11e6-a046-8dd5d88c6544","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl"},"failures":[61,77,78,79,80,67,68,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"1e3222ae-3f34-11e6-a046-71fbc3c0d10c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies == 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[104,105,107,108,110,113,116,141,142,144,145,147,150,153,176,177,179,180,182,185,188,211,212,214,215,217,220,223,351,356,357,360,362,365,366],"tindex":"1e3249bf-3f34-11e6-a046-8d30b2d924db","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"1e3249c0-3f34-11e6-a046-bded3c184ce2","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e326fd1-3f34-11e6-a046-4bb5220b6cf6","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (((object == null) && (object == null)) || ((object != null) && (object.equals(current)))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"object","object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[88,113,281,306],"tindex":"1e326fd2-3f34-11e6-a046-e955e076f3f3","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,39,427,428,429,430,431,432,433,434,40,41,42,43,435,44,436,437,45,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,47,453,454,455,456,457,458,459,460,48,49,50,51,461,52,462,463,53,464,465],"tindex":"1e326fd3-3f34-11e6-a046-1317a4f42a23","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3296e4-3f34-11e6-a046-7167c32a0cce","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtInvocationImpl"},"failures":[],"tindex":"1e3296e5-3f34-11e6-a046-b597ef982ac8","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl"},"failures":[],"tindex":"1e3296e6-3f34-11e6-a046-2d6b20b27c66","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e32bdf7-3f34-11e6-a046-2da464c2c1b3","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e32bdf8-3f34-11e6-a046-efd97eebdca8","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl"},"failures":[466],"tindex":"1e32bdf9-3f34-11e6-a046-cf2d34ba239f","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[467],"tindex":"1e32bdfa-3f34-11e6-a046-b94038605eac","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[468,469,470,471,472,473,474],"tindex":"1e32bdfb-3f34-11e6-a046-0984b67ce014","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,8,9,10,490,491,11,492,493,494],"tindex":"1e32e50c-3f34-11e6-a046-238ba475f00a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[495,496,497,498,499,500,501],"tindex":"1e32e50d-3f34-11e6-a046-4db8b2eac1cb","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtVariableReadImpl"},"failures":[502,503,504],"tindex":"1e32e50e-3f34-11e6-a046-198632da887c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yWasLeftChild":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl"},"failures":[505,506,507,508],"tindex":"1e330c1f-3f34-11e6-a046-ebc555a7c7b4","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[509,510],"tindex":"1e330c20-3f34-11e6-a046-050f682cc246","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[511,512,513],"tindex":"1e330c21-3f34-11e6-a046-7141d76d4470","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[428],"tindex":"1e330c22-3f34-11e6-a046-8992d4f10dfd","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564],"tindex":"1e330c23-3f34-11e6-a046-314371d28ddf","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e333334-3f34-11e6-a046-63c90ca8d0d1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl"},"failures":[565,566],"tindex":"1e333335-3f34-11e6-a046-37cd07577fee","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[567],"tindex":"1e333336-3f34-11e6-a046-636d75c733ec","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663],"tindex":"1e333337-3f34-11e6-a046-0d050bf9b3f7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl"},"failures":[664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,12,13,14,717,718,719,720,721,722,723,724,15,725,726,727,728,729,730,731,732,733,734,735],"tindex":"1e335a48-3f34-11e6-a046-0d29b9eac441","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex > 0) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl"},"failures":[736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,55,56,57,58,59,60,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,579,582,583,585,586,587,588,590,595,602,606,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,468,469,470,471,472,878,473,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,0,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,91,93,118,128,130,155,163,165,190,198,200,225,230,231,232,233,234,237,238,239,248,250,271,275,284,286,307,311,321,323,344,348,354,371,387,388,389,390,391,394,395,396],"tindex":"1e335a49-3f34-11e6-a046-d1be9c7d8e2b","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e335a4a-3f34-11e6-a046-871f6979cadc","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33815b-3f34-11e6-a046-1fb93ca4168f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl"},"failures":[955,956,957],"tindex":"1e33815c-3f34-11e6-a046-6d9280f61a09","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33815d-3f34-11e6-a046-af0adcf15f94","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[958,959,960,961],"tindex":"1e33815e-3f34-11e6-a046-51df85230cbb","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[398,417,418,420,421,426,962,39,427,963,428,964,429,430,431,432,965,423,424,425,433,434,422,966,967,41,968,42,43,435,44,436,437,45,438,969,46,439,970,971,440,441,442,444,445,452,972,47,453,973,454,974,455,456,457,458,975,449,450,451,459,460,446,447,448,976,977,49,978,50,51,461,52,462,463,53,464,979,54,465,980,981],"tindex":"1e33815f-3f34-11e6-a046-171eda780702","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33a870-3f34-11e6-a046-b3c2be82da57","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:295","type":"CtInvocationImpl"},"failures":[],"tindex":"1e33a871-3f34-11e6-a046-e7ebbbd209f7","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"Queue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33a872-3f34-11e6-a046-e3d3698c7fb0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((1 <= index) && (otherCount <= index)) {\n                {\n                    if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n                    } \n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        final K K = entry.getKey();\n                        final boolean boolean = containsKey(key);\n                        put(index, entry.getKey(), entry.getValue());\n                        if (!contains) {\n                            index++;\n                        } else {\n                            index = (indexOf(entry.getKey())) + 1;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"index","otherCount":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33a873-3f34-11e6-a046-1d075b6b6a91","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl"},"failures":[],"tindex":"1e33cf84-3f34-11e6-a046-73610af8cf20","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33cf85-3f34-11e6-a046-2fdbe45bdd55","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33cf86-3f34-11e6-a046-bdc055820a56","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (count < count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","array":"object","length":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33cf87-3f34-11e6-a046-351df25f2233","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[982,905],"tindex":"1e33cf88-3f34-11e6-a046-6f1465c788fe","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33f699-3f34-11e6-a046-59083976396f","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[983,984],"tindex":"1e33f69a-3f34-11e6-a046-dbb84f163ed8","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[985],"tindex":"1e33f69b-3f34-11e6-a046-73ef2de8b2f0","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl"},"failures":[986],"tindex":"1e33f69c-3f34-11e6-a046-470472cf5084","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[987,988],"tindex":"1e33f69d-3f34-11e6-a046-9320f1741c19","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e33f69e-3f34-11e6-a046-b77f347a03d4","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[989,990,991,992,993,994,995,996,997,998,999,1000],"tindex":"1e341daf-3f34-11e6-a046-b1fc9e56bf74","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e341db0-3f34-11e6-a046-c1b9f3e4d5e2","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (bucket > bucket) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bucket","newCapacity":"bucket"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e341db1-3f34-11e6-a046-235a61ef848d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046],"tindex":"1e341db2-3f34-11e6-a046-91b9142f6986","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:51","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lengthInBits(final java.lang.String key) {\n    if (key == null) {\n        {\n            return key != null ? (key.length()) * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) : 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl"},"failures":[],"tindex":"1e341db3-3f34-11e6-a046-53041b271778","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bit)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bit"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e341db4-3f34-11e6-a046-b949e1c8a711","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl"},"failures":[1047,1048,1049,1050,785,1051,1052,1053,795,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,229,240,1086,1087,350,364,1088,1089,367,381,1090,1091,386,397,1092],"tindex":"1e3444c5-3f34-11e6-a046-d3ecb40919db","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3444c6-3f34-11e6-a046-41b4c88ad1cf","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[1093],"tindex":"1e3444c7-3f34-11e6-a046-c5bf55995fae","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[1094],"tindex":"1e3444c8-3f34-11e6-a046-8fff213a0ab8","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[940],"tindex":"1e3444c9-3f34-11e6-a046-0da81f4aa15b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl"},"failures":[1095,1096,1097],"tindex":"1e3444ca-3f34-11e6-a046-8575ca7c6100","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[1098],"tindex":"1e346bdb-3f34-11e6-a046-978999c627cd","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e346bdc-3f34-11e6-a046-3133ca12bab7","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[1099,1100,1101,1102,1103,955,956,1104,1105,1106,1107,957,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,4,5,6,1134,1135,1136,1137,1138,1139,1140,1141,7,1142,1143,1144],"tindex":"1e346bdd-3f34-11e6-a046-b366b01df5f1","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e346bde-3f34-11e6-a046-b916754c7460","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl"},"failures":[1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,823,824,825,1181,1182,1183,1184,826,827,828,829,830,831,832,833,834,835,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],"tindex":"1e346bdf-3f34-11e6-a046-572ec8c3c7fd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index <= 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[1218,1219,1220,1221,1222,1223,1224],"tindex":"1e346be0-3f34-11e6-a046-e78d9cb42414","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3492f1-3f34-11e6-a046-e5d681bf555d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key5"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3492f2-3f34-11e6-a046-755a31cdcf01","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3492f3-3f34-11e6-a046-9dbe43cfbafb","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e3492f4-3f34-11e6-a046-bbcd2d04b533","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((((object == null) && (object != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && (count != (args.int)))) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"args":"object","paramTypes":"object","length":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl"},"failures":[],"tindex":"1e34ba05-3f34-11e6-a046-65cc314d8889","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl"},"failures":[],"tindex":"1e34ba06-3f34-11e6-a046-c97fe0768253","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e34ba07-3f34-11e6-a046-33c7c0968c34","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e34ba08-3f34-11e6-a046-e9f6a466a5ce","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"label"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[1225,1226,1227],"tindex":"1e34ba09-3f34-11e6-a046-8d8e36817ebe","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e34ba0a-3f34-11e6-a046-8d07f9a07c45","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","proposedCapacity":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e34e11b-3f34-11e6-a046-0f21fa33dc26","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1582","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior != prior) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(prior);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"prior","h":"prior"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[1228],"tindex":"1e34e11c-3f34-11e6-a046-8f1d67612b80","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtBinaryOperatorImpl"},"failures":[1229],"tindex":"1e34e11d-3f34-11e6-a046-436d3463d124","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[1230],"tindex":"1e34e11e-3f34-11e6-a046-a180a9418091","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if (a == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e34e11f-3f34-11e6-a046-355b6ddc5711","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((1 <= index) && (otherCount <= index)) {\n                {\n                    if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n                    } \n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        final K K = entry.getKey();\n                        final boolean boolean = containsKey(key);\n                        put(index, entry.getKey(), entry.getValue());\n                        if (!contains) {\n                            index++;\n                        } else {\n                            index = (indexOf(entry.getKey())) + 1;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e350830-3f34-11e6-a046-e12c09238912","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e350831-3f34-11e6-a046-3d3a5197431d","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[1231],"tindex":"1e350832-3f34-11e6-a046-839fcee12d31","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtBinaryOperatorImpl"},"failures":[1232,1233,1234,549,1235,1236,682,1126,478,489,1237,1238,709,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,989,990,1253,991,992,993,1254,994,995,1255,1256,996,1257,1258,997,998,1259,1260,1261,1262,1263,1264,24,25,26,1265,1266,1267,1268,1269,1270,1271,1272,27,999,1000,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,28,29,30,1312,1313,1314,1315,1316,1317,1318,1319,31,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,728,729,730,731,1334,1335,732,733,734,735,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,32,33,34,1367,1368,1369,1370,1371,1372,1373,1374,35,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385],"tindex":"1e350833-3f34-11e6-a046-53218d8106f4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity >= proposedCapacity) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endIndex1":"proposedCapacity","index1":"proposedCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[1386,1387,1388,1389,1390,1391],"tindex":"1e350834-3f34-11e6-a046-f7259042ef3f","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e350835-3f34-11e6-a046-3bd9fdece069","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (toIndexExclusive < 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"toIndexExclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e352f46-3f34-11e6-a046-1bd223eeac3f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == entry) {\n        {\n            entry.setValue(newValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1e352f47-3f34-11e6-a046-fb6328dc2846","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[1392,1230],"tindex":"1e352f48-3f34-11e6-a046-a710564094a6","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (a.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl"},"failures":[1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418],"tindex":"1e352f49-3f34-11e6-a046-e9b60d3d8ec0","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((set.isEmpty()) == false) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[113,150,185,220,229,270,306,343,350,356,367,373,386],"tindex":"1e35565a-3f34-11e6-a046-59eeda65753a","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337570374/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}