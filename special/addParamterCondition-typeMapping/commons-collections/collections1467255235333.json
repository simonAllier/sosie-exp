{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":388,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":428,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":438,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":251,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":484,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":329,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":193,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":383,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":378,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":379,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":483,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":489,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":4,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":79,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":590,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":150,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":353,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":93,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":559,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":415,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":30,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":149,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":40,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":146,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":357,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":463,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":216,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":455,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":435,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":491,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":497,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":478,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":587,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":432,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":253,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":142,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":95,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":139,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":125,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":282,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":373,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":315,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":510,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":5,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":80,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":290,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":291,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":540,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":173,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":517,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":534,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":249,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":546,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":195,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":490,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":328,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":564,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":552,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":163,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":479,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":182,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":541,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":580,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":202,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":240,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":598,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":148,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":467,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":340,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":422,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":130,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":228,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":385,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":84,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":15,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":355,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":214,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":350,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":515,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":90,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":319,"org.apache.commons.collections4.list.TreeListTest.testRemove":115,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":413,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":462,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":76,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":416,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":594,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":171,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":393,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":223,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":351,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":53,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":220,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":222,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":322,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":444,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":488,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":496,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":487,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":299,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":144,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":8,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":200,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":501,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":367,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":419,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":348,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":169,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":309,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":33,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.list.TreeListTest.testListEquals":409,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":544,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":137,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":465,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":113,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":542,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":543,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":498,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":194,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":448,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":67,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":377,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":437,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":155,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":332,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":381,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":494,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":217,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":248,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":440,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":555,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":569,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":336,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":568,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":557,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":275,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":274,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":476,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":246,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":64,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":116,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":394,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":347,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":187,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":312,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":397,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":382,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":574,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":118,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":263,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":81,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":441,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":421,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":121,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":360,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":235,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":583,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":389,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":531,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":308,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":443,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":473,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":259,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":258,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":257,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":327,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":41,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":141,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":506,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":395,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":326,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":456,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":408,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":533,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":554,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":283,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":177,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":262,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":563,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":466,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":495,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":305,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":244,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":233,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":14,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":333,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":151,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":279,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":481,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":229,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":361,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":334,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":296,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":486,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":175,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":127,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":460,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":561,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":297,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":330,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":396,"org.apache.commons.collections4.SetUtilsTest.testHashCode":406,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":190,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":411,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":579,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":418,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":459,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":255,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":412,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":254,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":346,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":136,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":138,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":436,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":292,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":536,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":343,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":314,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":475,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":570,"org.apache.commons.collections4.list.TreeListTest.testBug35258":117,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":161,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":37,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":571,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":417,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":324,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":450,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":431,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":576,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":218,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":278,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":596,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":176,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":128,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":191,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":424,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":522,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":512,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":519,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":316,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":226,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":430,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":375,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":147,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":547,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":549,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":44,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":261,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":538,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":565,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":588,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":562,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":45,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":168,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":399,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":434,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":321,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":12,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":311,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":365,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":301,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":159,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":451,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":300,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":592,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":558,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":320,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":341,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":470,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":511,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":535,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":310,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":521,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":78,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":429,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":295,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":180,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":24,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":528,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":232,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":198,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":294,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":284,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":356,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":352,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":166,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":369,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":581,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":370,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":186,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":545,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":207,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":35,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":573,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":513,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":339,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":307,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":140,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":492,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":129,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":270,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":271,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":199,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":372,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":518,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":124,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":42,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":215,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":165,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":426,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":210,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":227,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":266},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"e27f00a8-3e6d-11e6-b542-f374943f6720","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (falseTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"falseTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"e27feb09-3e6d-11e6-b542-a3c88afe93c6","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if ((input instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"e280121a-3e6d-11e6-b542-ab9c0debfb15","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[],"tindex":"e280392b-3e6d-11e6-b542-0f0355d8a248","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"beyond"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[10,11,12],"tindex":"e2814a9c-3e6d-11e6-b542-d32dcf91f764","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[13,14],"tindex":"e28171ad-3e6d-11e6-b542-ffb00977f1d9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"e28198be-3e6d-11e6-b542-c78114f36474","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e28198bf-3e6d-11e6-b542-0ddb513921f8","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[15],"tindex":"e281bed0-3e6d-11e6-b542-9da266710ebb","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"e281bed1-3e6d-11e6-b542-25b509f24bf6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e281e5e2-3e6d-11e6-b542-cd8a4b6e95f5","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"e281e5e3-3e6d-11e6-b542-c7b62ec5a58b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[112,113],"tindex":"e281e5e4-3e6d-11e6-b542-319c5dffe8a1","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtInvocationImpl","sourcecode":"isSetValueChecking()"},"failures":[],"tindex":"e2820cf5-3e6d-11e6-b542-5f1b2da7cbfe","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"e2820cf6-3e6d-11e6-b542-9bf3611b7630","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtBinaryOperatorImpl","sourcecode":"iterator != (currentIterator)"},"failures":[],"tindex":"e2823407-3e6d-11e6-b542-1fde68fd93c1","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator","currentIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[70],"tindex":"e2823408-3e6d-11e6-b542-652ef5eece73","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[114,115,116,117,118,119,120,121,122],"tindex":"e2825b19-3e6d-11e6-b542-035cb2c7259e","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index == 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[123,124,125],"tindex":"e2825b1a-3e6d-11e6-b542-df2ba2b7dad6","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"e2825b1b-3e6d-11e6-b542-cb1ac7193a19","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n                    addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtBinaryOperatorImpl","sourcecode":"(h.parent.left) == h"},"failures":[],"tindex":"e282822c-3e6d-11e6-b542-6b77985871a0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (h == h) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"h","left":"h","h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"e282a93d-3e6d-11e6-b542-e5e3afea1c1e","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e282a93e-3e6d-11e6-b542-b179dcf8c2a2","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e282a93f-3e6d-11e6-b542-b3bcb3481603","method":{"position":"org.apache.commons.collections4.SplitMapUtils:100","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[154],"tindex":"e282d050-3e6d-11e6-b542-e17312a8500d","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[155,156,157,158,159,160,144,161,162,163,164,165,166,167,168,145,169,170,171,172,173,174,152,175,176,177,178,179,180,181,182,153,183,184,185,186,187,188],"tindex":"e2834581-3e6d-11e6-b542-951042b631fa","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[189],"tindex":"e2836c92-3e6d-11e6-b542-4b60b28d261c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"e28393a3-3e6d-11e6-b542-e96414569c62","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index == (-1)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"e28393a4-3e6d-11e6-b542-83013e648a10","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e283bab5-3e6d-11e6-b542-595a553252a5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"e283bab6-3e6d-11e6-b542-5b50ff40e9b9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[307,308,132,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,134,135,136,137,333,334,335,336,337,338,339,340,341,342],"tindex":"e283e1c7-3e6d-11e6-b542-5b22d9ba1ae5","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:331","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeRemoved(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[343,344],"tindex":"e283e1c8-3e6d-11e6-b542-3bf72a9fbfdc","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[345,346,347,348,349,350,351,352],"tindex":"e28408d9-3e6d-11e6-b542-a7786c38b998","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e28408da-3e6d-11e6-b542-034784a63ba5","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map.isEmpty()) {\n                        return ((java.util.Map<K, V>)(map));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n                    }\n                    return result;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[353,354],"tindex":"e2842feb-3e6d-11e6-b542-d5899d9ff61b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[355,197],"tindex":"e2842fec-3e6d-11e6-b542-f922df2b5bc1","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[356],"tindex":"e28456fd-3e6d-11e6-b542-8bdc6f57ce51","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[357],"tindex":"e28456fe-3e6d-11e6-b542-4fd29d566f33","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Number) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"e2847e0f-3e6d-11e6-b542-83baef7f80d0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[],"tindex":"e2847e10-3e6d-11e6-b542-2701607272cc","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[358],"tindex":"e284a521-3e6d-11e6-b542-177421323ba4","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[359,359,360,361,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,125,378,379,380,12,381,382],"tindex":"e284a522-3e6d-11e6-b542-8fcba89e6dd6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[383],"tindex":"e284cc33-3e6d-11e6-b542-f7d8c8b4db53","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[384],"tindex":"e284cc34-3e6d-11e6-b542-438c3c39a4b8","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[385],"tindex":"e284cc35-3e6d-11e6-b542-9bdff0fb79b3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[386],"tindex":"e284f346-3e6d-11e6-b542-d108944384d3","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"e284f347-3e6d-11e6-b542-993ccd5369c0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == node) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n                    addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[387,388,389,390],"tindex":"e2851a58-3e6d-11e6-b542-d183066b7a08","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 instanceof java.lang.Object[]) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"e2851a59-3e6d-11e6-b542-3b314951306e","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[391,392,393,394,358,395,396,397,398,399,400,401,402],"tindex":"e285416a-3e6d-11e6-b542-6f6b2374d621","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (null != key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"e285416b-3e6d-11e6-b542-c54dee0646c3","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(end)) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"e285416c-3e6d-11e6-b542-d1900f5fb4b7","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (listIterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"e285687d-3e6d-11e6-b542-eb42a27bcfdf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"e285687e-3e6d-11e6-b542-3b9c784359d8","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        changed |= remove(o);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[],"tindex":"e285687f-3e6d-11e6-b542-13721adbef8a","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"e2858f90-3e6d-11e6-b542-994530b20b6c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtVariableReadImpl","sourcecode":"result"},"failures":[],"tindex":"e2858f91-3e6d-11e6-b542-1fb0167f184f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:801","type":"CtMethodImpl","sourcecode":"void setRemoved(final boolean flag) {\n    if (flag) {\n        {\n            org.apache.commons.collections4.map.Flat3Map.FlatMapEntry.this.boolean = flag;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"flag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"e285b6a2-3e6d-11e6-b542-7b607f03ab76","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[403],"tindex":"e285b6a3-3e6d-11e6-b542-75b31d4f3517","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e285b6a4-3e6d-11e6-b542-772fd928d07e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl","sourcecode":"((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[119],"tindex":"e285ddb5-3e6d-11e6-b542-df77eb768a8d","method":{"position":"org.apache.commons.collections4.list.TreeList:517","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnRight(final int indexRelativeToMe, final E obj) {\n    if (((indexRelativeToMe % indexRelativeToMe) != 0) || ((indexRelativeToMe % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            if ((getRightSubTree()) == null) {\n                setRight(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((+1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode<E> , org.apache.commons.collections4.list.TreeList.AVLNode.this), null);\n            } else {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) < 0) {\n                (int)--;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"indexRelativeToMe","lengthInBits":"indexRelativeToMe","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"indexRelativeToMe"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[404,405],"tindex":"e28604c6-3e6d-11e6-b542-b30d30b03173","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e28604c7-3e6d-11e6-b542-294be776cf56","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e28604c8-3e6d-11e6-b542-e7424cf374d2","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index == (-1)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e2862bd9-3e6d-11e6-b542-3191101c78bf","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[],"tindex":"e2862bda-3e6d-11e6-b542-c7785dc5241a","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:382","type":"CtMethodImpl","sourcecode":"private boolean anyValueSet(final java.util.BitSet set) {\n    if (null != set) {\n        {\n            for (int int = 0 ; i < (set.size()) ; i++) {\n                if (set.get(i)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[406],"tindex":"e28652eb-3e6d-11e6-b542-b1c969b54c12","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if ((set.isEmpty()) && (set.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"set","pendingInsertions":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e28652ec-3e6d-11e6-b542-6b4513af7c47","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[407,121,408,120,409,410,411,412,413,414,122,415,416,417,418,419,420,421,422,423,424,425],"tindex":"e28652ed-3e6d-11e6-b542-d58f2d1fa43a","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 1) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    array[index] = E;\n                    if ((getLeftSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    if ((getRightSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl","sourcecode":"(m == 0) || (n == 0)"},"failures":[],"tindex":"e28679fe-3e6d-11e6-b542-15ebc09f2465","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if ((count == 0) || (count == 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"count","n":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"tindex":"e28679ff-3e6d-11e6-b542-e1b17cff1414","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[508],"tindex":"e286a110-3e6d-11e6-b542-750ef3ea96d4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"e286c821-3e6d-11e6-b542-bdc511025646","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"e286c822-3e6d-11e6-b542-a17afc1fdd87","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if ((removeCollection.size()) > (removeCollection.size())) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"removeCollection","list2":"removeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[509],"tindex":"e286ef33-3e6d-11e6-b542-b58e84b7effb","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[510,511],"tindex":"e286ef34-3e6d-11e6-b542-65853fd1c2c3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtVariableReadImpl","sourcecode":"foundCurrentElement"},"failures":[],"tindex":"e2871645-3e6d-11e6-b542-f50dd80f7bab","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"foundCurrentElement":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) == 0) && ((-d) <= k)) && (k <= d)"},"failures":[],"tindex":"e2871646-3e6d-11e6-b542-2da210569037","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 1) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    array[index] = E;\n                    if ((getLeftSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    if ((getRightSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[512,513,514,515,55,516],"tindex":"e2873d57-3e6d-11e6-b542-cf1a0903e7b9","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e28827b8-3e6d-11e6-b542-698192321a93","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"e28827b9-3e6d-11e6-b542-e32abc79cfe7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl","sourcecode":"(1 <= otherCount) && (otherCount <= myCount)"},"failures":[],"tindex":"e2884eca-3e6d-11e6-b542-3174b2a94d37","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((1 <= hashIndex) && (otherCount <= hashCode)) {\n        {\n            (int)++;\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n            addEntry(entry, hashIndex);\n            (int)++;\n            checkCapacity();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"hashCode","otherCount":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[517,518,519,520,521,522,523,524,525,526,527],"tindex":"e2884ecb-3e6d-11e6-b542-3b7a3717d428","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[528],"tindex":"e28875dc-3e6d-11e6-b542-951567f19bb4","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"e2889ced-3e6d-11e6-b542-f54a3a9cc323","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[],"tindex":"e2889cee-3e6d-11e6-b542-bbc7a347b242","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[529,530,531,532,533],"tindex":"e2889cef-3e6d-11e6-b542-ebc42ffb572d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"e288c400-3e6d-11e6-b542-63bf483e1f03","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[534,535],"tindex":"e2898751-3e6d-11e6-b542-815c8c787da0","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e289ae62-3e6d-11e6-b542-c5a9ab864179","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[373],"tindex":"e289ae63-3e6d-11e6-b542-17b76e55e680","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[388,389,390],"tindex":"e289d574-3e6d-11e6-b542-b933c99ec2fb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"e289d575-3e6d-11e6-b542-6d7f6643a567","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        changed |= remove(o);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[536,537],"tindex":"e289d576-3e6d-11e6-b542-93e854e32d03","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if ((list.size()) > (list.size())) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list","list2":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[],"tindex":"e289fc87-3e6d-11e6-b542-05d7b6face45","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e289fc88-3e6d-11e6-b542-bd9bdd26918d","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map.isEmpty()) {\n                        return ((java.util.Map<K, V>)(map));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n                    }\n                    return result;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[538],"tindex":"e289fc89-3e6d-11e6-b542-fb6e4e21e6e3","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[539,540,541,542,543,544,545,546,547,548,549,550,551,190,192,193,194,195,552,196,197,553,198,199,200,201,203,204,554,205,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,206,207,573,574,575,576,577,578,579,580,581,582,583,584,585,208,586,587,209,210,588,589,590,591,592,593,594,595,596,597,598,599],"tindex":"e28a239a-3e6d-11e6-b542-dd42e5e40f8b","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"e28a239b-3e6d-11e6-b542-89d8cb5a6b7f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if (fromIndex < fromIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249893827/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"fromIndex","index":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}