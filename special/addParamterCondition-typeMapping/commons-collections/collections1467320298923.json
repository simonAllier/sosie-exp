{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":349,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":505,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":350,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":557,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":181,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":849,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":289,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":544,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":466,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":257,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":238,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":706,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":304,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":605,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":660,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":670,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":524,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":175,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":631,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":784,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":871,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":446,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":212,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":351,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":34,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":826,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":130,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":618,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":595,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":217,"org.apache.commons.collections4.CollectionUtilsTest.select":591,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":312,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":852,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":866,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":739,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":178,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":203,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":301,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":872,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":512,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":911,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":420,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":244,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":569,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":44,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":661,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":46,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":682,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":729,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":27,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":280,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":822,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":294,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":803,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":724,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":422,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":188,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":666,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":719,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":646,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":542,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":403,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":825,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":123,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":653,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":185,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":108,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":655,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":654,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":166,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":718,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":592,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":366,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":498,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":426,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":128,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":129,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":127,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":147,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":218,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":485,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":814,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":624,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":303,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":827,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":202,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":450,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":752,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":647,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":452,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":252,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":250,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":700,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":299,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":734,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":787,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":571,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":850,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":587,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":266,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":833,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":229,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":199,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":628,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":873,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":830,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":539,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":790,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":358,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":511,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":579,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":430,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":137,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":564,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":759,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":713,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":750,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":693,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":648,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":451,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":518,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":589,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":612,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":182,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":811,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":716,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":753,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":640,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":679,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":749,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":309,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":658,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":797,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":843,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":162,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":778,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":703,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":745,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":810,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":809,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":133,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":808,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":264,"org.apache.commons.collections4.map.LRUMapTest.testReset":773,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":80,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":606,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":234,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":533,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":582,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":840,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":708,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":76,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":484,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":198,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":684,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":835,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":531,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":688,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":919,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":211,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":779,"org.apache.commons.collections4.map.LinkedMapTest.testReset":824,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":702,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":795,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":870,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":120,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":786,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":174,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":236,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":517,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":728,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":65,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":632,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":813,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":251,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":382,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":477,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":384,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":379,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":762,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":744,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":70,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":95,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":736,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":912,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":863,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":6,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":701,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":227,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":51,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":75,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":33,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":627,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":474,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":416,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":516,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":575,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":720,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":121,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":712,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":247,"org.apache.commons.collections4.map.HashedMapTest.testClone":593,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":737,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":585,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":424,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":678,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":880,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":493,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":615,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":676,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":146,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":530,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":869,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":161,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":823,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":190,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":356,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":412,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":776,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":1,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":577,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":748,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":645,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":365,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":687,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":889,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":888,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":887,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":388,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":380,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":419,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":857,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":856,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":858,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":22,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":132,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":884,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":834,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":460,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":462,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":838,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":602,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":293,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":541,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":914,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":397,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":398,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":316,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":396,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":868,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":867,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":467,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":552,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":829,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":220,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":336,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":677,"org.apache.commons.collections4.ListUtilsTest.testSelect":590,"org.apache.commons.collections4.map.LinkedMapTest.testClone":600,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":563,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":362,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":334,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":335,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":731,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":599,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":620,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":545,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":158,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":534,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":622,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":39,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":780,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":364,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":774,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":651,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":650,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":918,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":463,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":373,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":543,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":649,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":848,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":410,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":743,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":634,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":920,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":184,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":255,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":427,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":626,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":639,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":298,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":781,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":479,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":315,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":354,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":874,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":73,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":331,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":333,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":332,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":116,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":415,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":2,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":836,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":604,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":189,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":215,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":704,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":613,"org.apache.commons.collections4.map.LRUMapTest.testLRU":772,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":905,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":584,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":256,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":521,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":36,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":555,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":877,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":392,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":393,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":548,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":766,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":444,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":459,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":499,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":617,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":763,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":804,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":546,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":490,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":910,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":907,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":669,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":903,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":25,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":802,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":514,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":777,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":105,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":673,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":357,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":248,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":801,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":163,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":694,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":755,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":119,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":52,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":812,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":862,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":664,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":793,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":273,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":619,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":135,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":281,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":710,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":471,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":570,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":525,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":681,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":92,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":489,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":899,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":909,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":665,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":901,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":551,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":900,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":841,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":845,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":882,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":671,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":114,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":847,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":765,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":705,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":263,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":738,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":78,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":66,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":457,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":391,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":390,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":389,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":726,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":916,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":297,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":258,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":902,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":117,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":707,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":816,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":17,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":695,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":817,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":526,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":193,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":906,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":434,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":131,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":99,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":715,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":603,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":844,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":761,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":519,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":429,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":611,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":237,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":656,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":741,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":323,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":497,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":440,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":538,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":167,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":846,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":168,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":771,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":16,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":633,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":756,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":782,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":854,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":610,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":194,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":725,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.CollectionUtilsTest.union":623,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":488,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":565,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":732,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":239,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":372,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":828,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":425,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":219,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":283,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":319,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":904,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":328,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":667,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":330,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":549,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":443,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":125,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":124,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":550,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":644,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":733,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":126,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":879,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":501,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":683,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":913,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":851,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":377,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":405,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":831,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":406,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":554,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":261,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":355,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":897,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":896,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":895,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":819,"org.apache.commons.collections4.map.LRUMapTest.testClone":596,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":837,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":200,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":855,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":609,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":343,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":341,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":223,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":342,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":783,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":67,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":630,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":643,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":437,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":428,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":568,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":308,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":865,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":12,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":698,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":413,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":663,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":400,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":487,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":721,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":421,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":456,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":464,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":449,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":472,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":892,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":657,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":890,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":891,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":359,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":268,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":510,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":818,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":30,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":325,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":326,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":324,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":509,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":553,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":730,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":504,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":746,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":711,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":878,"org.apache.commons.collections4.map.SingletonMapTest.testClone":680,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":370,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":246,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":113,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":369,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":864,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":616,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":306,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":608,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":821,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":72,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":791,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":662,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":74,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":764,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":59,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":418,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":378,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":572,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":758,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":495,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":243,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":18,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":917,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":861,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":768,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":853,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":860,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":859,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":61,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":155,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":686,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":754,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":893,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":491,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":881,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":89,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":295,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":789,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":207,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":208,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":151,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":875,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":709,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":757,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":77,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":138,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":799,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":740,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":556,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":915,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":230,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":473,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":320,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":284,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":38,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":321,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":894,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":839,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":442,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":815,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":727,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":885,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":191,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":483,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":431,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":404,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":559,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":107,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":374,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":547,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":224,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":492,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":775,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":381,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":558,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":770,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":898,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":642,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":475,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":747,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":588,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":735,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":594,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":692,"org.apache.commons.collections4.CollectionUtilsTest.isFull":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":760,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":496,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":597,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":414,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":832,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":513,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":503,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":423,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":148,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":24,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":625,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":302,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":566,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":714,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":515,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":352,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":157,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":576,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":908,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":685,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":574,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":506,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":317,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":481,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":788,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":567,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":573,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":233,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":314,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":598,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":876,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":213,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":614,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":337,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":265,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":507,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":275,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":883,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":690,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":271,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":689,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":668,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":722,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":742,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":537,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":751,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":580,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":60,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":307,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":800,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":886,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":367,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":290,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":205,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":206,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":318,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":40,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":260,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":697,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":197,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":696,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":41,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":691,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":659,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":279,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":621,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":476,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":150,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":468,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":187,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":327,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":183,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":11,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":675,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":807,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":376,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":723,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":805,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":806,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":447,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":43,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":272,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":842,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":235,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":13,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":249,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":417,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":313,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":638,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":769,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":652,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":796},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"5f6e4f98-3f05-11e6-8777-3b5dc8249b77","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex > 0) {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl"},"failures":[222],"tindex":"5f6f6109-3f05-11e6-8777-2914003a1cf0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f6f881a-3f05-11e6-8777-3ff4371c4299","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index == (-1)) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f6f881b-3f05-11e6-8777-0b091f239c51","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl"},"failures":[223],"tindex":"5f6f881c-3f05-11e6-8777-2517be877e80","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[224,225],"tindex":"5f6faf2d-3f05-11e6-8777-cb0041cdd590","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f6fd63e-3f05-11e6-8777-e1936470a214","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (array != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[226],"tindex":"5f6fd63f-3f05-11e6-8777-8183b504dc52","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((remove.size()) != (remove.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"remove","b":"remove"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl"},"failures":[227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501],"tindex":"5f6ffd50-3f05-11e6-8777-29079caa771f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f702461-3f05-11e6-8777-01c4836fd5c6","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (defaultValue instanceof java.lang.Double) {\n                {\n                    java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtVariableReadImpl"},"failures":[],"tindex":"5f702462-3f05-11e6-8777-bbbaab2ab9bb","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"5f704b73-3f05-11e6-8777-79a115b042b5","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtBinaryOperatorImpl"},"failures":[502,503,504],"tindex":"5f704b74-3f05-11e6-8777-2f959ffd2541","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1195","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previousEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start) {\n    if ((start == null) || (start != start)) {\n        {\n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n            } \n            if ((start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == start) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    return start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    return followRight(start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            } else {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                while (((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (node == (node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                    node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n                if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                    return null;\n                } \n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                    if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                            return null;\n                        } else {\n                            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    } else {\n                        return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    }\n                } else {\n                    return followRight(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"start","start":"start","predecessor":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520],"tindex":"5f70c0a5-3f05-11e6-8777-f12a681bc565","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:310","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f70e7b6-3f05-11e6-8777-1bee535875d6","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loop":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f70e7b7-3f05-11e6-8777-a99cf29b3ce8","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f710ec8-3f05-11e6-8777-7b324efd21d6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7135d9-3f05-11e6-8777-651acdc4fc46","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtBinaryOperatorImpl"},"failures":[502,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540],"tindex":"5f7135da-3f05-11e6-8777-0172fab7ef65","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[260,261,541,542,543,544,545,262,263,546,547,264,548,265,549,550,266,267,551,552,553,554,555,556,557,558],"tindex":"5f715ceb-3f05-11e6-8777-e5372db4c8d6","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7183fc-3f05-11e6-8777-99177308b7d4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f71ab0d-3f05-11e6-8777-0dcb9722ed5c","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (trueTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"trueTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl"},"failures":[559,560,561,562,563,564,565,566],"tindex":"5f71ab0e-3f05-11e6-8777-4dcf9bcc1e0e","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.lang.String) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[567,568,569,570,571,572,573,574,575,576],"tindex":"5f71d21f-3f05-11e6-8777-dbf434f9e932","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[577],"tindex":"5f71d220-3f05-11e6-8777-3301f095a01b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f71f931-3f05-11e6-8777-eda26e6ec508","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f71f932-3f05-11e6-8777-511ea414b57d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtInvocationImpl"},"failures":[],"tindex":"5f722043-3f05-11e6-8777-81a240175ac2","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f722044-3f05-11e6-8777-dd740fd5136d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get != null) {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"get"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl"},"failures":[],"tindex":"5f724755-3f05-11e6-8777-090c0ca1e678","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1.isAssignableFrom(key1.getReturnType())) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key1","method":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl"},"failures":[578],"tindex":"5f724756-3f05-11e6-8777-11c87622d06b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f724757-3f05-11e6-8777-2d593f422121","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f726e68-3f05-11e6-8777-57b8925a64de","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f726e69-3f05-11e6-8777-3f10847f4b03","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtInvocationImpl"},"failures":[],"tindex":"5f726e6a-3f05-11e6-8777-595067b330df","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n    } \n    if (equator == null) {\n        throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n    } \n    final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n    final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n    final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n    script.visit(visitor);\n    return visitor.getSubSequence();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[579],"tindex":"5f72957b-3f05-11e6-8777-b74437d5c8f5","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl"},"failures":[580,581],"tindex":"5f72957c-3f05-11e6-8777-4739c741a32a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl"},"failures":[582],"tindex":"5f72957d-3f05-11e6-8777-a1b916dbc453","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[583,584],"tindex":"5f72bc8e-3f05-11e6-8777-85fac92ff037","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[585,586,587,588,589],"tindex":"5f72bc8f-3f05-11e6-8777-7ffc3ab1d5bf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[590,591],"tindex":"5f72bc90-3f05-11e6-8777-6d473bd3b1d0","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f72e3a1-3f05-11e6-8777-d970ad2e98c3","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f72e3a2-3f05-11e6-8777-b93daca4cf15","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n    for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        out.put(entry.getValue(), entry.getKey());\n    }\n    return out;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[592,593,36,77,119,594,595,159,596,597,598,199,599,600,601],"tindex":"5f72e3a3-3f05-11e6-8777-254cd9a22d84","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[602],"tindex":"5f730ab4-3f05-11e6-8777-371aefe26ab5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[603,604],"tindex":"5f730ab5-3f05-11e6-8777-3b36c67b0c46","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f730ab6-3f05-11e6-8777-111ec9932b7a","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7331c7-3f05-11e6-8777-95d321846652","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7331c8-3f05-11e6-8777-7dd5f99cf345","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl"},"failures":[605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620],"tindex":"5f7331c9-3f05-11e6-8777-55b68cf5d1fa","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[621,622],"tindex":"5f7358da-3f05-11e6-8777-55fe4441f338","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7358db-3f05-11e6-8777-6b52696cd606","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits >= lengthInBits) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits","index":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7358dc-3f05-11e6-8777-f76c6398f763","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (b instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f737fed-3f05-11e6-8777-2f4873321b8f","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtVariableReadImpl"},"failures":[],"tindex":"5f737fee-3f05-11e6-8777-ff422e38ab04","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yWasLeftChild":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[623,624,625],"tindex":"5f737fef-3f05-11e6-8777-051233ea0652","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[626,627,628,629,548,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644],"tindex":"5f73a700-3f05-11e6-8777-67aac32f3ec4","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl"},"failures":[645],"tindex":"5f73a701-3f05-11e6-8777-8d0a60aa20fb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == (-1)) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[646],"tindex":"5f73ce12-3f05-11e6-8777-192ca4a45f87","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f73ce13-3f05-11e6-8777-ef4f57c39417","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f73ce14-3f05-11e6-8777-d7caaf743743","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[647,648],"tindex":"5f73ce15-3f05-11e6-8777-f9de26b7ae44","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f73f526-3f05-11e6-8777-1bf1924db8a7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < (index / 2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f73f527-3f05-11e6-8777-11c44fe32738","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[649,650,651,652,653,654,655,656],"tindex":"5f741c38-3f05-11e6-8777-2d647d5d957e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl"},"failures":[657],"tindex":"5f741c39-3f05-11e6-8777-15a11251c5ce","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f74434a-3f05-11e6-8777-db250b6e7572","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (defaultValue instanceof java.lang.Double) {\n                {\n                    java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f74434b-3f05-11e6-8777-0d303e1bdc43","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map != null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f746a5c-3f05-11e6-8777-0bae243b850f","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f746a5d-3f05-11e6-8777-bd0266a03533","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f74916e-3f05-11e6-8777-3b2f8b23e91e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if ((((index % 2) == 0) && ((-index) <= index)) && (k <= d)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl"},"failures":[658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679],"tindex":"5f74916f-3f05-11e6-8777-fff9c149f27f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[680,681,682,683,684,685,686,687,688,689,690,691,692,693],"tindex":"5f74b880-3f05-11e6-8777-e329af51fdeb","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return key == null ? (getKey()) == null : key.equals(getKey());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f74b881-3f05-11e6-8777-e95a1ce3a9b9","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Boolean) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f74b882-3f05-11e6-8777-3b477ab84c0f","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"otherOffsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl"},"failures":[694,695,696,697],"tindex":"5f74df93-3f05-11e6-8777-1daa70540a44","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:116","type":"CtBinaryOperatorImpl"},"failures":[698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719],"tindex":"5f7506a4-3f05-11e6-8777-79311b99dfeb","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:224","type":"CtMethodImpl","sourcecode":"public void setComparator(final java.util.Comparator<? super E> comp) {\n    if (comp == null) {\n        {\n            checkNotStarted();\n            java.util.Comparator<? super E> = comp;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nonNullComparator":"comp"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7506a5-3f05-11e6-8777-932c2316749c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[720,448,449,721,450,722,723,724,451,725,726,642,452,727,728,729,730,731,732,733,734,735,736,737,453,454,738,455,456,739,457,740,741,458,742,743,459,744,745,746,747,748,749,750,751,752,753],"tindex":"5f7506a6-3f05-11e6-8777-61275c2bbf1e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,597,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,601,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872],"tindex":"5f752db7-3f05-11e6-8777-93847c353b1b","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"hashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f752db8-3f05-11e6-8777-534f577e52c5","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[227,228,873,874,875,876,877,878,246,247,879,880,881,549,882,283,284,883,884,312,313,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,358,359,902,903,904,603,604,905,906,907,449,723,726,727,467,468,908,909,910,490,491,911,912,913],"tindex":"5f7554c9-3f05-11e6-8777-c9a93a367561","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[503,502],"tindex":"5f7554ca-3f05-11e6-8777-31b738c2f4e9","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (bit > 0) {\n        {\n            return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"bit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[914,915],"tindex":"5f7554cb-3f05-11e6-8777-3f3b0ef0e1f4","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if (inputCollection instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtInvocationImpl"},"failures":[],"tindex":"5f757bdc-3f05-11e6-8777-b965b1c212ec","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f757bdd-3f05-11e6-8777-5355f6d41901","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return key == null ? (getKey()) == null : key.equals(getKey());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f757bde-3f05-11e6-8777-5fba40778cc2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl"},"failures":[],"tindex":"5f75a2ef-3f05-11e6-8777-b30fa4ea9f57","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(hashIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl"},"failures":[916,917],"tindex":"5f75a2f0-3f05-11e6-8777-6b04acaada39","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f75a2f1-3f05-11e6-8777-bf714fbee8c7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f772992-3f05-11e6-8777-19eb5d01f981","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 instanceof java.lang.Double) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key4"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[918],"tindex":"5f7750a3-3f05-11e6-8777-cb86486c98fe","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl"},"failures":[],"tindex":"5f7750a4-3f05-11e6-8777-27ea9166a063","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(dataSize)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"dataSize"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"5f7750a5-3f05-11e6-8777-bd8fd4b4b0cf","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f7777b6-3f05-11e6-8777-011cb04ac935","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtFieldReadImpl"},"failures":[919],"tindex":"5f7777b7-3f05-11e6-8777-d19b5941e422","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (doLoop) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"doLoop"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f779ec8-3f05-11e6-8777-3b42810063c4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[920],"tindex":"5f779ec9-3f05-11e6-8777-c1cc8aaeadf8","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"5f779eca-3f05-11e6-8777-a1d99a057460","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl"},"failures":[560,561,562,563,564,565,566],"tindex":"5f77c5db-3f05-11e6-8777-838c07c69733","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314967112/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}